\begin{code}
{-# OPTIONS --rewriting #-}
{-# OPTIONS --guardedness #-}

--open import bar
--module type_sys_props_tsquash (bar : Bar) where

open import Level using (Level ; 0‚Ñì ; Lift ; lift ; lower) renaming (suc to lsuc)
open import Agda.Builtin.Bool
open import Agda.Builtin.Equality
open import Agda.Builtin.Equality.Rewrite
open import Agda.Builtin.Sigma
open import Relation.Nullary
open import Relation.Unary using (Pred; Decidable)
open import Relation.Binary.PropositionalEquality using (sym ; subst)
open import Data.Product
open import Data.Product.Properties
open import Data.Sum
open import Data.Empty
open import Data.Maybe
open import Data.Unit using (‚ä§ ; tt)
open import Data.Nat using (‚Ñï ;  _<_ ; _‚â§_ ; _‚â•_ ; _‚â§?_ ; suc ; _+_ ; pred)
open import Data.Nat.Properties
open import Agda.Builtin.String
open import Agda.Builtin.String.Properties
open import Data.List
open import Data.List.Properties
open import Data.List.Relation.Unary.Any
open import Data.List.Membership.Propositional
open import Data.List.Membership.Propositional.Properties
open import Function.Bundles
open import Axiom.Extensionality.Propositional


open import util
open import calculus
open import terms
open import world
open import choice
open import compatible
open import getChoice
open import progress
open import choiceExt
open import newChoice
open import mod
open import encode


module type_sys_props_noseq {L : Level} (W : PossibleWorlds {L}) (M : Mod W)
                            (C : Choice) (K : Compatible {L} W C) (P : Progress {L} W C K) (G : GetChoice {L} W C K)
                            (X : ChoiceExt W C)
                            (N : NewChoice W C K G)
                            (E : Extensionality 0‚Ñì (lsuc(lsuc(L))))
                            (EC : Encode)
       where


open import worldDef(W)
open import computation(W)(C)(K)(G)(X)(N)(EC)
open import bar(W)
open import barI(W)(M)--(C)(K)(P)
open import forcing(W)(M)(C)(K)(P)(G)(X)(N)(E)(EC)
open import props0(W)(M)(C)(K)(P)(G)(X)(N)(E)(EC)
open import ind(W)(M)(C)(K)(P)(G)(X)(N)(E)(EC)

-- open import calculus
-- open import world
-- open import theory (bar)
-- open import props0 (bar)
-- open import ind2 (bar)
-- open import terms (bar)
\end{code}



\begin{code}[hide]
NOSEQneqPURE : ¬¨ NOSEQ ‚â° PURE
NOSEQneqPURE ()

NOSEQneqTERM : {c : Term} ‚Üí ¬¨ NOSEQ ‚â° TERM c
NOSEQneqTERM {c} ()

--NOSEQneqNAT : ¬¨ NOSEQ ‚â° NAT
--NOSEQneqNAT ()

NOSEQneqQNAT : ¬¨ NOSEQ ‚â° QNAT
NOSEQneqQNAT ()

--NOSEQneqTNAT : ¬¨ NOSEQ ‚â° TNAT
--NOSEQneqTNAT ()

NOSEQneqLT : {c d : Term} ‚Üí ¬¨ NOSEQ ‚â° LT c d
NOSEQneqLT {c} {d} ()

NOSEQneqQLT : {c d : Term} ‚Üí ¬¨ NOSEQ ‚â° QLT c d
NOSEQneqQLT {c} {d} ()

NOSEQneqFREE : ¬¨ NOSEQ ‚â° FREE
NOSEQneqFREE ()

NOSEQneqPI : {c : Term} {d : Term} ‚Üí ¬¨ NOSEQ ‚â° PI c d
NOSEQneqPI {c} {d} ()

NOSEQneqW : {c : Term} {d : Term} ‚Üí ¬¨ NOSEQ ‚â° WT c d
NOSEQneqW {c} {d} ()

NOSEQneqM : {c : Term} {d : Term} ‚Üí ¬¨ NOSEQ ‚â° MT c d
NOSEQneqM {c} {d} ()

NOSEQneqSUM : {c : Term} {d : Term} ‚Üí ¬¨ NOSEQ ‚â° SUM c d
NOSEQneqSUM {c} {d} ()

NOSEQneqSET : {c : Term} {d : Term} ‚Üí ¬¨ NOSEQ ‚â° SET c d
NOSEQneqSET {c} {d} ()

NOSEQneqISECT : {c : Term} {d : Term} ‚Üí ¬¨ NOSEQ ‚â° ISECT c d
NOSEQneqISECT {c} {d} ()

NOSEQneqTUNION : {c : Term} {d : Term} ‚Üí ¬¨ NOSEQ ‚â° TUNION c d
NOSEQneqTUNION {c} {d} ()

NOSEQneqUNION : {c : Term} {d : Term} ‚Üí ¬¨ NOSEQ ‚â° UNION c d
NOSEQneqUNION {c} {d} ()

--NOSEQneqQTUNION : {c : Term} {d : Term} ‚Üí ¬¨ NOSEQ ‚â° QTUNION c d
--NOSEQneqQTUNION {c} {d} ()

NOSEQneqEQ : {c d e : Term} ‚Üí ¬¨ NOSEQ ‚â° EQ c d e
NOSEQneqEQ {c} {d} {e} ()

NOSEQneqDUM : {c : Term} ‚Üí ¬¨ NOSEQ ‚â° DUM c
NOSEQneqDUM {c} ()

NOSEQneqFFDEFS : {c d : Term} ‚Üí ¬¨ NOSEQ ‚â° FFDEFS c d
NOSEQneqFFDEFS {c} {d} ()

NOSEQneqSUBSING : {b : Term} ‚Üí ¬¨ NOSEQ ‚â° SUBSING b
NOSEQneqSUBSING {b} ()

NOSEQneqLIFT : {c : Term} ‚Üí ¬¨ NOSEQ ‚â° LIFT c
NOSEQneqLIFT {c} ()

NOSEQneqTSQUASH : {c : Term} ‚Üí ¬¨ NOSEQ ‚â° TSQUASH c
NOSEQneqTSQUASH {c} ()

--NOSEQneqTTRUNC : {c : Term} ‚Üí ¬¨ NOSEQ ‚â° TTRUNC c
--NOSEQneqTTRUNC {c} ()

NOSEQneqNOWRITE : {c : Term} ‚Üí ¬¨ NOSEQ ‚â° NOWRITE c
NOSEQneqNOWRITE {c} ()

NOSEQneqNOREAD : {c : Term} ‚Üí ¬¨ NOSEQ ‚â° NOREAD c
NOSEQneqNOREAD {c} ()

NOSEQneqLOWER : {c : Term} ‚Üí ¬¨ NOSEQ ‚â° LOWER c
NOSEQneqLOWER {c} ()

NOSEQneqSHRINK : {c : Term} ‚Üí ¬¨ NOSEQ ‚â° SHRINK c
NOSEQneqSHRINK {c} ()

NOSEQneqUNIV : {n : ‚Ñï} ‚Üí ¬¨ NOSEQ ‚â° UNIV n
NOSEQneqUNIV {n} ()


typeSysConds-NOSEQ-tsym : (u : univs) (w : ùïé¬∑) (A B : CTerm)
                            (x : A #‚áõ #NOSEQ at w) (x‚ÇÅ : B #‚áõ #NOSEQ at w)
                            ‚Üí eqTypes u w B A
typeSysConds-NOSEQ-tsym u w A B x x‚ÇÅ = EQTNOSEQ x‚ÇÅ x



typeSysConds-NOSEQ-ttrans : (u : univs) (w : ùïé¬∑) (A B : CTerm)
                              (x : A #‚áõ #NOSEQ at w) (x‚ÇÅ : B #‚áõ #NOSEQ at w)
                              ‚Üí eqTypesTrans u w A B
typeSysConds-NOSEQ-ttrans u w A B x x‚ÇÅ C eqt = concl x x‚ÇÅ
  where
    ind : {u : univs} {w : ùïé¬∑} {T1 T2 : CTerm} (eqt : eqTypes u w T1 T2)
          ‚Üí ({u' : univs} {w' : ùïé¬∑} {T1' T2' : CTerm} (eqt'' : eqTypes u' w' T1' T2')
                 ‚Üí <Type eqt'' eqt ‚Üí (c‚ÇÅ : A #‚áõ #NOSEQ at w') (c‚ÇÇ : T1' #‚áõ #NOSEQ at w') ‚Üí eqTypes u' w' A T2')
          ‚Üí (c‚ÇÅ : A #‚áõ #NOSEQ at w) (c‚ÇÇ : T1 #‚áõ #NOSEQ at w) ‚Üí eqTypes u w A T2
--    ind {u} {w} {T1} {T2} (EQTNAT y y‚ÇÅ) ih c‚ÇÅ c‚ÇÇ = ‚ä•-elim (NOSEQneqNAT (‚áõ-val-det tt tt c‚ÇÇ y))
    ind {u} {w} {T1} {T2} (EQTQNAT y y‚ÇÅ) ih c‚ÇÅ c‚ÇÇ = ‚ä•-elim (NOSEQneqQNAT (‚áõ-val-det tt tt c‚ÇÇ y))
--    ind {u} {w} {T1} {T2} (EQTTNAT y y‚ÇÅ) ih c‚ÇÅ c‚ÇÇ = ‚ä•-elim (NOSEQneqTNAT (‚áõ-val-det tt tt c‚ÇÇ y))
    ind {u} {w} {T1} {T2} (EQTLT a1 a2 b1 b2 y y‚ÇÅ x‚ÇÑ x‚ÇÖ) ih c‚ÇÅ c‚ÇÇ = ‚ä•-elim (NOSEQneqLT (‚áõ-val-det tt tt c‚ÇÇ y))
    ind {u} {w} {T1} {T2} (EQTQLT a1 a2 b1 b2 y y‚ÇÅ x‚ÇÑ x‚ÇÖ) ih c‚ÇÅ c‚ÇÇ = ‚ä•-elim (NOSEQneqQLT (‚áõ-val-det tt tt c‚ÇÇ y))
    ind {u} {w} {T1} {T2} (EQTFREE y y‚ÇÅ) ih c‚ÇÅ c‚ÇÇ = ‚ä•-elim (NOSEQneqFREE (‚áõ-val-det tt tt c‚ÇÇ y))
    ind {u} {w} {T1} {T2} (EQTPI A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih c‚ÇÅ c‚ÇÇ = ‚ä•-elim (NOSEQneqPI (‚áõ-val-det tt tt c‚ÇÇ y))
    ind {u} {w} {T1} {T2} (EQTW A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih c‚ÇÅ c‚ÇÇ = ‚ä•-elim (NOSEQneqW (‚áõ-val-det tt tt c‚ÇÇ y))
    ind {u} {w} {T1} {T2} (EQTM A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih c‚ÇÅ c‚ÇÇ = ‚ä•-elim (NOSEQneqM (‚áõ-val-det tt tt c‚ÇÇ y))
    ind {u} {w} {T1} {T2} (EQTSUM A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih c‚ÇÅ c‚ÇÇ = ‚ä•-elim (NOSEQneqSUM (‚áõ-val-det tt tt c‚ÇÇ y))
    ind {u} {w} {T1} {T2} (EQTSET A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih c‚ÇÅ c‚ÇÇ = ‚ä•-elim (NOSEQneqSET (‚áõ-val-det tt tt c‚ÇÇ y))
    ind {u} {w} {T1} {T2} (EQTISECT A1 B1 A2 B2 y y‚ÇÅ eqtA eqtB extA extB) ih c‚ÇÅ c‚ÇÇ = ‚ä•-elim (NOSEQneqISECT (‚áõ-val-det tt tt c‚ÇÇ y))
    ind {u} {w} {T1} {T2} (EQTTUNION A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih c‚ÇÅ c‚ÇÇ = ‚ä•-elim (NOSEQneqTUNION (‚áõ-val-det tt tt c‚ÇÇ y))
    ind {u} {w} {T1} {T2} (EQTEQ a1 b1 a2 b2 A‚ÇÅ B‚ÇÅ y y‚ÇÅ eqtA exta eqt1 eqt2) ih c‚ÇÅ c‚ÇÇ = ‚ä•-elim (NOSEQneqEQ (‚áõ-val-det tt tt c‚ÇÇ y))
    ind {u} {w} {T1} {T2} (EQTUNION A1 B1 A2 B2 y y‚ÇÅ eqtA eqtB extA extB) ih c‚ÇÅ c‚ÇÇ = ‚ä•-elim (NOSEQneqUNION (‚áõ-val-det tt tt c‚ÇÇ y))
--    ind {u} {w} {T1} {T2} (EQTQTUNION A1 B1 A2 B2 y y‚ÇÅ eqtA eqtB extA extB) ih c‚ÇÅ c‚ÇÇ = ‚ä•-elim (NOSEQneqQTUNION (‚áõ-val-det tt tt c‚ÇÇ y))
    ind {u} {w} {T1} {T2} (EQTSQUASH A1 A2 y y‚ÇÅ eqtA extA) ih c‚ÇÅ c‚ÇÇ = ‚ä•-elim (NOSEQneqTSQUASH (‚áõ-val-det tt tt c‚ÇÇ y))
--    ind {u} {w} {T1} {T2} (EQTTRUNC A1 A2 y y‚ÇÅ eqtA extA) ih c‚ÇÅ c‚ÇÇ = ‚ä•-elim (NOSEQneqTTRUNC (‚áõ-val-det tt tt c‚ÇÇ y))
    ind {u} {w} {T1} {T2} (EQTNOWRITE A1 A2 y y‚ÇÅ eqtA extA) ih c‚ÇÅ c‚ÇÇ = ‚ä•-elim (NOSEQneqNOWRITE (‚áõ-val-det tt tt c‚ÇÇ y))
    ind {u} {w} {T1} {T2} (EQTNOREAD A1 A2 y y‚ÇÅ eqtA extA) ih c‚ÇÅ c‚ÇÇ = ‚ä•-elim (NOSEQneqNOREAD (‚áõ-val-det tt tt c‚ÇÇ y))
    ind {u} {w} {T1} {T2} (EQTSUBSING A1 A2 y y‚ÇÅ eqtA extA) ih c‚ÇÅ c‚ÇÇ = ‚ä•-elim (NOSEQneqSUBSING (‚áõ-val-det tt tt c‚ÇÇ y))
--    ind {u} {w} {T1} {T2} (EQTDUM A1 A2 y y‚ÇÅ eqtA) ih c‚ÇÅ c‚ÇÇ = ‚ä•-elim (NOSEQneqDUM (‚áõ-val-det tt tt c‚ÇÇ y))
    ind {u} {w} {T1} {T2} (EQTPURE y y‚ÇÅ) ih c‚ÇÅ c‚ÇÇ = ‚ä•-elim (NOSEQneqPURE (‚áõ-val-det tt tt c‚ÇÇ y))
    ind {u} {w} {T1} {T2} (EQTNOSEQ y y‚ÇÅ) ih c‚ÇÅ c‚ÇÇ = EQTNOSEQ c‚ÇÅ y‚ÇÅ
    ind {u} {w} {T1} {T2} (EQTTERM z‚ÇÅ z‚ÇÇ y y‚ÇÅ y‚ÇÇ) ih c‚ÇÅ c‚ÇÇ = ‚ä•-elim (NOSEQneqTERM (‚áõ-val-det tt tt c‚ÇÇ y))
    ind {u} {w} {T1} {T2} (EQFFDEFS A1 A2 x1 x2 y y‚ÇÅ eqtA extA eqx) ih c‚ÇÅ c‚ÇÇ = ‚ä•-elim (NOSEQneqFFDEFS (‚áõ-val-det tt tt c‚ÇÇ y))
    ind {u} {w} {T1} {T2} (EQTUNIV i p y y‚ÇÅ) ih c‚ÇÅ c‚ÇÇ = ‚ä•-elim (NOSEQneqUNIV (‚áõ-val-det tt tt c‚ÇÇ y))
    ind {u} {w} {T1} {T2} (EQTLIFT A1 A2 y y‚ÇÅ eqtA extA) ih c‚ÇÅ c‚ÇÇ = ‚ä•-elim (NOSEQneqLIFT (‚áõ-val-det tt tt c‚ÇÇ y))
    ind {u} {w} {T1} {T2} (EQTBAR y) ih c‚ÇÅ c‚ÇÇ = EQTBAR (‚àÄùïé-‚ñ°at W M y aw)
      where
        aw : ‚àÄùïé w (Œª w' e' ‚Üí (z : eqTypes u w' T1 T2) (at : at‚ñ°¬∑ y w' e' z) ‚Üí eqTypes u w' A T2)
        aw w1 e1 z at = ih {u} {w1} {T1} {T2} z (<Type1 z (EQTBAR y) (<TypeBAR u w T1 T2 y w1 e1 z at)) (‚áõ-mon e1 c‚ÇÅ) (‚áõ-mon e1 c‚ÇÇ)

    concl : (c‚ÇÅ : A #‚áõ #NOSEQ at w) (c‚ÇÅ : B #‚áõ #NOSEQ at w) ‚Üí eqTypes u w A C
    concl =
      ind<Type
        (Œª {u} {w} {T1} {T2} eqt' ‚Üí (c‚ÇÅ : A #‚áõ #NOSEQ at w) (c‚ÇÇ : T1 #‚áõ #NOSEQ at w) ‚Üí eqTypes u w A T2)
        ind
        eqt


typeSysConds-NOSEQ-isym : (u : univs) (w : ùïé¬∑) (A B : CTerm)
                            (x : A #‚áõ #NOSEQ at w) (x‚ÇÅ : B #‚áõ #NOSEQ at w)
                            ‚Üí eqInTypeSym u {_} {A} {B} (EQTNOSEQ x x‚ÇÅ)
typeSysConds-NOSEQ-isym u w A B x x‚ÇÅ f g eqa =
  Mod.‚àÄùïé-‚ñ°Func M h eqa
  where
    h : ‚àÄùïé w (Œª w' e' ‚Üí NOSEQeq f g
                       ‚Üí NOSEQeq g f)
    h w1 e1 (lift (n1 , n2 , m1 , m2)) = lift (n2 , n1 , m2 , m1)



typeSysConds-NOSEQ-itrans : (u : univs) (w : ùïé¬∑) (A B : CTerm)
                              (x : A #‚áõ #NOSEQ at w) (x‚ÇÅ : B #‚áõ #NOSEQ at w)
                              ‚Üí eqInTypeTrans u {_} {A} {B} (EQTNOSEQ x x‚ÇÅ)
typeSysConds-NOSEQ-itrans u w A B x x‚ÇÅ f g h ea1 ea2 =
  Mod.‚ñ°Func M (Mod.‚ñ°Func M (Mod.‚àÄùïé-‚ñ° M aw) ea1) ea2
  where
    aw : ‚àÄùïé w
              (Œª w' e ‚Üí NOSEQeq f g
                      ‚Üí NOSEQeq g h
                      ‚Üí NOSEQeq f h)
    aw w1 e1 (lift (p‚ÇÅ , p‚ÇÇ , p‚ÇÉ , p‚ÇÑ)) (lift (q‚ÇÅ , q‚ÇÇ , q‚ÇÉ , q‚ÇÑ)) = lift (p‚ÇÅ , q‚ÇÇ , p‚ÇÉ , q‚ÇÑ)



typeSysConds-NOSEQ-extl1 : (u : univs) (w : ùïé¬∑) (A B : CTerm)
                             (x : A #‚áõ #NOSEQ at w) (x‚ÇÅ : B #‚áõ #NOSEQ at w)
                             ‚Üí eqInTypeExtL1 {_} {_} {A} {B} (EQTNOSEQ x x‚ÇÅ)
typeSysConds-NOSEQ-extl1 u w A B x x‚ÇÅ C eqt' =
  concl x
  where
    ind : {u : univs} {w : ùïé¬∑} {T1 T2 : CTerm} (eqt : eqTypes u w T1 T2)
          ‚Üí ({u' : univs} {w' : ùïé¬∑} {T1' T2' : CTerm} (eqt'' : eqTypes u' w' T1' T2')
                 ‚Üí <Type eqt'' eqt ‚Üí (comp : T1' #‚áõ #NOSEQ at w') (a b : CTerm) ‚Üí ‚ñ°¬∑ w' (Œª w'' _ ‚Üí NOSEQeq a b) ‚Üí eqInType u' w' eqt'' a b)
          ‚Üí (comp : T1 #‚áõ #NOSEQ at w) (a b : CTerm) ‚Üí ‚ñ°¬∑ w (Œª w' _ ‚Üí NOSEQeq a b) ‚Üí eqInType u w eqt a b
--    ind {u} {w} {T1} {T2} (EQTNAT y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqNAT (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTQNAT y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqQNAT (‚áõ-val-det tt tt comp y))
--    ind {u} {w} {T1} {T2} (EQTTNAT y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqTNAT (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTLT a1 a2 b1 b2 y y‚ÇÅ x‚ÇÇ x‚ÇÉ) ih comp a b eqi = ‚ä•-elim (NOSEQneqLT (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTQLT a1 a2 b1 b2 y y‚ÇÅ x‚ÇÇ x‚ÇÉ) ih comp a b eqi = ‚ä•-elim (NOSEQneqQLT (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTFREE y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqFREE (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTPI A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqPI (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTW A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqW (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTM A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqM (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTSUM A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqSUM (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTSET A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqSET (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTISECT A1 B1 A2 B2 y y‚ÇÅ eqtA eqtB exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqISECT (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTTUNION A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqTUNION (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTEQ a1 b1 a2 b2 A B y y‚ÇÅ eqtA exta eqt1 eqt2) ih comp a b eqi = ‚ä•-elim (NOSEQneqEQ (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTUNION A1 B1 A2 B2 y y‚ÇÅ eqtA eqtB exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqUNION (‚áõ-val-det tt tt comp y))
--    ind {u} {w} {T1} {T2} (EQTQTUNION A1 B1 A2 B2 y y‚ÇÅ eqtA eqtB exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqQTUNION (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTSQUASH A1 A2 y y‚ÇÅ eqtA exta) ih comp a b eqi = ‚ä•-elim (NOSEQneqTSQUASH (‚áõ-val-det tt tt comp y))
--    ind {u} {w} {T1} {T2} (EQTTRUNC A1 A2 y y‚ÇÅ eqtA exta) ih comp a b eqi = ‚ä•-elim (NOSEQneqTTRUNC (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTNOWRITE A1 A2 y y‚ÇÅ eqtA exta) ih comp a b eqi = ‚ä•-elim (NOSEQneqNOWRITE (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTNOREAD A1 A2 y y‚ÇÅ eqtA exta) ih comp a b eqi = ‚ä•-elim (NOSEQneqNOREAD (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTSUBSING A1 A2 y y‚ÇÅ eqtA exta) ih comp a b eqi = ‚ä•-elim (NOSEQneqSUBSING (‚áõ-val-det tt tt comp y))
--    ind {u} {w} {T1} {T2} (EQTDUM A1 A2 y y‚ÇÅ eqtA) ih comp a b eqi = ‚ä•-elim (NOSEQneqDUM (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQFFDEFS A1 A2 x1 x2 y y‚ÇÅ eqtA exta eqx) ih comp a b eqi = ‚ä•-elim (NOSEQneqFFDEFS (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTPURE y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqPURE (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTNOSEQ y y‚ÇÅ) ih comp a b eqi = eqi
    ind {u} {w} {T1} {T2} (EQTTERM t1 t2 y y‚ÇÅ x‚ÇÇ) ih comp a b eqi = ‚ä•-elim (NOSEQneqTERM (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTUNIV i p y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqUNIV (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTLIFT A1 A2 y y‚ÇÅ eqtA exta) ih comp a b eqi = ‚ä•-elim (NOSEQneqLIFT (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTBAR x) ih comp a b eqi = Mod.‚àÄùïé-‚ñ°-‚ñ°' M x aw
      where
        aw : ‚àÄùïé w (Œª w' e' ‚Üí (x‚ÇÉ : eqTypes u w' T1 T2) (at : at‚ñ°¬∑ x w' e' x‚ÇÉ) ‚Üí eqInType u w' x‚ÇÉ a b)
        aw w1 e1 y at = ih {u} {w1} {T1} {T2} y (<Type1 y (EQTBAR x) (<TypeBAR u w T1 T2 x w1 e1 y at)) (‚àÄùïé-mon e1 comp) a b (Mod.‚Üë‚ñ° M eqi e1)

    concl : (comp : A #‚áõ #NOSEQ at w) (a b : CTerm) ‚Üí ‚ñ°¬∑ w (Œª w' _ ‚Üí NOSEQeq a b) ‚Üí eqInType u w eqt' a b
    concl =
      ind<Type
        (Œª {u} {w} {T1} {T2} eqt' ‚Üí (comp : T1 #‚áõ #NOSEQ at w) (a b : CTerm) ‚Üí ‚ñ°¬∑ w (Œª w' _ ‚Üí NOSEQeq a b) ‚Üí eqInType u w eqt' a b)
        ind
        eqt'



typeSysConds-NOSEQ-extl2 : (u : univs) (w : ùïé¬∑) (A B : CTerm)
                             (x : A #‚áõ #NOSEQ at w) (x‚ÇÅ : B #‚áõ #NOSEQ at w)
                             ‚Üí eqInTypeExtL2 {_} {_} {A} {B} (EQTNOSEQ x x‚ÇÅ)
typeSysConds-NOSEQ-extl2 u w A B x x‚ÇÅ C eqt' = concl x
  where
    ind : {u : univs} {w : ùïé¬∑} {T1 T2 : CTerm} (eqt : eqTypes u w T1 T2)
          ‚Üí ({u' : univs} {w' : ùïé¬∑} {T1' T2' : CTerm} (eqt'' : eqTypes u' w' T1' T2')
                 ‚Üí <Type eqt'' eqt ‚Üí (comp : T2' #‚áõ #NOSEQ at w') (a b : CTerm) ‚Üí ‚ñ°¬∑ w' (Œª w'' _ ‚Üí NOSEQeq a b) ‚Üí eqInType u' w' eqt'' a b)
          ‚Üí (comp : T2 #‚áõ #NOSEQ at w) (a b : CTerm) ‚Üí ‚ñ°¬∑ w (Œª w' _ ‚Üí NOSEQeq a b) ‚Üí eqInType u w eqt a b
--    ind {u} {w} {T1} {T2} (EQTNAT y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqNAT (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTQNAT y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqQNAT (‚áõ-val-det tt tt comp y‚ÇÅ))
--    ind {u} {w} {T1} {T2} (EQTTNAT y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqTNAT (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTLT a1 a2 b1 b2 y y‚ÇÅ x‚ÇÑ x‚ÇÖ) ih comp a b eqi = ‚ä•-elim (NOSEQneqLT (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTQLT a1 a2 b1 b2 y y‚ÇÅ x‚ÇÑ x‚ÇÖ) ih comp a b eqi = ‚ä•-elim (NOSEQneqQLT (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTFREE y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqFREE (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTPI A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqPI (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTW A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqW (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTM A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqM (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTSUM A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqSUM (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTSET A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqSET (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTISECT A1 B1 A2 B2 y y‚ÇÅ eqtA eqtB extA extB) ih comp a b eqi = ‚ä•-elim (NOSEQneqISECT (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTTUNION A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqTUNION (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTEQ a1 b1 a2 b2 A‚ÇÅ B‚ÇÅ y y‚ÇÅ eqtA exta eqt1 eqt2) ih comp a b eqi = ‚ä•-elim (NOSEQneqEQ (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTUNION A1 B1 A2 B2 y y‚ÇÅ eqtA eqtB extA extB) ih comp a b eqi = ‚ä•-elim (NOSEQneqUNION (‚áõ-val-det tt tt comp y‚ÇÅ))
--    ind {u} {w} {T1} {T2} (EQTQTUNION A1 B1 A2 B2 y y‚ÇÅ eqtA eqtB extA extB) ih comp a b eqi = ‚ä•-elim (NOSEQneqQTUNION (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTSQUASH A1 A2 y y‚ÇÅ eqtA extA) ih comp a b eqi = ‚ä•-elim (NOSEQneqTSQUASH (‚áõ-val-det tt tt comp y‚ÇÅ))
--    ind {u} {w} {T1} {T2} (EQTTRUNC A1 A2 y y‚ÇÅ eqtA extA) ih comp a b eqi = ‚ä•-elim (NOSEQneqTTRUNC (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTNOWRITE A1 A2 y y‚ÇÅ eqtA extA) ih comp a b eqi = ‚ä•-elim (NOSEQneqNOWRITE (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTNOREAD A1 A2 y y‚ÇÅ eqtA extA) ih comp a b eqi = ‚ä•-elim (NOSEQneqNOREAD (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTSUBSING A1 A2 y y‚ÇÅ eqtA extA) ih comp a b eqi = ‚ä•-elim (NOSEQneqSUBSING (‚áõ-val-det tt tt comp y‚ÇÅ))
--    ind {u} {w} {T1} {T2} (EQTDUM A1 A2 y y‚ÇÅ eqtA) ih comp a b eqi = ‚ä•-elim (NOSEQneqDUM (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTPURE y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqPURE (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTNOSEQ y y‚ÇÅ) ih comp a b eqi = eqi
    ind {u} {w} {T1} {T2} (EQTTERM z‚ÇÅ z‚ÇÇ y y‚ÇÅ y‚ÇÇ) ih comp a b eqi = ‚ä•-elim (NOSEQneqTERM (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQFFDEFS A1 A2 x1 x2 y y‚ÇÅ eqtA extA eqx) ih comp a b eqi = ‚ä•-elim (NOSEQneqFFDEFS (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTUNIV i p c‚ÇÅ c‚ÇÇ) ih comp a b eqi = ‚ä•-elim (NOSEQneqUNIV (‚áõ-val-det tt tt comp c‚ÇÇ))
    ind {u} {w} {T1} {T2} (EQTLIFT A1 A2 y y‚ÇÅ eqtA exta) ih comp a b eqi = ‚ä•-elim (NOSEQneqLIFT (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTBAR y) ih comp a b eqi = Mod.‚àÄùïé-‚ñ°-‚ñ°' M y aw
      where
        aw : ‚àÄùïé w (Œª w' e' ‚Üí (x : eqTypes u w' T1 T2) (at : at‚ñ°¬∑ y w' e' x) ‚Üí eqInType u w' x a b)
        aw w1 e1 z at = ih {u} {w1} {T1} {T2} z (<Type1 z (EQTBAR y) (<TypeBAR u w T1 T2 y w1 e1 z at)) (‚àÄùïé-mon e1 comp) a b (Mod.‚Üë‚ñ° M eqi e1)

    concl : (comp : A #‚áõ #NOSEQ at w) (a b : CTerm) ‚Üí ‚ñ°¬∑ w (Œª w' _ ‚Üí NOSEQeq a b) ‚Üí eqInType u w eqt' a b
    concl =
      ind<Type
        (Œª {u} {w} {T1} {T2} eqt' ‚Üí (comp : T2 #‚áõ #NOSEQ at w) (a b : CTerm) ‚Üí ‚ñ°¬∑ w (Œª w' _ ‚Üí NOSEQeq a b) ‚Üí eqInType u w eqt' a b)
        ind
        eqt'



typeSysConds-NOSEQ-extr1 : (u : univs) (w : ùïé¬∑) (A B : CTerm)
                             (x : A #‚áõ #NOSEQ at w) (x‚ÇÅ : B #‚áõ #NOSEQ at w)
                             ‚Üí eqInTypeExtR1 {_} {_} {A} {B} (EQTNOSEQ x x‚ÇÅ)
typeSysConds-NOSEQ-extr1 u w A B x x‚ÇÅ C eqt' = concl x‚ÇÅ
  where
    ind : {u : univs} {w : ùïé¬∑} {T1 T2 : CTerm} (eqt : eqTypes u w T1 T2)
          ‚Üí ({u' : univs} {w' : ùïé¬∑} {T1' T2' : CTerm} (eqt'' : eqTypes u' w' T1' T2')
                 ‚Üí <Type eqt'' eqt ‚Üí (comp : T2' #‚áõ #NOSEQ at w') (a b : CTerm) ‚Üí ‚ñ°¬∑ w' (Œª w'' _ ‚Üí NOSEQeq a b) ‚Üí eqInType u' w' eqt'' a b)
          ‚Üí (comp : T2 #‚áõ #NOSEQ at w) (a b : CTerm) ‚Üí ‚ñ°¬∑ w (Œª w' _ ‚Üí NOSEQeq a b) ‚Üí eqInType u w eqt a b
--    ind {u} {w} {T1} {T2} (EQTNAT y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqNAT (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTQNAT y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqQNAT (‚áõ-val-det tt tt comp y‚ÇÅ))
--    ind {u} {w} {T1} {T2} (EQTTNAT y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqTNAT (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTLT a1 a2 b1 b2 y y‚ÇÅ x‚ÇÑ x‚ÇÖ) ih comp a b eqi = ‚ä•-elim (NOSEQneqLT (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTQLT a1 a2 b1 b2 y y‚ÇÅ x‚ÇÑ x‚ÇÖ) ih comp a b eqi = ‚ä•-elim (NOSEQneqQLT (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTFREE y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqFREE (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTPI A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqPI (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTW A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqW (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTM A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqM (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTSUM A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqSUM (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTSET A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqSET (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTISECT A1 B1 A2 B2 y y‚ÇÅ eqtA eqtB extA extB) ih comp a b eqi = ‚ä•-elim (NOSEQneqISECT (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTTUNION A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqTUNION (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTEQ a1 b1 a2 b2 A‚ÇÅ B‚ÇÅ y y‚ÇÅ eqtA exta eqt1 eqt2) ih comp a b eqi = ‚ä•-elim (NOSEQneqEQ (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTUNION A1 B1 A2 B2 y y‚ÇÅ eqtA eqtB extA extB) ih comp a b eqi = ‚ä•-elim (NOSEQneqUNION (‚áõ-val-det tt tt comp y‚ÇÅ))
--    ind {u} {w} {T1} {T2} (EQTQTUNION A1 B1 A2 B2 y y‚ÇÅ eqtA eqtB extA extB) ih comp a b eqi = ‚ä•-elim (NOSEQneqQTUNION (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTSQUASH A1 A2 y y‚ÇÅ eqtA extA) ih comp a b eqi = ‚ä•-elim (NOSEQneqTSQUASH (‚áõ-val-det tt tt comp y‚ÇÅ))
--    ind {u} {w} {T1} {T2} (EQTTRUNC A1 A2 y y‚ÇÅ eqtA extA) ih comp a b eqi = ‚ä•-elim (NOSEQneqTTRUNC (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTNOWRITE A1 A2 y y‚ÇÅ eqtA extA) ih comp a b eqi = ‚ä•-elim (NOSEQneqNOWRITE (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTNOREAD A1 A2 y y‚ÇÅ eqtA extA) ih comp a b eqi = ‚ä•-elim (NOSEQneqNOREAD (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTSUBSING A1 A2 y y‚ÇÅ eqtA extA) ih comp a b eqi = ‚ä•-elim (NOSEQneqSUBSING (‚áõ-val-det tt tt comp y‚ÇÅ))
--    ind {u} {w} {T1} {T2} (EQTDUM A1 A2 y y‚ÇÅ eqtA) ih comp a b eqi = ‚ä•-elim (NOSEQneqDUM (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTPURE y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqPURE (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTNOSEQ y y‚ÇÅ) ih comp a b eqi = eqi
    ind {u} {w} {T1} {T2} (EQTTERM z‚ÇÅ z‚ÇÇ y y‚ÇÅ y‚ÇÇ) ih comp a b eqi = ‚ä•-elim (NOSEQneqTERM (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQFFDEFS A1 A2 x1 x2 y y‚ÇÅ eqtA extA eqx) ih comp a b eqi = ‚ä•-elim (NOSEQneqFFDEFS (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTUNIV i p c‚ÇÅ c‚ÇÇ) ih comp a b eqi = ‚ä•-elim (NOSEQneqUNIV (‚áõ-val-det tt tt comp c‚ÇÇ))
    ind {u} {w} {T1} {T2} (EQTLIFT A1 A2 y y‚ÇÅ eqtA exta) ih comp a b eqi = ‚ä•-elim (NOSEQneqLIFT (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTBAR y) ih comp a b eqi = Mod.‚àÄùïé-‚ñ°-‚ñ°' M y aw
      where
        aw : ‚àÄùïé w (Œª w' e' ‚Üí (x : eqTypes u w' T1 T2) (at : at‚ñ°¬∑ y w' e' x) ‚Üí eqInType u w' x a b)
        aw w1 e1 z at = ih {u} {w1} {T1} {T2} z (<Type1 z (EQTBAR y) (<TypeBAR u w T1 T2 y w1 e1 z at)) (‚àÄùïé-mon e1 comp) a b (Mod.‚Üë‚ñ° M eqi e1)

    concl : (comp : B #‚áõ #NOSEQ at w) (a b : CTerm) ‚Üí ‚ñ°¬∑ w (Œª w' _ ‚Üí NOSEQeq a b) ‚Üí eqInType u w eqt' a b
    concl =
      ind<Type
        (Œª {u} {w} {T1} {T2} eqt' ‚Üí (comp : T2 #‚áõ #NOSEQ at w) (a b : CTerm) ‚Üí ‚ñ°¬∑ w (Œª w' _ ‚Üí NOSEQeq a b) ‚Üí eqInType u w eqt' a b)
        ind
        eqt'



typeSysConds-NOSEQ-extr2 : (u : univs) (w : ùïé¬∑) (A B : CTerm)
                             (x : A #‚áõ #NOSEQ at w) (x‚ÇÅ : B #‚áõ #NOSEQ at w)
                             ‚Üí eqInTypeExtR2 {_} {_} {A} {B} (EQTNOSEQ x x‚ÇÅ)
typeSysConds-NOSEQ-extr2 u w A B x x‚ÇÅ C eqt' = concl x‚ÇÅ
  where
    ind : {u : univs} {w : ùïé¬∑} {T1 T2 : CTerm} (eqt : eqTypes u w T1 T2)
          ‚Üí ({u' : univs} {w' : ùïé¬∑} {T1' T2' : CTerm} (eqt'' : eqTypes u' w' T1' T2')
                 ‚Üí <Type eqt'' eqt ‚Üí (comp : T1' #‚áõ #NOSEQ at w') (a b : CTerm) ‚Üí ‚ñ°¬∑ w' (Œª w'' _ ‚Üí NOSEQeq a b) ‚Üí eqInType u' w' eqt'' a b)
          ‚Üí (comp : T1 #‚áõ #NOSEQ at w) (a b : CTerm) ‚Üí ‚ñ°¬∑ w (Œª w' _ ‚Üí NOSEQeq a b) ‚Üí eqInType u w eqt a b
--    ind {u} {w} {T1} {T2} (EQTNAT y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqNAT (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTQNAT y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqQNAT (‚áõ-val-det tt tt comp y))
--    ind {u} {w} {T1} {T2} (EQTTNAT y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqTNAT (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTLT a1 a2 b1 b2 y y‚ÇÅ x‚ÇÇ x‚ÇÉ) ih comp a b eqi = ‚ä•-elim (NOSEQneqLT (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTQLT a1 a2 b1 b2 y y‚ÇÅ x‚ÇÇ x‚ÇÉ) ih comp a b eqi = ‚ä•-elim (NOSEQneqQLT (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTFREE y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqFREE (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTPI A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqPI (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTW A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqW (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTM A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqM (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTSUM A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqSUM (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTSET A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqSET (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTISECT A1 B1 A2 B2 y y‚ÇÅ eqtA eqtB exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqISECT (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTTUNION A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqTUNION (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTEQ a1 b1 a2 b2 A B y y‚ÇÅ eqtA exta eqt1 eqt2) ih comp a b eqi = ‚ä•-elim (NOSEQneqEQ (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTUNION A1 B1 A2 B2 y y‚ÇÅ eqtA eqtB exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqUNION (‚áõ-val-det tt tt comp y))
--    ind {u} {w} {T1} {T2} (EQTQTUNION A1 B1 A2 B2 y y‚ÇÅ eqtA eqtB exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqQTUNION (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTSQUASH A1 A2 y y‚ÇÅ eqtA exta) ih comp a b eqi = ‚ä•-elim (NOSEQneqTSQUASH (‚áõ-val-det tt tt comp y))
--    ind {u} {w} {T1} {T2} (EQTTRUNC A1 A2 y y‚ÇÅ eqtA exta) ih comp a b eqi = ‚ä•-elim (NOSEQneqTTRUNC (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTNOWRITE A1 A2 y y‚ÇÅ eqtA exta) ih comp a b eqi = ‚ä•-elim (NOSEQneqNOWRITE (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTNOREAD A1 A2 y y‚ÇÅ eqtA exta) ih comp a b eqi = ‚ä•-elim (NOSEQneqNOREAD (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTSUBSING A1 A2 y y‚ÇÅ eqtA exta) ih comp a b eqi = ‚ä•-elim (NOSEQneqSUBSING (‚áõ-val-det tt tt comp y))
--    ind {u} {w} {T1} {T2} (EQTDUM A1 A2 y y‚ÇÅ eqtA) ih comp a b eqi = ‚ä•-elim (NOSEQneqDUM (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQFFDEFS A1 A2 x1 x2 y y‚ÇÅ eqtA exta eqx) ih comp a b eqi = ‚ä•-elim (NOSEQneqFFDEFS (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTPURE y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqPURE (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTNOSEQ y y‚ÇÅ) ih comp a b eqi = eqi
    ind {u} {w} {T1} {T2} (EQTTERM t1 t2 y y‚ÇÅ x‚ÇÇ) ih comp a b eqi = ‚ä•-elim (NOSEQneqTERM (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTUNIV i p y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqUNIV (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTLIFT A1 A2 y y‚ÇÅ eqtA exta) ih comp a b eqi = ‚ä•-elim (NOSEQneqLIFT (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTBAR x) ih comp a b eqi = Mod.‚àÄùïé-‚ñ°-‚ñ°' M x aw
      where
        aw : ‚àÄùïé w (Œª w' e' ‚Üí (x‚ÇÉ : eqTypes u w' T1 T2) (at : at‚ñ°¬∑ x w' e' x‚ÇÉ) ‚Üí eqInType u w' x‚ÇÉ a b)
        aw w1 e1 y at = ih {u} {w1} {T1} {T2} y (<Type1 y (EQTBAR x) (<TypeBAR u w T1 T2 x w1 e1 y at)) (‚àÄùïé-mon e1 comp) a b (Mod.‚Üë‚ñ° M eqi e1)

    concl : (comp : B #‚áõ #NOSEQ at w) (a b : CTerm) ‚Üí ‚ñ°¬∑ w (Œª w' _ ‚Üí NOSEQeq a b) ‚Üí eqInType u w eqt' a b
    concl =
      ind<Type
        (Œª {u} {w} {T1} {T2} eqt' ‚Üí (comp : T1 #‚áõ #NOSEQ at w) (a b : CTerm) ‚Üí ‚ñ°¬∑ w (Œª w' _ ‚Üí NOSEQeq a b) ‚Üí eqInType u w eqt' a b)
        ind
        eqt'



typeSysConds-NOSEQ-extrevl1 : (u : univs) (w : ùïé¬∑) (A B : CTerm)
                                (x : A #‚áõ #NOSEQ at w) (x‚ÇÅ : B #‚áõ #NOSEQ at w)
                                ‚Üí eqInTypeExtRevL1 {_} {_} {A} {B} (EQTNOSEQ x x‚ÇÅ)
typeSysConds-NOSEQ-extrevl1 u w A B x x‚ÇÅ C eqt' = concl x
  where
    ind : {u : univs} {w : ùïé¬∑} {T1 T2 : CTerm} (eqt : eqTypes u w T1 T2)
          ‚Üí ({u' : univs} {w' : ùïé¬∑} {T1' T2' : CTerm} (eqt'' : eqTypes u' w' T1' T2')
                 ‚Üí <Type eqt'' eqt ‚Üí (comp : T1' #‚áõ #NOSEQ at w') (a b : CTerm) ‚Üí eqInType u' w' eqt'' a b ‚Üí ‚ñ°¬∑ w' (Œª w'' _ ‚Üí NOSEQeq a b))
          ‚Üí (comp : T1 #‚áõ #NOSEQ at w) (a b : CTerm) ‚Üí eqInType u w eqt a b ‚Üí ‚ñ°¬∑ w (Œª w' _ ‚Üí NOSEQeq a b)
--    ind {u} {w} {T1} {T2} (EQTNAT y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqNAT (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTQNAT y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqQNAT (‚áõ-val-det tt tt comp y))
--    ind {u} {w} {T1} {T2} (EQTTNAT y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqTNAT (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTLT a1 a2 b1 b2 y y‚ÇÅ x‚ÇÇ x‚ÇÉ) ih comp a b eqi = ‚ä•-elim (NOSEQneqLT (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTQLT a1 a2 b1 b2 y y‚ÇÅ x‚ÇÇ x‚ÇÉ) ih comp a b eqi = ‚ä•-elim (NOSEQneqQLT (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTFREE y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqFREE (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTPI A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqPI (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTW A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqW (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTM A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqM (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTSUM A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqSUM (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTSET A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqSET (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTISECT A1 B1 A2 B2 y y‚ÇÅ eqtA eqtB exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqISECT (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTTUNION A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqTUNION (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTEQ a1 b1 a2 b2 A B y y‚ÇÅ eqtA exta eqt1 eqt2) ih comp a b eqi = ‚ä•-elim (NOSEQneqEQ (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTUNION A1 B1 A2 B2 y y‚ÇÅ eqtA eqtB exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqUNION (‚áõ-val-det tt tt comp y))
--    ind {u} {w} {T1} {T2} (EQTQTUNION A1 B1 A2 B2 y y‚ÇÅ eqtA eqtB exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqQTUNION (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTSQUASH A1 A2 y y‚ÇÅ eqtA exta) ih comp a b eqi = ‚ä•-elim (NOSEQneqTSQUASH (‚áõ-val-det tt tt comp y))
--    ind {u} {w} {T1} {T2} (EQTTRUNC A1 A2 y y‚ÇÅ eqtA exta) ih comp a b eqi = ‚ä•-elim (NOSEQneqTTRUNC (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTNOWRITE A1 A2 y y‚ÇÅ eqtA exta) ih comp a b eqi = ‚ä•-elim (NOSEQneqNOWRITE (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTNOREAD A1 A2 y y‚ÇÅ eqtA exta) ih comp a b eqi = ‚ä•-elim (NOSEQneqNOREAD (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTSUBSING A1 A2 y y‚ÇÅ eqtA exta) ih comp a b eqi = ‚ä•-elim (NOSEQneqSUBSING (‚áõ-val-det tt tt comp y))
--    ind {u} {w} {T1} {T2} (EQTDUM A1 A2 y y‚ÇÅ eqtA) ih comp a b eqi = ‚ä•-elim (NOSEQneqDUM (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQFFDEFS A1 A2 x1 x2 y y‚ÇÅ eqtA exta eqx) ih comp a b eqi = ‚ä•-elim (NOSEQneqFFDEFS (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTPURE y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqPURE (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTNOSEQ y y‚ÇÅ) ih comp a b eqi = eqi
    ind {u} {w} {T1} {T2} (EQTTERM t1 t2 y y‚ÇÅ x‚ÇÇ) ih comp a b eqi = ‚ä•-elim (NOSEQneqTERM (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTUNIV i p y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqUNIV (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTLIFT A1 A2 y y‚ÇÅ eqtA exta) ih comp a b eqi = ‚ä•-elim (NOSEQneqLIFT (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTBAR x) ih comp a b eqi = Mod.‚ñ°-idem M (Mod.‚àÄùïé-‚ñ°'-‚ñ° M x aw eqi)
      where
        aw0 : ‚àÄùïé w (Œª w' e' ‚Üí (z : eqTypes u w' T1 T2) (at : at‚ñ°¬∑ x w' e' z) ‚Üí eqInType u w' z a b
                             ‚Üí Mod.‚ñ° M w' (‚ÜëwPred (Œª w'' e ‚Üí NOSEQeq a b) e'))
        aw0 w1 e1 z at eqz = ih {u} {w1} {T1} {T2} z (<Type1 z (EQTBAR x) (<TypeBAR u w T1 T2 x w1 e1 z at)) (‚áõ-mon e1 comp) a b eqz

        aw : ‚àÄùïé w (Œª w' e' ‚Üí (z : eqTypes u w' T1 T2) (at : at‚ñ°¬∑ x w' e' z) ‚Üí eqInType u w' z a b
                            ‚Üí Mod.‚ñ° M w' (‚ÜëwPred' (Œª w'' e ‚Üí NOSEQeq a b) e'))
        aw w1 e1 z at eqz = Mod.‚àÄùïé-‚ñ°Func M (Œª w1 e1 z x ‚Üí z) (aw0 w1 e1 z at eqz)

    concl : (comp : A #‚áõ #NOSEQ at w) (a b : CTerm) ‚Üí eqInType u w eqt' a b ‚Üí ‚ñ°¬∑ w (Œª w' _ ‚Üí NOSEQeq a b)
    concl =
      ind<Type
        (Œª {u} {w} {T1} {T2} eqt' ‚Üí (comp : T1 #‚áõ #NOSEQ at w) (a b : CTerm) ‚Üí eqInType u w eqt' a b ‚Üí ‚ñ°¬∑ w (Œª w' _ ‚Üí NOSEQeq a b))
        ind
        eqt'



typeSysConds-NOSEQ-extrevl2 : (u : univs) (w : ùïé¬∑) (A B : CTerm)
                                (x : A #‚áõ #NOSEQ at w) (x‚ÇÅ : B #‚áõ #NOSEQ at w)
                                ‚Üí eqInTypeExtRevL2 {_} {_} {A} {B} (EQTNOSEQ x x‚ÇÅ)
typeSysConds-NOSEQ-extrevl2 u w A B x x‚ÇÅ C eqt' = concl x
  where
    ind : {u : univs} {w : ùïé¬∑} {T1 T2 : CTerm} (eqt : eqTypes u w T1 T2)
          ‚Üí ({u' : univs} {w' : ùïé¬∑} {T1' T2' : CTerm} (eqt'' : eqTypes u' w' T1' T2')
                 ‚Üí <Type eqt'' eqt ‚Üí (comp : T2' #‚áõ #NOSEQ at w') (a b : CTerm) ‚Üí eqInType u' w' eqt'' a b ‚Üí ‚ñ°¬∑ w' (Œª w'' _ ‚Üí NOSEQeq a b))
          ‚Üí (comp : T2 #‚áõ #NOSEQ at w) (a b : CTerm) ‚Üí eqInType u w eqt a b ‚Üí ‚ñ°¬∑ w (Œª w' _ ‚Üí NOSEQeq a b)
--    ind {u} {w} {T1} {T2} (EQTNAT y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqNAT (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTQNAT y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqQNAT (‚áõ-val-det tt tt comp y‚ÇÅ))
--    ind {u} {w} {T1} {T2} (EQTTNAT y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqTNAT (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTLT a1 a2 b1 b2 y y‚ÇÅ x‚ÇÇ x‚ÇÉ) ih comp a b eqi = ‚ä•-elim (NOSEQneqLT (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTQLT a1 a2 b1 b2 y y‚ÇÅ x‚ÇÇ x‚ÇÉ) ih comp a b eqi = ‚ä•-elim (NOSEQneqQLT (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTFREE y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqFREE (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTPI A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqPI (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTW A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqW (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTM A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqM (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTSUM A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqSUM (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTSET A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqSET (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTISECT A1 B1 A2 B2 y y‚ÇÅ eqtA eqtB exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqISECT (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTTUNION A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqTUNION (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTEQ a1 b1 a2 b2 A B y y‚ÇÅ eqtA exta eqt1 eqt2) ih comp a b eqi = ‚ä•-elim (NOSEQneqEQ (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTUNION A1 B1 A2 B2 y y‚ÇÅ eqtA eqtB exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqUNION (‚áõ-val-det tt tt comp y‚ÇÅ))
--    ind {u} {w} {T1} {T2} (EQTQTUNION A1 B1 A2 B2 y y‚ÇÅ eqtA eqtB exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqQTUNION (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTSQUASH A1 A2 y y‚ÇÅ eqtA exta) ih comp a b eqi = ‚ä•-elim (NOSEQneqTSQUASH (‚áõ-val-det tt tt comp y‚ÇÅ))
--    ind {u} {w} {T1} {T2} (EQTTRUNC A1 A2 y y‚ÇÅ eqtA exta) ih comp a b eqi = ‚ä•-elim (NOSEQneqTTRUNC (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTNOWRITE A1 A2 y y‚ÇÅ eqtA exta) ih comp a b eqi = ‚ä•-elim (NOSEQneqNOWRITE (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTNOREAD A1 A2 y y‚ÇÅ eqtA exta) ih comp a b eqi = ‚ä•-elim (NOSEQneqNOREAD (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTSUBSING A1 A2 y y‚ÇÅ eqtA exta) ih comp a b eqi = ‚ä•-elim (NOSEQneqSUBSING (‚áõ-val-det tt tt comp y‚ÇÅ))
--    ind {u} {w} {T1} {T2} (EQTDUM A1 A2 y y‚ÇÅ eqtA) ih comp a b eqi = ‚ä•-elim (NOSEQneqDUM (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQFFDEFS A1 A2 x1 x2 y y‚ÇÅ eqtA exta eqx) ih comp a b eqi = ‚ä•-elim (NOSEQneqFFDEFS (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTPURE y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqPURE (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTNOSEQ y y‚ÇÅ) ih comp a b eqi = eqi
    ind {u} {w} {T1} {T2} (EQTTERM t1 t2 y y‚ÇÅ x‚ÇÇ) ih comp a b eqi = ‚ä•-elim (NOSEQneqTERM (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTUNIV i p y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqUNIV (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTLIFT A1 A2 y y‚ÇÅ eqtA exta) ih comp a b eqi = ‚ä•-elim (NOSEQneqLIFT (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTBAR x) ih comp a b eqi = Mod.‚ñ°-idem M (Mod.‚àÄùïé-‚ñ°'-‚ñ° M x aw eqi)
      where
        aw0 : ‚àÄùïé w (Œª w' e' ‚Üí (z : eqTypes u w' T1 T2) (at : at‚ñ°¬∑ x w' e' z) ‚Üí eqInType u w' z a b
                             ‚Üí Mod.‚ñ° M w' (‚ÜëwPred (Œª w'' e ‚Üí NOSEQeq a b) e'))
        aw0 w1 e1 z at eqz = ih {u} {w1} {T1} {T2} z (<Type1 z (EQTBAR x) (<TypeBAR u w T1 T2 x w1 e1 z at)) (‚áõ-mon e1 comp) a b eqz

        aw : ‚àÄùïé w (Œª w' e' ‚Üí (z : eqTypes u w' T1 T2) (at : at‚ñ°¬∑ x w' e' z) ‚Üí eqInType u w' z a b
                            ‚Üí Mod.‚ñ° M w' (‚ÜëwPred' (Œª w'' e ‚Üí NOSEQeq a b) e'))
        aw w1 e1 z at eqz = Mod.‚àÄùïé-‚ñ°Func M (Œª w1 e1 z x ‚Üí z) (aw0 w1 e1 z at eqz)

    concl : (comp : A #‚áõ #NOSEQ at w) (a b : CTerm) ‚Üí eqInType u w eqt' a b ‚Üí ‚ñ°¬∑ w (Œª w' _ ‚Üí NOSEQeq a b)
    concl =
      ind<Type
        (Œª {u} {w} {T1} {T2} eqt' ‚Üí (comp : T2 #‚áõ #NOSEQ at w) (a b : CTerm) ‚Üí eqInType u w eqt' a b ‚Üí ‚ñ°¬∑ w (Œª w' _ ‚Üí NOSEQeq a b))
        ind
        eqt'



typeSysConds-NOSEQ-extrevr1 : (u : univs) (w : ùïé¬∑) (A B : CTerm)
                                (x : A #‚áõ #NOSEQ at w) (x‚ÇÅ : B #‚áõ #NOSEQ at w)
                                ‚Üí eqInTypeExtRevR1 {_} {_} {A} {B} (EQTNOSEQ x x‚ÇÅ)
typeSysConds-NOSEQ-extrevr1 u w A B x x‚ÇÅ C eqt' = concl x‚ÇÅ
  where
    ind : {u : univs} {w : ùïé¬∑} {T1 T2 : CTerm} (eqt : eqTypes u w T1 T2)
          ‚Üí ({u' : univs} {w' : ùïé¬∑} {T1' T2' : CTerm} (eqt'' : eqTypes u' w' T1' T2')
                 ‚Üí <Type eqt'' eqt ‚Üí (comp : T2' #‚áõ #NOSEQ at w') (a b : CTerm) ‚Üí eqInType u' w' eqt'' a b ‚Üí ‚ñ°¬∑ w' (Œª w'' _ ‚Üí NOSEQeq a b))
          ‚Üí (comp : T2 #‚áõ #NOSEQ at w) (a b : CTerm) ‚Üí eqInType u w eqt a b ‚Üí ‚ñ°¬∑ w (Œª w' _ ‚Üí NOSEQeq a b)
--    ind {u} {w} {T1} {T2} (EQTNAT y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqNAT (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTQNAT y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqQNAT (‚áõ-val-det tt tt comp y‚ÇÅ))
--    ind {u} {w} {T1} {T2} (EQTTNAT y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqTNAT (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTLT a1 a2 b1 b2 y y‚ÇÅ x‚ÇÇ x‚ÇÉ) ih comp a b eqi = ‚ä•-elim (NOSEQneqLT (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTQLT a1 a2 b1 b2 y y‚ÇÅ x‚ÇÇ x‚ÇÉ) ih comp a b eqi = ‚ä•-elim (NOSEQneqQLT (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTFREE y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqFREE (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTPI A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqPI (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTW A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqW (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTM A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqM (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTSUM A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqSUM (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTSET A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqSET (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTISECT A1 B1 A2 B2 y y‚ÇÅ eqtA eqtB exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqISECT (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTTUNION A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqTUNION (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTEQ a1 b1 a2 b2 A B y y‚ÇÅ eqtA exta eqt1 eqt2) ih comp a b eqi = ‚ä•-elim (NOSEQneqEQ (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTUNION A1 B1 A2 B2 y y‚ÇÅ eqtA eqtB exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqUNION (‚áõ-val-det tt tt comp y‚ÇÅ))
--    ind {u} {w} {T1} {T2} (EQTQTUNION A1 B1 A2 B2 y y‚ÇÅ eqtA eqtB exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqQTUNION (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTSQUASH A1 A2 y y‚ÇÅ eqtA exta) ih comp a b eqi = ‚ä•-elim (NOSEQneqTSQUASH (‚áõ-val-det tt tt comp y‚ÇÅ))
--    ind {u} {w} {T1} {T2} (EQTTRUNC A1 A2 y y‚ÇÅ eqtA exta) ih comp a b eqi = ‚ä•-elim (NOSEQneqTTRUNC (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTNOWRITE A1 A2 y y‚ÇÅ eqtA exta) ih comp a b eqi = ‚ä•-elim (NOSEQneqNOWRITE (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTNOREAD A1 A2 y y‚ÇÅ eqtA exta) ih comp a b eqi = ‚ä•-elim (NOSEQneqNOREAD (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTSUBSING A1 A2 y y‚ÇÅ eqtA exta) ih comp a b eqi = ‚ä•-elim (NOSEQneqSUBSING (‚áõ-val-det tt tt comp y‚ÇÅ))
--    ind {u} {w} {T1} {T2} (EQTDUM A1 A2 y y‚ÇÅ eqtA) ih comp a b eqi = ‚ä•-elim (NOSEQneqDUM (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQFFDEFS A1 A2 x1 x2 y y‚ÇÅ eqtA exta eqx) ih comp a b eqi = ‚ä•-elim (NOSEQneqFFDEFS (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTPURE y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqPURE (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTNOSEQ y y‚ÇÅ) ih comp a b eqi = eqi
    ind {u} {w} {T1} {T2} (EQTTERM t1 t2 y y‚ÇÅ x‚ÇÇ) ih comp a b eqi = ‚ä•-elim (NOSEQneqTERM (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTUNIV i p y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqUNIV (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTLIFT A1 A2 y y‚ÇÅ eqtA exta) ih comp a b eqi = ‚ä•-elim (NOSEQneqLIFT (‚áõ-val-det tt tt comp y‚ÇÅ))
    ind {u} {w} {T1} {T2} (EQTBAR x) ih comp a b eqi = Mod.‚ñ°-idem M (Mod.‚àÄùïé-‚ñ°'-‚ñ° M x aw eqi)
      where
        aw0 : ‚àÄùïé w (Œª w' e' ‚Üí (z : eqTypes u w' T1 T2) (at : at‚ñ°¬∑ x w' e' z) ‚Üí eqInType u w' z a b
                             ‚Üí Mod.‚ñ° M w' (‚ÜëwPred (Œª w'' e ‚Üí NOSEQeq a b) e'))
        aw0 w1 e1 z at eqz = ih {u} {w1} {T1} {T2} z (<Type1 z (EQTBAR x) (<TypeBAR u w T1 T2 x w1 e1 z at)) (‚áõ-mon e1 comp) a b eqz

        aw : ‚àÄùïé w (Œª w' e' ‚Üí (z : eqTypes u w' T1 T2) (at : at‚ñ°¬∑ x w' e' z) ‚Üí eqInType u w' z a b
                            ‚Üí Mod.‚ñ° M w' (‚ÜëwPred' (Œª w'' e ‚Üí NOSEQeq a b) e'))
        aw w1 e1 z at eqz = Mod.‚àÄùïé-‚ñ°Func M (Œª w1 e1 z x ‚Üí z) (aw0 w1 e1 z at eqz)

    concl : (comp : B #‚áõ #NOSEQ at w) (a b : CTerm) ‚Üí eqInType u w eqt' a b ‚Üí ‚ñ°¬∑ w (Œª w' _ ‚Üí NOSEQeq a b)
    concl =
      ind<Type
        (Œª {u} {w} {T1} {T2} eqt' ‚Üí (comp : T2 #‚áõ #NOSEQ at w) (a b : CTerm) ‚Üí eqInType u w eqt' a b ‚Üí ‚ñ°¬∑ w (Œª w' _ ‚Üí NOSEQeq a b))
        ind
        eqt'



typeSysConds-NOSEQ-extrevr2 : (u : univs) (w : ùïé¬∑) (A B : CTerm)
                                (x : A #‚áõ #NOSEQ at w) (x‚ÇÅ : B #‚áõ #NOSEQ at w)
                                ‚Üí eqInTypeExtRevR2 {_} {_} {A} {B} (EQTNOSEQ x x‚ÇÅ)
typeSysConds-NOSEQ-extrevr2 u w A B x x‚ÇÅ C eqt' = concl x‚ÇÅ
  where
    ind : {u : univs} {w : ùïé¬∑} {T1 T2 : CTerm} (eqt : eqTypes u w T1 T2)
          ‚Üí ({u' : univs} {w' : ùïé¬∑} {T1' T2' : CTerm} (eqt'' : eqTypes u' w' T1' T2')
                 ‚Üí <Type eqt'' eqt ‚Üí (comp : T1' #‚áõ #NOSEQ at w') (a b : CTerm) ‚Üí eqInType u' w' eqt'' a b ‚Üí ‚ñ°¬∑ w' (Œª w'' _ ‚Üí NOSEQeq a b))
          ‚Üí (comp : T1 #‚áõ #NOSEQ at w) (a b : CTerm) ‚Üí eqInType u w eqt a b ‚Üí ‚ñ°¬∑ w (Œª w' _ ‚Üí NOSEQeq a b)
--    ind {u} {w} {T1} {T2} (EQTNAT y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqNAT (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTQNAT y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqQNAT (‚áõ-val-det tt tt comp y))
--    ind {u} {w} {T1} {T2} (EQTTNAT y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqTNAT (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTLT a1 a2 b1 b2 y y‚ÇÅ x‚ÇÇ x‚ÇÉ) ih comp a b eqi = ‚ä•-elim (NOSEQneqLT (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTQLT a1 a2 b1 b2 y y‚ÇÅ x‚ÇÇ x‚ÇÉ) ih comp a b eqi = ‚ä•-elim (NOSEQneqQLT (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTFREE y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqFREE (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTPI A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqPI (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTW A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqW (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTM A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqM (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTSUM A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqSUM (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTSET A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqSET (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTISECT A1 B1 A2 B2 y y‚ÇÅ eqtA eqtB exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqISECT (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTTUNION A1 B1 A2 B2 y y‚ÇÅ eqta eqtb exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqTUNION (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTEQ a1 b1 a2 b2 A B y y‚ÇÅ eqtA exta eqt1 eqt2) ih comp a b eqi = ‚ä•-elim (NOSEQneqEQ (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTUNION A1 B1 A2 B2 y y‚ÇÅ eqtA eqtB exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqUNION (‚áõ-val-det tt tt comp y))
--    ind {u} {w} {T1} {T2} (EQTQTUNION A1 B1 A2 B2 y y‚ÇÅ eqtA eqtB exta extb) ih comp a b eqi = ‚ä•-elim (NOSEQneqQTUNION (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTSQUASH A1 A2 y y‚ÇÅ eqtA exta) ih comp a b eqi = ‚ä•-elim (NOSEQneqTSQUASH (‚áõ-val-det tt tt comp y))
--    ind {u} {w} {T1} {T2} (EQTTRUNC A1 A2 y y‚ÇÅ eqtA exta) ih comp a b eqi = ‚ä•-elim (NOSEQneqTTRUNC (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTNOWRITE A1 A2 y y‚ÇÅ eqtA exta) ih comp a b eqi = ‚ä•-elim (NOSEQneqNOWRITE (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTNOREAD A1 A2 y y‚ÇÅ eqtA exta) ih comp a b eqi = ‚ä•-elim (NOSEQneqNOREAD (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTSUBSING A1 A2 y y‚ÇÅ eqtA exta) ih comp a b eqi = ‚ä•-elim (NOSEQneqSUBSING (‚áõ-val-det tt tt comp y))
--    ind {u} {w} {T1} {T2} (EQTDUM A1 A2 y y‚ÇÅ eqtA) ih comp a b eqi = ‚ä•-elim (NOSEQneqDUM (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQFFDEFS A1 A2 x1 x2 y y‚ÇÅ eqtA exta eqx) ih comp a b eqi = ‚ä•-elim (NOSEQneqFFDEFS (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTPURE y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqPURE (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTNOSEQ y y‚ÇÅ) ih comp a b eqi = eqi
    ind {u} {w} {T1} {T2} (EQTTERM t1 t2 y y‚ÇÅ x‚ÇÇ) ih comp a b eqi = ‚ä•-elim (NOSEQneqTERM (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTUNIV i p y y‚ÇÅ) ih comp a b eqi = ‚ä•-elim (NOSEQneqUNIV (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTLIFT A1 A2 y y‚ÇÅ eqtA exta) ih comp a b eqi = ‚ä•-elim (NOSEQneqLIFT (‚áõ-val-det tt tt comp y))
    ind {u} {w} {T1} {T2} (EQTBAR x) ih comp a b eqi = Mod.‚ñ°-idem M (Mod.‚àÄùïé-‚ñ°'-‚ñ° M x aw eqi)
      where
        aw0 : ‚àÄùïé w (Œª w' e' ‚Üí (z : eqTypes u w' T1 T2) (at : at‚ñ°¬∑ x w' e' z) ‚Üí eqInType u w' z a b
                             ‚Üí Mod.‚ñ° M w' (‚ÜëwPred (Œª w'' e ‚Üí NOSEQeq a b) e'))
        aw0 w1 e1 z at eqz = ih {u} {w1} {T1} {T2} z (<Type1 z (EQTBAR x) (<TypeBAR u w T1 T2 x w1 e1 z at)) (‚áõ-mon e1 comp) a b eqz

        aw : ‚àÄùïé w (Œª w' e' ‚Üí (z : eqTypes u w' T1 T2) (at : at‚ñ°¬∑ x w' e' z) ‚Üí eqInType u w' z a b
                            ‚Üí Mod.‚ñ° M w' (‚ÜëwPred' (Œª w'' e ‚Üí NOSEQeq a b) e'))
        aw w1 e1 z at eqz = Mod.‚àÄùïé-‚ñ°Func M (Œª w1 e1 z x ‚Üí z) (aw0 w1 e1 z at eqz)

    concl : (comp : B #‚áõ #NOSEQ at w) (a b : CTerm) ‚Üí eqInType u w eqt' a b ‚Üí ‚ñ°¬∑ w (Œª w' _ ‚Üí NOSEQeq a b)
    concl =
      ind<Type
        (Œª {u} {w} {T1} {T2} eqt' ‚Üí (comp : T1 #‚áõ #NOSEQ at w) (a b : CTerm) ‚Üí eqInType u w eqt' a b ‚Üí ‚ñ°¬∑ w (Œª w' _ ‚Üí NOSEQeq a b))
        ind
        eqt'




eqInType-‚áõ-NOSEQ : (u : univs) (w : ùïé¬∑) (A B a b : CTerm)
                      ‚Üí A #‚áõ #NOSEQ at w
                      ‚Üí B #‚áõ #NOSEQ at w
                      ‚Üí (eqt : eqTypes u w A B)
                      ‚Üí eqInType u w eqt a b
                      ‚Üí ‚ñ°¬∑ w (Œª w' e ‚Üí NOSEQeq a b)
eqInType-‚áõ-NOSEQ u w A B a b c‚ÇÅ c‚ÇÇ eqt ei = typeSysConds-NOSEQ-extrevl1 u w A B c‚ÇÅ c‚ÇÇ B eqt a b ei




eqInType-‚áõ-NOSEQ2 : (u : ùïå) (w : ùïé¬∑) (A B a b : CTerm)
                       ‚Üí A #‚áõ #NOSEQ at w
                       ‚Üí B #‚áõ #NOSEQ at w
                       ‚Üí (eqt : ‚â°Types u w A B)
                       ‚Üí (eqi : ‚â°‚ààType u w eqt a b)
                       ‚Üí ‚ñ°¬∑ w (Œª w' e ‚Üí NOSEQeq a b)
eqInType-‚áõ-NOSEQ2 u w A B a b c‚ÇÅ c‚ÇÇ eqt ei = typeSysConds-NOSEQ-extrevl1 (u ¬∑·µ§) w A B c‚ÇÅ c‚ÇÇ B eqt a b ei




eqInType-‚áõ-NOSEQ-rev : (u : univs) (w : ùïé¬∑) (A B a b : CTerm)
                          ‚Üí A #‚áõ #NOSEQ at w
                          ‚Üí B #‚áõ #NOSEQ at w
                          ‚Üí (eqt : eqTypes u w A B)
                          ‚Üí ‚ñ°¬∑ w (Œª w' e ‚Üí NOSEQeq a b)
                          ‚Üí eqInType u w eqt a b
eqInType-‚áõ-NOSEQ-rev u w A B a b c‚ÇÅ c‚ÇÇ eqt ei = typeSysConds-NOSEQ-extl1 u w A B c‚ÇÅ c‚ÇÇ B eqt a b ei



eqInType-‚áõ-NOSEQ-rev2 : (u : ùïå) (w : ùïé¬∑) (A B a b : CTerm)
                           ‚Üí A #‚áõ #NOSEQ at w
                           ‚Üí B #‚áõ #NOSEQ at w
                           ‚Üí (eqt : ‚â°Types u w A B)
                           ‚Üí ‚ñ°¬∑ w (Œª w' e ‚Üí NOSEQeq a b)
                           ‚Üí ‚â°‚ààType u w eqt a b
eqInType-‚áõ-NOSEQ-rev2 u w A B a b c‚ÇÅ c‚ÇÇ eqt ei = typeSysConds-NOSEQ-extl1 (u ¬∑·µ§) w A B c‚ÇÅ c‚ÇÇ B eqt a b ei



typeSysConds-NOSEQ-local : (u : univs) (w : ùïé¬∑) (A B : CTerm)
                             (x : A #‚áõ #NOSEQ at w) (x‚ÇÅ : B #‚áõ #NOSEQ at w)
                             ‚Üí eqInTypeLocal (EQTNOSEQ x x‚ÇÅ)
typeSysConds-NOSEQ-local u w A B x x‚ÇÅ a b i j =
  Mod.‚ñ°-idem M (‚àÄùïé-‚ñ°'-‚ñ°‚ÇÄ W M i aw j)
  where
    aw : ‚àÄùïé w (Œª w' e' ‚Üí (z : eqTypes u w' A B) {--(at : atbar i w' e' z)--}
                         ‚Üí eqInType u w' z a b
                         ‚Üí ‚ñ°¬∑ w' (Œª w'' e ‚Üí (x : w ‚äë¬∑ w'') ‚Üí NOSEQeq a b))
    aw w1 e1 z {--at--} ei = Mod.‚àÄùïé-‚ñ°Func M aw'' aw'
      where
        aw' : ‚ñ°¬∑ w1 (Œª w'' e ‚Üí NOSEQeq a b)
        aw' = eqInType-‚áõ-NOSEQ u w1 A B a b (‚áõ-mon e1 x) (‚áõ-mon e1 x‚ÇÅ) z ei

        aw'' : ‚àÄùïé w1 (Œª w' e' ‚Üí NOSEQeq a b
                                ‚Üí (x‚ÇÇ : w ‚äë¬∑ w') ‚Üí NOSEQeq a b)
        aw'' w' e' p x‚ÇÇ = p



typeSysConds-NOSEQ : (u : univs) (w : ùïé¬∑) (A B : CTerm)
                       (x : A #‚áõ #NOSEQ at w) (x‚ÇÅ : B #‚áõ #NOSEQ at w)
                       ‚Üí TSP {u} (EQTNOSEQ x x‚ÇÅ)
typeSysConds-NOSEQ u w A B x x‚ÇÅ =
  mktsp tsym ttrans isym itrans iextl1 iextl2 iextr1 iextr2 iextrl1 iextrl2 iextrr1 iextrr2 local
  where
    tsym : eqTypes u w B A
    tsym = typeSysConds-NOSEQ-tsym u w A B x x‚ÇÅ

    ttrans : eqTypesTrans u w A B
    ttrans = typeSysConds-NOSEQ-ttrans u w A B x x‚ÇÅ

    isym : eqInTypeSym u {_} {A} {B} (EQTNOSEQ x x‚ÇÅ)
    isym = typeSysConds-NOSEQ-isym u w A B x x‚ÇÅ

    itrans : eqInTypeTrans u {_} {A} {B} (EQTNOSEQ x x‚ÇÅ)
    itrans = typeSysConds-NOSEQ-itrans u w A B x x‚ÇÅ

    iextl1 : eqInTypeExtL1 {_} {_} {A} {B} (EQTNOSEQ x x‚ÇÅ)
    iextl1 = typeSysConds-NOSEQ-extl1 u w A B x x‚ÇÅ

    iextl2 : eqInTypeExtL2 {_} {_} {A} {B} (EQTNOSEQ x x‚ÇÅ)
    iextl2 = typeSysConds-NOSEQ-extl2 u w A B x x‚ÇÅ

    iextr1 : eqInTypeExtR1 {_} {_} {A} {B} (EQTNOSEQ x x‚ÇÅ)
    iextr1 = typeSysConds-NOSEQ-extr1 u w A B x x‚ÇÅ

    iextr2 : eqInTypeExtR2 {_} {_} {A} {B} (EQTNOSEQ x x‚ÇÅ)
    iextr2 = typeSysConds-NOSEQ-extr2 u w A B x x‚ÇÅ

    iextrl1 : eqInTypeExtRevL1 {_} {_} {A} {B} (EQTNOSEQ x x‚ÇÅ)
    iextrl1 = typeSysConds-NOSEQ-extrevl1 u w A B x x‚ÇÅ

    iextrl2 : eqInTypeExtRevL2 {_} {_} {A} {B} (EQTNOSEQ x x‚ÇÅ)
    iextrl2 = typeSysConds-NOSEQ-extrevl2 u w A B x x‚ÇÅ

    iextrr1 : eqInTypeExtRevR1 {_} {_} {A} {B} (EQTNOSEQ x x‚ÇÅ)
    iextrr1 = typeSysConds-NOSEQ-extrevr1 u w A B x x‚ÇÅ

    iextrr2 : eqInTypeExtRevR2 {_} {_} {A} {B} (EQTNOSEQ x x‚ÇÅ)
    iextrr2 = typeSysConds-NOSEQ-extrevr2 u w A B x x‚ÇÅ

    local : eqInTypeLocal (EQTNOSEQ x x‚ÇÅ)
    local = typeSysConds-NOSEQ-local u w A B x x‚ÇÅ
\end{code}
