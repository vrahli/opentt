\begin{code}

--open import bar
--module type_sys_props_tsquash (bar : Bar) where

open import Level using (Level ; 0‚Ñì ; Lift ; lift ; lower) renaming (suc to lsuc)
open import Agda.Builtin.Bool
open import Agda.Builtin.Equality
open import Agda.Builtin.Equality.Rewrite
open import Agda.Builtin.Sigma
open import Relation.Nullary
open import Relation.Unary using (Pred; Decidable)
open import Relation.Binary.PropositionalEquality using (sym ; subst)
open import Data.Product
open import Data.Product.Properties
open import Data.Sum
open import Data.Empty
open import Data.Maybe
open import Data.Unit using (‚ä§ ; tt)
open import Data.Nat using (‚Ñï ;  _<_ ; _‚â§_ ; _‚â•_ ; _‚â§?_ ; suc ; _+_ ; pred)
open import Data.Nat.Properties
open import Agda.Builtin.String
open import Agda.Builtin.String.Properties
open import Data.List
open import Data.List.Properties
open import Data.List.Relation.Unary.Any
open import Data.List.Membership.Propositional
open import Data.List.Membership.Propositional.Properties
open import Function.Bundles
open import Axiom.Extensionality.Propositional


open import util
open import calculus
open import terms
open import world
open import choice
open import compatible
open import getChoice
open import progress
open import choiceExt
open import newChoice
open import mod


module type_sys_props_nn {L : Level} (W : PossibleWorlds {L}) (M : Mod W)
                              (C : Choice) (K : Compatible {L} W C) (P : Progress {L} W C K) (G : GetChoice {L} W C K)
                              (X : ChoiceExt W C)
                              (N : NewChoice W C K G)
                              (E : Extensionality 0‚Ñì (lsuc(lsuc(L))))
       where


open import worldDef(W)
open import computation(W)(C)(K)(G)(X)(N)
open import bar(W)
open import barI(W)(M)--(C)(K)(P)
open import forcing(W)(M)(C)(K)(P)(G)(X)(N)(E)
open import props0(W)(M)(C)(K)(P)(G)(X)(N)(E)
open import ind2(W)(M)(C)(K)(P)(G)(X)(N)(E)

-- open import calculus
-- open import world
-- open import theory (bar)
-- open import props0 (bar)
-- open import ind2 (bar)
-- open import terms (bar)
\end{code}



\begin{code}[hide]
NNneqNAT : {a : Term} ‚Üí ¬¨ (NN a) ‚â° NAT
NNneqNAT {a} ()

NNneqQNAT : {a : Term} ‚Üí ¬¨ (NN a) ‚â° QNAT
NNneqQNAT {a} ()

NNneqLT : {a : Term} {c d : Term} ‚Üí ¬¨ (NN a) ‚â° LT c d
NNneqLT {a} {c} {d} ()

NNneqQLT : {a : Term} {c d : Term} ‚Üí ¬¨ (NN a) ‚â° QLT c d
NNneqQLT {a} {c} {d} ()

NNneqFREE : {a : Term} ‚Üí ¬¨ (NN a) ‚â° FREE
NNneqFREE {a} ()

NNneqPI : {a : Term} {c : Term} {d : Term} ‚Üí ¬¨ (NN a) ‚â° PI c d
NNneqPI {a} {c} {d} ()

NNneqSUM : {a : Term} {c : Term} {d : Term} ‚Üí ¬¨ (NN a) ‚â° SUM c d
NNneqSUM {a} {c} {d} ()

NNneqSET : {a : Term} {c : Term} {d : Term} ‚Üí ¬¨ (NN a) ‚â° SET c d
NNneqSET {a} {c} {d} ()

NNneqTUNION : {a : Term} {c : Term} {d : Term} ‚Üí ¬¨ (NN a) ‚â° TUNION c d
NNneqTUNION {a} {c} {d} ()

NNneqUNION : {a : Term} {c : Term} {d : Term} ‚Üí ¬¨ (NN a) ‚â° UNION c d
NNneqUNION {a} {c} {d} ()

NNneqQTUNION : {a : Term} {c : Term} {d : Term} ‚Üí ¬¨ (NN a) ‚â° QTUNION c d
NNneqQTUNION {a} {c} {d} ()

NNneqEQ : {a : Term} {c d e : Term} ‚Üí ¬¨ (NN a) ‚â° EQ c d e
NNneqEQ {a} {c} {d} {e} ()

NNneqDUM : {a : Term} {c : Term} ‚Üí ¬¨ (NN a) ‚â° DUM c
NNneqDUM {a} {c} ()

NNneqFFDEFS : {a : Term} {c d : Term} ‚Üí ¬¨ (NN a) ‚â° FFDEFS c d
NNneqFFDEFS {a} {c} {d} ()

NNneqSUBSING : {a : Term} {b : Term} ‚Üí ¬¨ (NN a) ‚â° SUBSING b
NNneqSUBSING {a} {b} ()

NNneqLIFT : {a : Term} {c : Term} ‚Üí ¬¨ (NN a) ‚â° LIFT c
NNneqLIFT {a} {c} ()

NNneqTSQUASH : {a : Term} {c : Term} ‚Üí ¬¨ (NN a) ‚â° TSQUASH c
NNneqTSQUASH {a} {c} ()

NNneqTTRUNC : {a : Term} {c : Term} ‚Üí ¬¨ (NN a) ‚â° TTRUNC c
NNneqTTRUNC {a} {c} ()

NNneqTCONST : {a : Term} {c : Term} ‚Üí ¬¨ (NN a) ‚â° TCONST c
NNneqTCONST {a} {c} ()

NNneqLOWER : {a : Term} {c : Term} ‚Üí ¬¨ (NN a) ‚â° LOWER c
NNneqLOWER {a} {c} ()

NNneqSHRINK : {a : Term} {c : Term} ‚Üí ¬¨ (NN a) ‚â° SHRINK c
NNneqSHRINK {a} {c} ()

NNneqUNIV : {a : Term} {n : ‚Ñï} ‚Üí ¬¨ (NN a) ‚â° UNIV n
NNneqUNIV {a} {n} ()


typeSysConds-NN-tsym : (u : univs) (w : ùïé¬∑) (A B t : CTerm)
                            (x : A #‚áõ #NN t at w) (x‚ÇÅ : B #‚áõ #NN t at w)
                            ‚Üí eqTypes u w B A
typeSysConds-NN-tsym u w A B t x x‚ÇÅ = EQTNN t x‚ÇÅ x



typeSysConds-NN-ttrans : (u : univs) (w : ùïé¬∑) (A B t : CTerm)
                              (x : A #‚áõ #NN t at w) (x‚ÇÅ : B #‚áõ #NN t at w)
                              ‚Üí eqTypesTrans u w A B
{-# TERMINATING #-}
typeSysConds-NN-ttrans u w A B t x x‚ÇÅ C (EQTNAT y y‚ÇÅ) = ‚ä•-elim (NNneqNAT (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-ttrans u w A B t x x‚ÇÅ C (EQTQNAT y y‚ÇÅ) = ‚ä•-elim (NNneqQNAT (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-ttrans u w A B t x x‚ÇÅ C (EQTLT c1 c2 d1 d2 y y‚ÇÅ x‚ÇÑ x‚ÇÖ) = ‚ä•-elim (NNneqLT (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-ttrans u w A B t x x‚ÇÅ C (EQTQLT c1 c2 d1 d2 y y‚ÇÅ x‚ÇÑ x‚ÇÖ) = ‚ä•-elim (NNneqQLT (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-ttrans u w A B t x x‚ÇÅ C (EQTFREE y y‚ÇÅ) = ‚ä•-elim (NNneqFREE (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-ttrans u w A B t x x‚ÇÅ C (EQTPI C1 D1 C2 D2 y y‚ÇÅ eqta0 eqtb0 exta0 extb0) = ‚ä•-elim (NNneqPI (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-ttrans u w A B t x x‚ÇÅ C (EQTSUM C1 D1 C2 D2 y y‚ÇÅ eqta0 eqtb0 exta0 extb0) = ‚ä•-elim (NNneqSUM (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-ttrans u w A B t x x‚ÇÅ C (EQTSET A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) = ‚ä•-elim (NNneqSET (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-ttrans u w A B t x x‚ÇÅ C (EQTTUNION A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) = ‚ä•-elim (NNneqTUNION (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-ttrans u w A B t x x‚ÇÅ C (EQTEQ a‚ÇÅ b‚ÇÅ a‚ÇÇ b‚ÇÇ A‚ÇÅ B‚ÇÅ y y‚ÇÅ eqtA extA eqt‚ÇÅ eqt‚ÇÇ) = ‚ä•-elim (NNneqEQ (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-ttrans u w A B t x x‚ÇÅ C (EQTUNION C1 D1 C2 D2 y y‚ÇÅ eqta0 eqtb0 exta0 extb0) = ‚ä•-elim (NNneqUNION (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-ttrans u w A B t x x‚ÇÅ C (EQTQTUNION C1 D1 C2 D2 y y‚ÇÅ eqta0 eqtb0 exta0 extb0) = ‚ä•-elim (NNneqQTUNION (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-ttrans u w A B t x x‚ÇÅ C (EQTSQUASH A3 A4 y y‚ÇÅ eqtA extA) = ‚ä•-elim (NNneqTSQUASH (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-ttrans u w A B t x x‚ÇÅ C (EQTTRUNC A3 A4 y y‚ÇÅ eqtA extA) = ‚ä•-elim (NNneqTTRUNC (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-ttrans u w A B t x x‚ÇÅ C (EQTSUBSING A3 A4 y y‚ÇÅ eqtA extA) = ‚ä•-elim (NNneqSUBSING (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-ttrans u w A B t x x‚ÇÅ C (EQTNN t‚ÇÅ y y‚ÇÅ)
  rewrite #NNinj {t‚ÇÅ} {t} (#‚áõ-val-det {_} {B} tt tt y x‚ÇÅ)
  = EQTNN t x y‚ÇÅ
typeSysConds-NN-ttrans u w A B t x x‚ÇÅ C (EQTCONST A3 A4 y y‚ÇÅ eqtA extA) = ‚ä•-elim (NNneqTCONST (‚áõ-val-det tt tt x‚ÇÅ y))
--typeSysConds-NN-ttrans u w A B t x x‚ÇÅ C (EQTDUM A3 A4 y y‚ÇÅ eqtA) = ‚ä•-elim (NNneqDUM (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-ttrans u w A B t x x‚ÇÅ C (EQFFDEFS A3 A4 x1 x2 y y‚ÇÅ eqtA extA eqx) = ‚ä•-elim (NNneqFFDEFS (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-ttrans u w A B t x x‚ÇÅ C (EQTUNIV i p c‚ÇÅ c‚ÇÇ) = ‚ä•-elim (NNneqUNIV (‚áõ-val-det tt tt x‚ÇÅ c‚ÇÅ))
{--  ‚ä•-elim (lift‚ä• (Bar.‚ñ°-const barI (Mod.‚àÄùïé-‚ñ°Func M q z)))
  where
    z : ‚ñ°¬∑ w (Œª w' _ ‚Üí B #‚áõ (#UNIV (fst u)) at w' √ó C #‚áõ (#UNIV (fst u)) at w')
    z = isu w B C y

    q : ‚àÄùïé w (Œª w' e' ‚Üí B #‚áõ #UNIV (proj‚ÇÅ u) at w' √ó C #‚áõ #UNIV (proj‚ÇÅ u) at w' ‚Üí Lift 1‚Ñì ‚ä•)
    q w1 e1 (d‚ÇÅ , d‚ÇÇ) = lift (‚ä•-elim (NNneqUNIV (‚áõ-val-det tt tt (‚áõ-mon e1 x‚ÇÅ) d‚ÇÅ)))--}

typeSysConds-NN-ttrans u w A B t x x‚ÇÅ C (EQTLIFT A3 A4 y y‚ÇÅ eqtA extA) = ‚ä•-elim (NNneqLIFT (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-ttrans u w A B t x x‚ÇÅ C (EQTBAR y) =
  EQTBAR (Mod.‚àÄùïé-‚ñ°Func M aw y)
  where
    aw : ‚àÄùïé w (Œª w' e' ‚Üí eqTypes u w' B C ‚Üí eqTypes u w' A C)
    aw w1 e1 eqt =
      typeSysConds-NN-ttrans
        u w1 A B t
        (‚áõ-mon e1 x) (‚áõ-mon e1 x‚ÇÅ)
        C eqt



typeSysConds-NN-isym : (u : univs) (w : ùïé¬∑) (A B t : CTerm)
                            (x : A #‚áõ #NN t at w) (x‚ÇÅ : B #‚áõ #NN t at w)
                            ‚Üí eqInTypeSym u {_} {A} {B} (EQTNN t x x‚ÇÅ)
typeSysConds-NN-isym u w A B t x x‚ÇÅ f g eqa =
  Mod.‚àÄùïé-‚ñ°Func M h eqa
  where
    h : ‚àÄùïé w (Œª w' e' ‚Üí NNeq t f g
                       ‚Üí NNeq t g f)
    h w1 e1 p = p



typeSysConds-NN-itrans : (u : univs) (w : ùïé¬∑) (A B t : CTerm)
                              (x : A #‚áõ #NN t at w) (x‚ÇÅ : B #‚áõ #NN t at w)
                              ‚Üí eqInTypeTrans u {_} {A} {B} (EQTNN t x x‚ÇÅ)
typeSysConds-NN-itrans u w A B t x x‚ÇÅ f g h ea1 ea2 =
  Mod.‚ñ°Func M (Mod.‚ñ°Func M (Mod.‚àÄùïé-‚ñ° M aw) ea1) ea2
  where
    aw : ‚àÄùïé w
              (Œª w' e ‚Üí NNeq t f g
                      ‚Üí NNeq t g h
                      ‚Üí NNeq t f h)
    aw w1 e1 p‚ÇÅ p‚ÇÇ = p‚ÇÅ



typeSysConds-NN-extl1 : (u : univs) (w : ùïé¬∑) (A B t : CTerm)
                             (x : A #‚áõ #NN t at w) (x‚ÇÅ : B #‚áõ #NN t at w)
                             ‚Üí eqInTypeExtL1 {_} {_} {A} {B} (EQTNN t x x‚ÇÅ)
{-# TERMINATING #-}
typeSysConds-NN-extl1 u w A B t x x‚ÇÅ C (EQTNAT y y‚ÇÅ) f g eqi = ‚ä•-elim (NNneqNAT (‚áõ-val-det tt tt x y))
typeSysConds-NN-extl1 u w A B t x x‚ÇÅ C (EQTQNAT y y‚ÇÅ) f g eqi = ‚ä•-elim (NNneqQNAT (‚áõ-val-det tt tt x y))
typeSysConds-NN-extl1 u w A B t x x‚ÇÅ C (EQTLT c1 c2 d1 d2 y y‚ÇÅ x‚ÇÑ x‚ÇÖ) f g eqi = ‚ä•-elim (NNneqLT (‚áõ-val-det tt tt x y))
typeSysConds-NN-extl1 u w A B t x x‚ÇÅ C (EQTQLT c1 c2 d1 d2 y y‚ÇÅ x‚ÇÑ x‚ÇÖ) f g eqi = ‚ä•-elim (NNneqQLT (‚áõ-val-det tt tt x y))
typeSysConds-NN-extl1 u w A B t x x‚ÇÅ C (EQTFREE y y‚ÇÅ) f g eqi = ‚ä•-elim (NNneqFREE (‚áõ-val-det tt tt x y))
typeSysConds-NN-extl1 u w A B t x x‚ÇÅ C (EQTPI A3 B3 A4 B4 y y‚ÇÅ eqta0 eqtb0 exta0 extb0) f g eqi = ‚ä•-elim (NNneqPI (‚áõ-val-det tt tt x y))
typeSysConds-NN-extl1 u w A B t x x‚ÇÅ C (EQTSUM A3 B3 A4 B4 y y‚ÇÅ eqta0 eqtb0 exta0 extb0) f g eqi = ‚ä•-elim (NNneqSUM (‚áõ-val-det tt tt x y))
typeSysConds-NN-extl1 u w A B t x x‚ÇÅ C (EQTSET A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) f g eqi = ‚ä•-elim (NNneqSET (‚áõ-val-det tt tt x y))
typeSysConds-NN-extl1 u w A B t x x‚ÇÅ C (EQTTUNION A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) f g eqi = ‚ä•-elim (NNneqTUNION (‚áõ-val-det tt tt x y))
typeSysConds-NN-extl1 u w A B t x x‚ÇÅ C (EQTEQ a‚ÇÅ b‚ÇÅ a‚ÇÇ b‚ÇÇ A‚ÇÅ B‚ÇÅ y y‚ÇÅ eqtA extA eqt‚ÇÅ eqt‚ÇÇ) f g eqi = ‚ä•-elim (NNneqEQ (‚áõ-val-det tt tt x y))
typeSysConds-NN-extl1 u w A B t x x‚ÇÅ C (EQTUNION A3 B3 A4 B4 y y‚ÇÅ eqta0 eqtb0 exta0 extb0) f g eqi = ‚ä•-elim (NNneqUNION (‚áõ-val-det tt tt x y))
typeSysConds-NN-extl1 u w A B t x x‚ÇÅ C (EQTQTUNION A3 B3 A4 B4 y y‚ÇÅ eqta0 eqtb0 exta0 extb0) f g eqi = ‚ä•-elim (NNneqQTUNION (‚áõ-val-det tt tt x y))
typeSysConds-NN-extl1 u w A B t x x‚ÇÅ C (EQTSQUASH A3 A4 y y‚ÇÅ eqtA extA) f g eqi = ‚ä•-elim (NNneqTSQUASH (‚áõ-val-det tt tt x y))
typeSysConds-NN-extl1 u w A B t x x‚ÇÅ C (EQTTRUNC A3 A4 y y‚ÇÅ eqtA extA) f g eqi = ‚ä•-elim (NNneqTTRUNC (‚áõ-val-det tt tt x y))
typeSysConds-NN-extl1 u w A B t x x‚ÇÅ C (EQTSUBSING A3 A4 y y‚ÇÅ eqtA extA) f g eqi = ‚ä•-elim (NNneqSUBSING (‚áõ-val-det tt tt x y))
typeSysConds-NN-extl1 u w A B t x x‚ÇÅ C (EQTNN t‚ÇÅ y y‚ÇÅ) f g eqi
  rewrite #NNinj {t‚ÇÅ} {t} (#‚áõ-val-det {_} {A} tt tt y x)
  = Mod.‚àÄùïé-‚ñ°Func M aw eqi
  where
    aw : ‚àÄùïé w (Œª w' e' ‚Üí NNeq t f g
                        ‚Üí NNeq t f g)
    aw w1 e1 p = p
typeSysConds-NN-extl1 u w A B t x x‚ÇÅ C (EQTCONST A3 A4 y y‚ÇÅ eqtA extA) f g eqi = ‚ä•-elim (NNneqTCONST (‚áõ-val-det tt tt x y))
--typeSysConds-NN-extl1 u w A B t x x‚ÇÅ C (EQTDUM A3 A4 y y‚ÇÅ eqtA) f g eqi = ‚ä•-elim (NNneqDUM (‚áõ-val-det tt tt x y))
typeSysConds-NN-extl1 u w A B t x x‚ÇÅ C (EQFFDEFS A3 A4 x1 x2 y y‚ÇÅ eqtA extA eqx) f g eqi = ‚ä•-elim (NNneqFFDEFS (‚áõ-val-det tt tt x y))
typeSysConds-NN-extl1 u w A B t x x‚ÇÅ C (EQTUNIV i p c‚ÇÅ c‚ÇÇ) f g eqi = ‚ä•-elim (NNneqUNIV (‚áõ-val-det tt tt x c‚ÇÅ))
{--  ‚ä•-elim (lift‚ä• (Bar.‚ñ°-const barI (Mod.‚àÄùïé-‚ñ°Func M q z)))
  where
    z : ‚ñ°¬∑ w (Œª w' _ ‚Üí A #‚áõ (#UNIV (fst u)) at w' √ó C #‚áõ (#UNIV (fst u)) at w')
    z = isu w A C y

    q : ‚àÄùïé w (Œª w' e' ‚Üí A #‚áõ #UNIV (proj‚ÇÅ u) at w' √ó C #‚áõ #UNIV (proj‚ÇÅ u) at w' ‚Üí Lift 1‚Ñì ‚ä•)
    q w1 e1 (d‚ÇÅ , d‚ÇÇ) = lift (‚ä•-elim (NNneqUNIV (‚áõ-val-det tt tt (‚áõ-mon e1 x) d‚ÇÅ)))--}

typeSysConds-NN-extl1 u w A B t x x‚ÇÅ C (EQTLIFT A3 A4 y y‚ÇÅ eqtA extA) f g eqi = ‚ä•-elim (NNneqLIFT (‚áõ-val-det tt tt x y))
typeSysConds-NN-extl1 u w A B t x x‚ÇÅ C (EQTBAR y) f g eqi =
  Mod.‚àÄùïé-‚ñ°-‚ñ°' M y ib
  where
    ib : ‚àÄùïé w (Œª w' e' ‚Üí (z : eqTypes u w' A C) {--(at : atbar y w' e' z)--} ‚Üí eqInType u w' z f g)
    ib w1 e1 z {--at--} =
      typeSysConds-NN-extl1
        u w1 A B t
        (‚áõ-mon e1 x) (‚áõ-mon e1 x‚ÇÅ)
        C z f g
        (Mod.‚Üë‚ñ° M eqi e1)



typeSysConds-NN-extl2 : (u : univs) (w : ùïé¬∑) (A B t : CTerm)
                             (x : A #‚áõ #NN t at w) (x‚ÇÅ : B #‚áõ #NN t at w)
                             ‚Üí eqInTypeExtL2 {_} {_} {A} {B} (EQTNN t x x‚ÇÅ)
{-# TERMINATING #-}
typeSysConds-NN-extl2 u w A B t x x‚ÇÅ C (EQTNAT y y‚ÇÅ) f g eqi = ‚ä•-elim (NNneqNAT (‚áõ-val-det tt tt x y‚ÇÅ))
typeSysConds-NN-extl2 u w A B t x x‚ÇÅ C (EQTQNAT y y‚ÇÅ) f g eqi = ‚ä•-elim (NNneqQNAT (‚áõ-val-det tt tt x y‚ÇÅ))
typeSysConds-NN-extl2 u w A B t x x‚ÇÅ C (EQTLT c1 c2 d1 d2 y y‚ÇÅ x‚ÇÑ x‚ÇÖ) f g eqi = ‚ä•-elim (NNneqLT (‚áõ-val-det tt tt x y‚ÇÅ))
typeSysConds-NN-extl2 u w A B t x x‚ÇÅ C (EQTQLT c1 c2 d1 d2 y y‚ÇÅ x‚ÇÑ x‚ÇÖ) f g eqi = ‚ä•-elim (NNneqQLT (‚áõ-val-det tt tt x y‚ÇÅ))
typeSysConds-NN-extl2 u w A B t x x‚ÇÅ C (EQTFREE y y‚ÇÅ) f g eqi = ‚ä•-elim (NNneqFREE (‚áõ-val-det tt tt x y‚ÇÅ))
typeSysConds-NN-extl2 u w A B t x x‚ÇÅ C (EQTPI A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) f g eqi = ‚ä•-elim (NNneqPI (‚áõ-val-det tt tt x y‚ÇÅ))
typeSysConds-NN-extl2 u w A B t x x‚ÇÅ C (EQTSUM A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) f g eqi = ‚ä•-elim (NNneqSUM (‚áõ-val-det tt tt x y‚ÇÅ))
typeSysConds-NN-extl2 u w A B t x x‚ÇÅ C (EQTSET A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) f g eqi = ‚ä•-elim (NNneqSET (‚áõ-val-det tt tt x y‚ÇÅ))
typeSysConds-NN-extl2 u w A B t x x‚ÇÅ C (EQTTUNION A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) f g eqi = ‚ä•-elim (NNneqTUNION (‚áõ-val-det tt tt x y‚ÇÅ))
typeSysConds-NN-extl2 u w A B t x x‚ÇÅ C (EQTEQ a‚ÇÅ b‚ÇÅ a‚ÇÇ b‚ÇÇ A‚ÇÅ B‚ÇÅ y y‚ÇÅ eqtA extA eqt‚ÇÅ eqt‚ÇÇ) f g eqi = ‚ä•-elim (NNneqEQ (‚áõ-val-det tt tt x y‚ÇÅ))
typeSysConds-NN-extl2 u w A B t x x‚ÇÅ C (EQTUNION A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) f g eqi = ‚ä•-elim (NNneqUNION (‚áõ-val-det tt tt x y‚ÇÅ))
typeSysConds-NN-extl2 u w A B t x x‚ÇÅ C (EQTQTUNION A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) f g eqi = ‚ä•-elim (NNneqQTUNION (‚áõ-val-det tt tt x y‚ÇÅ))
typeSysConds-NN-extl2 u w A B t x x‚ÇÅ C (EQTSQUASH A3 A4 y y‚ÇÅ eqtA extA) f g eqi = ‚ä•-elim (NNneqTSQUASH (‚áõ-val-det tt tt x y‚ÇÅ))
typeSysConds-NN-extl2 u w A B t x x‚ÇÅ C (EQTTRUNC A3 A4 y y‚ÇÅ eqtA extA) f g eqi = ‚ä•-elim (NNneqTTRUNC (‚áõ-val-det tt tt x y‚ÇÅ))
typeSysConds-NN-extl2 u w A B t x x‚ÇÅ C (EQTSUBSING A3 A4 y y‚ÇÅ eqtA extA) f g eqi = ‚ä•-elim (NNneqSUBSING (‚áõ-val-det tt tt x y‚ÇÅ))
typeSysConds-NN-extl2 u w A B t x x‚ÇÅ C (EQTNN t‚ÇÅ y y‚ÇÅ) f g eqi
  rewrite #NNinj {t‚ÇÅ} {t} (#‚áõ-val-det {_} {A} tt tt y‚ÇÅ x)
  = Mod.‚àÄùïé-‚ñ°Func M aw eqi
  where
    aw : ‚àÄùïé w
              (Œª w' e' ‚Üí NNeq t f g
                       ‚Üí NNeq t f g)
    aw w1 e1 p = p

typeSysConds-NN-extl2 u w A B t x x‚ÇÅ C (EQTCONST A3 A4 y y‚ÇÅ eqtA extA) f g eqi = ‚ä•-elim (NNneqTCONST (‚áõ-val-det tt tt x y‚ÇÅ))
--typeSysConds-NN-extl2 u w A B t x x‚ÇÅ C (EQTDUM A3 A4 y y‚ÇÅ eqtA) f g eqi = ‚ä•-elim (NNneqDUM (‚áõ-val-det tt tt x y‚ÇÅ))
typeSysConds-NN-extl2 u w A B t x x‚ÇÅ C (EQFFDEFS A3 A4 x1 x2 y y‚ÇÅ eqtA extA eqx) f g eqi = ‚ä•-elim (NNneqFFDEFS (‚áõ-val-det tt tt x y‚ÇÅ))
typeSysConds-NN-extl2 u w A B t x x‚ÇÅ C (EQTUNIV i p c‚ÇÅ c‚ÇÇ) f g eqi = ‚ä•-elim (NNneqUNIV (‚áõ-val-det tt tt x c‚ÇÇ))
{--  ‚ä•-elim (lift‚ä• (Bar.‚ñ°-const barI (Mod.‚àÄùïé-‚ñ°Func M q z)))
  where
    z : ‚ñ°¬∑ w (Œª w' _ ‚Üí C #‚áõ (#UNIV (fst u)) at w' √ó A #‚áõ (#UNIV (fst u)) at w')
    z = isu w C A y

    q : ‚àÄùïé w (Œª w' e' ‚Üí C #‚áõ #UNIV (proj‚ÇÅ u) at w' √ó A #‚áõ #UNIV (proj‚ÇÅ u) at w' ‚Üí Lift 1‚Ñì ‚ä•)
    q w1 e1 (d‚ÇÅ , d‚ÇÇ) = lift (‚ä•-elim (NNneqUNIV (‚áõ-val-det tt tt (‚áõ-mon e1 x) d‚ÇÇ)))--}

typeSysConds-NN-extl2 u w A B t x x‚ÇÅ C (EQTLIFT A3 A4 y y‚ÇÅ eqtA extA) f g eqi = ‚ä•-elim (NNneqLIFT (‚áõ-val-det tt tt x y‚ÇÅ))
typeSysConds-NN-extl2 u w A B t x x‚ÇÅ C (EQTBAR y) f g eqi =
  Mod.‚àÄùïé-‚ñ°-‚ñ°' M y ib
  where
    ib : ‚àÄùïé w (Œª w' e' ‚Üí (z : eqTypes u w' C A) {--(at : atbar y w' e' z)--} ‚Üí eqInType u w' z f g)
    ib w1 e1 z {--at--} =
      typeSysConds-NN-extl2
        u w1 A B t
        (‚áõ-mon e1 x) (‚áõ-mon e1 x‚ÇÅ)
        C z f g
        (Mod.‚Üë‚ñ° M eqi e1)



typeSysConds-NN-extr1 : (u : univs) (w : ùïé¬∑) (A B t : CTerm)
                             (x : A #‚áõ #NN t at w) (x‚ÇÅ : B #‚áõ #NN t at w)
                             ‚Üí eqInTypeExtR1 {_} {_} {A} {B} (EQTNN t x x‚ÇÅ)
{-# TERMINATING #-}
typeSysConds-NN-extr1 u w A B t x x‚ÇÅ C (EQTNAT y y‚ÇÅ) f g eqi = ‚ä•-elim (NNneqNAT (‚áõ-val-det tt tt x‚ÇÅ y‚ÇÅ))
typeSysConds-NN-extr1 u w A B t x x‚ÇÅ C (EQTQNAT y y‚ÇÅ) f g eqi = ‚ä•-elim (NNneqQNAT (‚áõ-val-det tt tt x‚ÇÅ y‚ÇÅ))
typeSysConds-NN-extr1 u w A B t x x‚ÇÅ C (EQTLT c1 c2 d1 d2 y y‚ÇÅ x‚ÇÑ x‚ÇÖ) f g eqi = ‚ä•-elim (NNneqLT (‚áõ-val-det tt tt x‚ÇÅ y‚ÇÅ))
typeSysConds-NN-extr1 u w A B t x x‚ÇÅ C (EQTQLT c1 c2 d1 d2 y y‚ÇÅ x‚ÇÑ x‚ÇÖ) f g eqi = ‚ä•-elim (NNneqQLT (‚áõ-val-det tt tt x‚ÇÅ y‚ÇÅ))
typeSysConds-NN-extr1 u w A B t x x‚ÇÅ C (EQTFREE y y‚ÇÅ) f g eqi = ‚ä•-elim (NNneqFREE (‚áõ-val-det tt tt x‚ÇÅ y‚ÇÅ))
typeSysConds-NN-extr1 u w A B t x x‚ÇÅ C (EQTPI A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) f g eqi = ‚ä•-elim (NNneqPI (‚áõ-val-det tt tt x‚ÇÅ y‚ÇÅ))
typeSysConds-NN-extr1 u w A B t x x‚ÇÅ C (EQTSUM A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) f g eqi = ‚ä•-elim (NNneqSUM (‚áõ-val-det tt tt x‚ÇÅ y‚ÇÅ))
typeSysConds-NN-extr1 u w A B t x x‚ÇÅ C (EQTSET A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) f g eqi = ‚ä•-elim (NNneqSET (‚áõ-val-det tt tt x‚ÇÅ y‚ÇÅ))
typeSysConds-NN-extr1 u w A B t x x‚ÇÅ C (EQTTUNION A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) f g eqi = ‚ä•-elim (NNneqTUNION (‚áõ-val-det tt tt x‚ÇÅ y‚ÇÅ))
typeSysConds-NN-extr1 u w A B t x x‚ÇÅ C (EQTEQ a‚ÇÅ b‚ÇÅ a‚ÇÇ b‚ÇÇ A‚ÇÅ B‚ÇÅ y y‚ÇÅ eqtA extA eqt‚ÇÅ eqt‚ÇÇ) f g eqi = ‚ä•-elim (NNneqEQ (‚áõ-val-det tt tt x‚ÇÅ y‚ÇÅ))
typeSysConds-NN-extr1 u w A B t x x‚ÇÅ C (EQTUNION A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) f g eqi = ‚ä•-elim (NNneqUNION (‚áõ-val-det tt tt x‚ÇÅ y‚ÇÅ))
typeSysConds-NN-extr1 u w A B t x x‚ÇÅ C (EQTQTUNION A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) f g eqi = ‚ä•-elim (NNneqQTUNION (‚áõ-val-det tt tt x‚ÇÅ y‚ÇÅ))
typeSysConds-NN-extr1 u w A B t x x‚ÇÅ C (EQTSQUASH A3 A4 y y‚ÇÅ eqtA extA) f g eqi = ‚ä•-elim (NNneqTSQUASH (‚áõ-val-det tt tt x‚ÇÅ y‚ÇÅ))
typeSysConds-NN-extr1 u w A B t x x‚ÇÅ C (EQTTRUNC A3 A4 y y‚ÇÅ eqtA extA) f g eqi = ‚ä•-elim (NNneqTTRUNC (‚áõ-val-det tt tt x‚ÇÅ y‚ÇÅ))
typeSysConds-NN-extr1 u w A B t x x‚ÇÅ C (EQTSUBSING A3 A4 y y‚ÇÅ eqtA extA) f g eqi = ‚ä•-elim (NNneqSUBSING (‚áõ-val-det tt tt x‚ÇÅ y‚ÇÅ))
typeSysConds-NN-extr1 u w A B t x x‚ÇÅ C (EQTNN t‚ÇÅ y y‚ÇÅ) f g eqi
  rewrite #NNinj {t‚ÇÅ} {t} (#‚áõ-val-det {_} {B} tt tt y‚ÇÅ x‚ÇÅ)
  = Mod.‚àÄùïé-‚ñ°Func M aw eqi
  where
    aw : ‚àÄùïé w (Œª w' e' ‚Üí NNeq t f g
                        ‚Üí NNeq t f g)
    aw w1 e1 p = p

typeSysConds-NN-extr1 u w A B t x x‚ÇÅ C (EQTCONST A3 A4 y y‚ÇÅ eqtA extA) f g eqi = ‚ä•-elim (NNneqTCONST (‚áõ-val-det tt tt x‚ÇÅ y‚ÇÅ))
--typeSysConds-NN-extr1 u w A B t x x‚ÇÅ C (EQTDUM A3 A4 y y‚ÇÅ eqtA) f g eqi = ‚ä•-elim (NNneqDUM (‚áõ-val-det tt tt x‚ÇÅ y‚ÇÅ))
typeSysConds-NN-extr1 u w A B t x x‚ÇÅ C (EQFFDEFS A3 A4 x1 x2 y y‚ÇÅ eqtA extA eqx) f g eqi = ‚ä•-elim (NNneqFFDEFS (‚áõ-val-det tt tt x‚ÇÅ y‚ÇÅ))
typeSysConds-NN-extr1 u w A B t x x‚ÇÅ C (EQTUNIV i p c‚ÇÅ c‚ÇÇ) f g eqi = ‚ä•-elim (NNneqUNIV (‚áõ-val-det tt tt x‚ÇÅ c‚ÇÇ))
{--  ‚ä•-elim (lift‚ä• (Bar.‚ñ°-const barI (Mod.‚àÄùïé-‚ñ°Func M q z)))
  where
    z : ‚ñ°¬∑ w (Œª w' _ ‚Üí C #‚áõ (#UNIV (fst u)) at w' √ó B #‚áõ (#UNIV (fst u)) at w')
    z = isu w C B y

    q : ‚àÄùïé w (Œª w' e' ‚Üí C #‚áõ #UNIV (proj‚ÇÅ u) at w' √ó B #‚áõ #UNIV (proj‚ÇÅ u) at w' ‚Üí Lift 1‚Ñì ‚ä•)
    q w1 e1 (d‚ÇÅ , d‚ÇÇ) = lift (‚ä•-elim (NNneqUNIV (‚áõ-val-det tt tt (‚áõ-mon e1 x‚ÇÅ) d‚ÇÇ)))--}

typeSysConds-NN-extr1 u w A B t x x‚ÇÅ C (EQTLIFT A3 A4 y y‚ÇÅ eqtA extA) f g eqi = ‚ä•-elim (NNneqLIFT (‚áõ-val-det tt tt x‚ÇÅ y‚ÇÅ))
typeSysConds-NN-extr1 u w A B t x x‚ÇÅ C (EQTBAR y) f g eqi =
  Mod.‚àÄùïé-‚ñ°-‚ñ°' M y ib
  where
    ib : ‚àÄùïé w (Œª w' e' ‚Üí (z : eqTypes u w' C B) {--(at : atbar y w' e' z)--} ‚Üí eqInType u w' z f g)
    ib w1 e1 z {--at--} =
      typeSysConds-NN-extr1
        u w1 A B t
        (‚áõ-mon e1 x) (‚áõ-mon e1 x‚ÇÅ)
        C z f g
        (Mod.‚Üë‚ñ° M eqi e1)



typeSysConds-NN-extr2 : (u : univs) (w : ùïé¬∑) (A B t : CTerm)
                             (x : A #‚áõ #NN t at w) (x‚ÇÅ : B #‚áõ #NN t at w)
                             ‚Üí eqInTypeExtR2 {_} {_} {A} {B} (EQTNN t x x‚ÇÅ)
{-# TERMINATING #-}
typeSysConds-NN-extr2 u w A B t x x‚ÇÅ C (EQTNAT y y‚ÇÅ) f g eqi = ‚ä•-elim (NNneqNAT (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-extr2 u w A B t x x‚ÇÅ C (EQTQNAT y y‚ÇÅ) f g eqi = ‚ä•-elim (NNneqQNAT (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-extr2 u w A B t x x‚ÇÅ C (EQTLT c1 c2 d1 d2 y y‚ÇÅ x‚ÇÑ x‚ÇÖ) f g eqi = ‚ä•-elim (NNneqLT (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-extr2 u w A B t x x‚ÇÅ C (EQTQLT c1 c2 d1 d2 y y‚ÇÅ x‚ÇÑ x‚ÇÖ) f g eqi = ‚ä•-elim (NNneqQLT (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-extr2 u w A B t x x‚ÇÅ C (EQTFREE y y‚ÇÅ) f g eqi = ‚ä•-elim (NNneqFREE (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-extr2 u w A B t x x‚ÇÅ C (EQTPI A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) f g eqi = ‚ä•-elim (NNneqPI (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-extr2 u w A B t x x‚ÇÅ C (EQTSUM A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) f g eqi = ‚ä•-elim (NNneqSUM (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-extr2 u w A B t x x‚ÇÅ C (EQTSET A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) f g eqi = ‚ä•-elim (NNneqSET (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-extr2 u w A B t x x‚ÇÅ C (EQTTUNION A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) f g eqi = ‚ä•-elim (NNneqTUNION (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-extr2 u w A B t x x‚ÇÅ C (EQTEQ a‚ÇÅ b‚ÇÅ a‚ÇÇ b‚ÇÇ A‚ÇÅ B‚ÇÅ y y‚ÇÅ eqtA extA eqt‚ÇÅ eqt‚ÇÇ) f g eqi = ‚ä•-elim (NNneqEQ (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-extr2 u w A B t x x‚ÇÅ C (EQTUNION A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) f g eqi = ‚ä•-elim (NNneqUNION (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-extr2 u w A B t x x‚ÇÅ C (EQTQTUNION A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) f g eqi = ‚ä•-elim (NNneqQTUNION (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-extr2 u w A B t x x‚ÇÅ C (EQTSQUASH A3 A4 y y‚ÇÅ eqtA extA) f g eqi = ‚ä•-elim (NNneqTSQUASH (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-extr2 u w A B t x x‚ÇÅ C (EQTTRUNC A3 A4 y y‚ÇÅ eqtA extA) f g eqi = ‚ä•-elim (NNneqTTRUNC (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-extr2 u w A B t x x‚ÇÅ C (EQTSUBSING A3 A4 y y‚ÇÅ eqtA extA) f g eqi = ‚ä•-elim (NNneqSUBSING (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-extr2 u w A B t x x‚ÇÅ C (EQTNN t‚ÇÅ y y‚ÇÅ) f g eqi
  rewrite #NNinj {t‚ÇÅ} {t} (#‚áõ-val-det {_} {B} tt tt y x‚ÇÅ)
  = Mod.‚àÄùïé-‚ñ°Func M aw eqi
  where
    aw : ‚àÄùïé w (Œª w' e' ‚Üí NNeq t f g
                       ‚Üí NNeq t f g)
    aw w1 e1 p = p

typeSysConds-NN-extr2 u w A B t x x‚ÇÅ C (EQTCONST A3 A4 y y‚ÇÅ eqtA extA) f g eqi = ‚ä•-elim (NNneqTCONST (‚áõ-val-det tt tt x‚ÇÅ y))
--typeSysConds-NN-extr2 u w A B t x x‚ÇÅ C (EQTDUM A3 A4 y y‚ÇÅ eqtA) f g eqi = ‚ä•-elim (NNneqDUM (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-extr2 u w A B t x x‚ÇÅ C (EQFFDEFS A3 A4 x1 x2 y y‚ÇÅ eqtA extA eqx) f g eqi = ‚ä•-elim (NNneqFFDEFS (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-extr2 u w A B t x x‚ÇÅ C (EQTUNIV i p c‚ÇÅ c‚ÇÇ) f g eqi = ‚ä•-elim (NNneqUNIV (‚áõ-val-det tt tt x‚ÇÅ c‚ÇÅ))
{--  ‚ä•-elim (lift‚ä• (Bar.‚ñ°-const barI (Mod.‚àÄùïé-‚ñ°Func M q z)))
  where
    z : ‚ñ°¬∑ w (Œª w' _ ‚Üí B #‚áõ (#UNIV (fst u)) at w' √ó C #‚áõ (#UNIV (fst u)) at w')
    z = isu w B C y

    q : ‚àÄùïé w (Œª w' e' ‚Üí B #‚áõ #UNIV (proj‚ÇÅ u) at w' √ó C #‚áõ #UNIV (proj‚ÇÅ u) at w' ‚Üí Lift 1‚Ñì ‚ä•)
    q w1 e1 (d‚ÇÅ , d‚ÇÇ) = lift (‚ä•-elim (NNneqUNIV (‚áõ-val-det tt tt (‚áõ-mon e1 x‚ÇÅ) d‚ÇÅ)))--}

typeSysConds-NN-extr2 u w A B t x x‚ÇÅ C (EQTLIFT A3 A4 y y‚ÇÅ eqtA extA) f g eqi = ‚ä•-elim (NNneqLIFT (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-extr2 u w A B t x x‚ÇÅ C (EQTBAR y) f g eqi =
  Mod.‚àÄùïé-‚ñ°-‚ñ°' M y ib
  where
    ib : ‚àÄùïé w (Œª w' e' ‚Üí (z : eqTypes u w' B C) {--(at : atbar y w' e' z)--} ‚Üí eqInType u w' z f g)
    ib w1 e1 z {--at--} =
      typeSysConds-NN-extr2
        u w1 A B t
        (‚áõ-mon e1 x) (‚áõ-mon e1 x‚ÇÅ)
        C z f g
        (Mod.‚Üë‚ñ° M eqi e1)




typeSysConds-NN-extrevl1 : (u : univs) (w : ùïé¬∑) (A B t : CTerm)
                                (x : A #‚áõ #NN t at w) (x‚ÇÅ : B #‚áõ #NN t at w)
                                ‚Üí eqInTypeExtRevL1 {_} {_} {A} {B} (EQTNN t x x‚ÇÅ)
{-# TERMINATING #-}
typeSysConds-NN-extrevl1 u w A B t x x‚ÇÅ C (EQTNAT y y‚ÇÅ) f g eqi = ‚ä•-elim (NNneqNAT (‚áõ-val-det tt tt x y))
typeSysConds-NN-extrevl1 u w A B t x x‚ÇÅ C (EQTQNAT y y‚ÇÅ) f g eqi = ‚ä•-elim (NNneqQNAT (‚áõ-val-det tt tt x y))
typeSysConds-NN-extrevl1 u w A B t x x‚ÇÅ C (EQTLT c1 c2 d1 d2 y y‚ÇÅ x‚ÇÑ x‚ÇÖ) f g eqi = ‚ä•-elim (NNneqLT (‚áõ-val-det tt tt x y))
typeSysConds-NN-extrevl1 u w A B t x x‚ÇÅ C (EQTQLT c1 c2 d1 d2 y y‚ÇÅ x‚ÇÑ x‚ÇÖ) f g eqi = ‚ä•-elim (NNneqQLT (‚áõ-val-det tt tt x y))
typeSysConds-NN-extrevl1 u w A B t x x‚ÇÅ C (EQTFREE y y‚ÇÅ) f g eqi = ‚ä•-elim (NNneqFREE (‚áõ-val-det tt tt x y))
typeSysConds-NN-extrevl1 u w A B t x x‚ÇÅ C (EQTPI A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) f g eqi = ‚ä•-elim (NNneqPI (‚áõ-val-det tt tt x y))
typeSysConds-NN-extrevl1 u w A B t x x‚ÇÅ C (EQTSUM A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) f g eqi = ‚ä•-elim (NNneqSUM (‚áõ-val-det tt tt x y))
typeSysConds-NN-extrevl1 u w A B t x x‚ÇÅ C (EQTSET A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) f g eqi = ‚ä•-elim (NNneqSET (‚áõ-val-det tt tt x y))
typeSysConds-NN-extrevl1 u w A B t x x‚ÇÅ C (EQTTUNION A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) f g eqi = ‚ä•-elim (NNneqTUNION (‚áõ-val-det tt tt x y))
typeSysConds-NN-extrevl1 u w A B t x x‚ÇÅ C (EQTEQ a‚ÇÅ b‚ÇÅ a‚ÇÇ b‚ÇÇ A‚ÇÅ B‚ÇÅ y y‚ÇÅ eqtA extA eqt‚ÇÅ eqt‚ÇÇ) f g eqi = ‚ä•-elim (NNneqEQ (‚áõ-val-det tt tt x y))
typeSysConds-NN-extrevl1 u w A B t x x‚ÇÅ C (EQTUNION A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) f g eqi = ‚ä•-elim (NNneqUNION (‚áõ-val-det tt tt x y))
typeSysConds-NN-extrevl1 u w A B t x x‚ÇÅ C (EQTQTUNION A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) f g eqi = ‚ä•-elim (NNneqQTUNION (‚áõ-val-det tt tt x y))
typeSysConds-NN-extrevl1 u w A B t x x‚ÇÅ C (EQTSQUASH A3 A4 y y‚ÇÅ eqtA extA) f g eqi = ‚ä•-elim (NNneqTSQUASH (‚áõ-val-det tt tt x y))
typeSysConds-NN-extrevl1 u w A B t x x‚ÇÅ C (EQTTRUNC A3 A4 y y‚ÇÅ eqtA extA) f g eqi = ‚ä•-elim (NNneqTTRUNC (‚áõ-val-det tt tt x y))
typeSysConds-NN-extrevl1 u w A B t x x‚ÇÅ C (EQTSUBSING A3 A4 y y‚ÇÅ eqtA extA) f g eqi = ‚ä•-elim (NNneqSUBSING (‚áõ-val-det tt tt x y))
typeSysConds-NN-extrevl1 u w A B t x x‚ÇÅ C (EQTNN t‚ÇÅ y y‚ÇÅ) f g eqi
  rewrite #NNinj {t‚ÇÅ} {t} (#‚áõ-val-det {_} {A} tt tt y x)
  = Mod.‚àÄùïé-‚ñ°Func M aw eqi
  where
    aw : ‚àÄùïé w (Œª w' e' ‚Üí NNeq t f g
                        ‚Üí NNeq t f g)
    aw w1 e1 p = p

typeSysConds-NN-extrevl1 u w A B t x x‚ÇÅ C (EQTCONST A3 A4 y y‚ÇÅ eqtA extA) f g eqi = ‚ä•-elim (NNneqTCONST (‚áõ-val-det tt tt x y))
--typeSysConds-NN-extrevl1 u w A B t x x‚ÇÅ C (EQTDUM A3 A4 y y‚ÇÅ eqtA) f g eqi = ‚ä•-elim (NNneqDUM (‚áõ-val-det tt tt x y))
typeSysConds-NN-extrevl1 u w A B t x x‚ÇÅ C (EQFFDEFS A3 A4 x1 x2 y y‚ÇÅ eqtA extA eqx) f g eqi = ‚ä•-elim (NNneqFFDEFS (‚áõ-val-det tt tt x y))
typeSysConds-NN-extrevl1 u w A B t x x‚ÇÅ C (EQTUNIV i p c‚ÇÅ c‚ÇÇ) f g eqi = ‚ä•-elim (NNneqUNIV (‚áõ-val-det tt tt x c‚ÇÅ))
{--  ‚ä•-elim (lift‚ä• (Bar.‚ñ°-const barI (Mod.‚àÄùïé-‚ñ°Func M q z)))
  where
    z : ‚ñ°¬∑ w (Œª w' _ ‚Üí A #‚áõ (#UNIV (fst u)) at w' √ó C #‚áõ (#UNIV (fst u)) at w')
    z = isu w A C y

    q : ‚àÄùïé w (Œª w' e' ‚Üí A #‚áõ #UNIV (proj‚ÇÅ u) at w' √ó C #‚áõ #UNIV (proj‚ÇÅ u) at w' ‚Üí Lift 1‚Ñì ‚ä•)
    q w1 e1 (d‚ÇÅ , d‚ÇÇ) = lift (‚ä•-elim (NNneqUNIV (‚áõ-val-det tt tt (‚áõ-mon e1 x) d‚ÇÅ)))--}

typeSysConds-NN-extrevl1 u w A B t x x‚ÇÅ C (EQTLIFT A3 A4 y y‚ÇÅ eqtA extA) f g eqi = ‚ä•-elim (NNneqLIFT (‚áõ-val-det tt tt x y))
typeSysConds-NN-extrevl1 u w A B t x x‚ÇÅ C (EQTBAR y) f g eqi =
  Mod.‚ñ°-idem M (Mod.‚àÄùïé-‚ñ°'-‚ñ° M y aw eqi)
  where
    aw0 : ‚àÄùïé w
      (Œª w' e' ‚Üí
         (z : eqTypes u w' A C) {--(at : atbar y w' e' z)--} ‚Üí
         eqInType u w' z f g ‚Üí
         eqInType u w' {A} {B} (EQTNN t (‚áõ-mon e' x) (‚áõ-mon e' x‚ÇÅ)) f g)
    aw0 w1 e1 z {--at--} ez =
      typeSysConds-NN-extrevl1
        u w1 A B t
        (‚áõ-mon e1 x) (‚áõ-mon e1 x‚ÇÅ)
        C z f g ez

    aw : ‚àÄùïé w
      (Œª w' e' ‚Üí
         (z : eqTypes u w' A C) {--(at : atbar y w' e' z)--} ‚Üí
         eqInType u w' z f g ‚Üí
         ‚ñ°¬∑ w' (Œª w'' e'' ‚Üí (x : w ‚äë¬∑ w'') ‚Üí NNeq t f g))
    aw w1 e1 z {--at--} ez = Mod.‚àÄùïé-‚ñ°Func M (Œª w1 e1 z e ‚Üí z) (aw0 w1 e1 z {--at--} ez)
 -- (irr-subsing u w A1 B1 eqta exta f g w1 e1) (aw0 w1 e1 z {--at--} ez)



typeSysConds-NN-extrevl2 : (u : univs) (w : ùïé¬∑) (A B t : CTerm)
                                (x : A #‚áõ #NN t at w) (x‚ÇÅ : B #‚áõ #NN t at w)
                                ‚Üí eqInTypeExtRevL2 {_} {_} {A} {B} (EQTNN t x x‚ÇÅ)
{-# TERMINATING #-}
typeSysConds-NN-extrevl2 u w A B t x x‚ÇÅ C (EQTNAT y y‚ÇÅ) f g eqi = ‚ä•-elim (NNneqNAT (‚áõ-val-det tt tt x y‚ÇÅ))
typeSysConds-NN-extrevl2 u w A B t x x‚ÇÅ C (EQTQNAT y y‚ÇÅ) f g eqi = ‚ä•-elim (NNneqQNAT (‚áõ-val-det tt tt x y‚ÇÅ))
typeSysConds-NN-extrevl2 u w A B t x x‚ÇÅ C (EQTLT c1 c2 d1 d2 y y‚ÇÅ x‚ÇÑ x‚ÇÖ) f g eqi = ‚ä•-elim (NNneqLT (‚áõ-val-det tt tt x y‚ÇÅ))
typeSysConds-NN-extrevl2 u w A B t x x‚ÇÅ C (EQTQLT c1 c2 d1 d2 y y‚ÇÅ x‚ÇÑ x‚ÇÖ) f g eqi = ‚ä•-elim (NNneqQLT (‚áõ-val-det tt tt x y‚ÇÅ))
typeSysConds-NN-extrevl2 u w A B t x x‚ÇÅ C (EQTFREE y y‚ÇÅ) f g eqi = ‚ä•-elim (NNneqFREE (‚áõ-val-det tt tt x y‚ÇÅ))
typeSysConds-NN-extrevl2 u w A B t x x‚ÇÅ C (EQTPI A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) f g eqi = ‚ä•-elim (NNneqPI (‚áõ-val-det tt tt x y‚ÇÅ))
typeSysConds-NN-extrevl2 u w A B t x x‚ÇÅ C (EQTSUM A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) f g eqi = ‚ä•-elim (NNneqSUM (‚áõ-val-det tt tt x y‚ÇÅ))
typeSysConds-NN-extrevl2 u w A B t x x‚ÇÅ C (EQTSET A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) f g eqi = ‚ä•-elim (NNneqSET (‚áõ-val-det tt tt x y‚ÇÅ))
typeSysConds-NN-extrevl2 u w A B t x x‚ÇÅ C (EQTTUNION A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) f g eqi = ‚ä•-elim (NNneqTUNION (‚áõ-val-det tt tt x y‚ÇÅ))
typeSysConds-NN-extrevl2 u w A B t x x‚ÇÅ C (EQTEQ a‚ÇÅ b‚ÇÅ a‚ÇÇ b‚ÇÇ A‚ÇÅ B‚ÇÅ y y‚ÇÅ eqtA extA eqt‚ÇÅ eqt‚ÇÇ) f g eqi = ‚ä•-elim (NNneqEQ (‚áõ-val-det tt tt x y‚ÇÅ))
typeSysConds-NN-extrevl2 u w A B t x x‚ÇÅ C (EQTUNION A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) f g eqi = ‚ä•-elim (NNneqUNION (‚áõ-val-det tt tt x y‚ÇÅ))
typeSysConds-NN-extrevl2 u w A B t x x‚ÇÅ C (EQTQTUNION A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) f g eqi = ‚ä•-elim (NNneqQTUNION (‚áõ-val-det tt tt x y‚ÇÅ))
typeSysConds-NN-extrevl2 u w A B t x x‚ÇÅ C (EQTSQUASH A3 A4 y y‚ÇÅ eqtA extA) f g eqi = ‚ä•-elim (NNneqTSQUASH (‚áõ-val-det tt tt x y‚ÇÅ))
typeSysConds-NN-extrevl2 u w A B t x x‚ÇÅ C (EQTTRUNC A3 A4 y y‚ÇÅ eqtA extA) f g eqi = ‚ä•-elim (NNneqTTRUNC (‚áõ-val-det tt tt x y‚ÇÅ))
typeSysConds-NN-extrevl2 u w A B t x x‚ÇÅ C (EQTSUBSING A3 A4 y y‚ÇÅ eqtA extA) f g eqi = ‚ä•-elim (NNneqSUBSING (‚áõ-val-det tt tt x y‚ÇÅ))
typeSysConds-NN-extrevl2 u w A B t x x‚ÇÅ C (EQTNN t‚ÇÅ y y‚ÇÅ) f g eqi
  rewrite #NNinj {t‚ÇÅ} {t} (#‚áõ-val-det {_} {A} tt tt y‚ÇÅ x)
  = Mod.‚àÄùïé-‚ñ°Func M aw eqi
  where
    aw : ‚àÄùïé w (Œª w' e' ‚Üí NNeq t f g
                        ‚Üí NNeq t f g)
    aw w1 e1 p = p

typeSysConds-NN-extrevl2 u w A B t x x‚ÇÅ C (EQTCONST A3 A4 y y‚ÇÅ eqtA extA) f g eqi = ‚ä•-elim (NNneqTCONST (‚áõ-val-det tt tt x y‚ÇÅ))
--typeSysConds-NN-extrevl2 u w A B t x x‚ÇÅ C (EQTDUM A3 A4 y y‚ÇÅ eqtA) f g eqi = ‚ä•-elim (NNneqDUM (‚áõ-val-det tt tt x y‚ÇÅ))
typeSysConds-NN-extrevl2 u w A B t x x‚ÇÅ C (EQFFDEFS A3 A4 x1 x2 y y‚ÇÅ eqtA extA eqx) f g eqi = ‚ä•-elim (NNneqFFDEFS (‚áõ-val-det tt tt x y‚ÇÅ))
typeSysConds-NN-extrevl2 u w A B t x x‚ÇÅ C (EQTUNIV i p c‚ÇÅ c‚ÇÇ) f g eqi = ‚ä•-elim (NNneqUNIV (‚áõ-val-det tt tt x c‚ÇÇ))
{--  ‚ä•-elim (lift‚ä• (Bar.‚ñ°-const barI (Mod.‚àÄùïé-‚ñ°Func M q z)))
  where
    z : ‚ñ°¬∑ w (Œª w' _ ‚Üí C #‚áõ (#UNIV (fst u)) at w' √ó A #‚áõ (#UNIV (fst u)) at w')
    z = isu w C A y

    q : ‚àÄùïé w (Œª w' e' ‚Üí C #‚áõ #UNIV (proj‚ÇÅ u) at w' √ó A #‚áõ #UNIV (proj‚ÇÅ u) at w' ‚Üí Lift 1‚Ñì ‚ä•)
    q w1 e1 (d‚ÇÅ , d‚ÇÇ) = lift (‚ä•-elim (NNneqUNIV (‚áõ-val-det tt tt (‚áõ-mon e1 x) d‚ÇÇ)))--}

typeSysConds-NN-extrevl2 u w A B t x x‚ÇÅ C (EQTLIFT A3 A4 y y‚ÇÅ eqtA extA) f g eqi = ‚ä•-elim (NNneqLIFT (‚áõ-val-det tt tt x y‚ÇÅ))
typeSysConds-NN-extrevl2 u w A B t x x‚ÇÅ C (EQTBAR y) f g eqi =
  Mod.‚ñ°-idem M (Mod.‚àÄùïé-‚ñ°'-‚ñ° M y aw eqi)
  where
    aw0 : ‚àÄùïé w
      (Œª w' e' ‚Üí
         (z : eqTypes u w' C A) {--(at : atbar y w' e' z)--} ‚Üí
         eqInType u w' z f g ‚Üí
         eqInType u w' {A} {B} (EQTNN t (‚áõ-mon e' x) (‚áõ-mon e' x‚ÇÅ)) f g)
    aw0 w1 e1 z {--at--} ez =
      typeSysConds-NN-extrevl2
        u w1 A B t
        (‚áõ-mon e1 x) (‚áõ-mon e1 x‚ÇÅ)
        C z f g ez

    aw : ‚àÄùïé w
      (Œª w' e' ‚Üí
         (z : eqTypes u w' C A) {--(at : atbar y w' e' z)--} ‚Üí
         eqInType u w' z f g ‚Üí
         ‚ñ°¬∑ w' (Œª w'' e'' ‚Üí (x : w ‚äë¬∑ w'') ‚Üí NNeq t f g))
    aw w1 e1 z {--at--} ez = Mod.‚àÄùïé-‚ñ°Func M (Œª w1 e1 z e ‚Üí z) (aw0 w1 e1 z {--at--} ez)



typeSysConds-NN-extrevr1 : (u : univs) (w : ùïé¬∑) (A B t : CTerm)
                                (x : A #‚áõ #NN t at w) (x‚ÇÅ : B #‚áõ #NN t at w)
                                ‚Üí eqInTypeExtRevR1 {_} {_} {A} {B} (EQTNN t x x‚ÇÅ)
{-# TERMINATING #-}
typeSysConds-NN-extrevr1 u w A B t x x‚ÇÅ C (EQTNAT y y‚ÇÅ) f g eqi = ‚ä•-elim (NNneqNAT (‚áõ-val-det tt tt x‚ÇÅ y‚ÇÅ))
typeSysConds-NN-extrevr1 u w A B t x x‚ÇÅ C (EQTQNAT y y‚ÇÅ) f g eqi = ‚ä•-elim (NNneqQNAT (‚áõ-val-det tt tt x‚ÇÅ y‚ÇÅ))
typeSysConds-NN-extrevr1 u w A B t x x‚ÇÅ C (EQTLT c1 c2 d1 d2 y y‚ÇÅ x‚ÇÑ x‚ÇÖ) f g eqi = ‚ä•-elim (NNneqLT (‚áõ-val-det tt tt x‚ÇÅ y‚ÇÅ))
typeSysConds-NN-extrevr1 u w A B t x x‚ÇÅ C (EQTQLT c1 c2 d1 d2 y y‚ÇÅ x‚ÇÑ x‚ÇÖ) f g eqi = ‚ä•-elim (NNneqQLT (‚áõ-val-det tt tt x‚ÇÅ y‚ÇÅ))
typeSysConds-NN-extrevr1 u w A B t x x‚ÇÅ C (EQTFREE y y‚ÇÅ) f g eqi = ‚ä•-elim (NNneqFREE (‚áõ-val-det tt tt x‚ÇÅ y‚ÇÅ))
typeSysConds-NN-extrevr1 u w A B t x x‚ÇÅ C (EQTPI A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) f g eqi = ‚ä•-elim (NNneqPI (‚áõ-val-det tt tt x‚ÇÅ y‚ÇÅ))
typeSysConds-NN-extrevr1 u w A B t x x‚ÇÅ C (EQTSUM A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) f g eqi = ‚ä•-elim (NNneqSUM (‚áõ-val-det tt tt x‚ÇÅ y‚ÇÅ))
typeSysConds-NN-extrevr1 u w A B t x x‚ÇÅ C (EQTSET A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) f g eqi = ‚ä•-elim (NNneqSET (‚áõ-val-det tt tt x‚ÇÅ y‚ÇÅ))
typeSysConds-NN-extrevr1 u w A B t x x‚ÇÅ C (EQTTUNION A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) f g eqi = ‚ä•-elim (NNneqTUNION (‚áõ-val-det tt tt x‚ÇÅ y‚ÇÅ))
typeSysConds-NN-extrevr1 u w A B t x x‚ÇÅ C (EQTEQ a‚ÇÅ b‚ÇÅ a‚ÇÇ b‚ÇÇ A‚ÇÅ B‚ÇÅ y y‚ÇÅ eqtA extA eqt‚ÇÅ eqt‚ÇÇ) f g eqi = ‚ä•-elim (NNneqEQ (‚áõ-val-det tt tt x‚ÇÅ y‚ÇÅ))
typeSysConds-NN-extrevr1 u w A B t x x‚ÇÅ C (EQTUNION A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) f g eqi = ‚ä•-elim (NNneqUNION (‚áõ-val-det tt tt x‚ÇÅ y‚ÇÅ))
typeSysConds-NN-extrevr1 u w A B t x x‚ÇÅ C (EQTQTUNION A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) f g eqi = ‚ä•-elim (NNneqQTUNION (‚áõ-val-det tt tt x‚ÇÅ y‚ÇÅ))
typeSysConds-NN-extrevr1 u w A B t x x‚ÇÅ C (EQTSQUASH A3 A4 y y‚ÇÅ eqtA extA) f g eqi = ‚ä•-elim (NNneqTSQUASH (‚áõ-val-det tt tt x‚ÇÅ y‚ÇÅ))
typeSysConds-NN-extrevr1 u w A B t x x‚ÇÅ C (EQTTRUNC A3 A4 y y‚ÇÅ eqtA extA) f g eqi = ‚ä•-elim (NNneqTTRUNC (‚áõ-val-det tt tt x‚ÇÅ y‚ÇÅ))
typeSysConds-NN-extrevr1 u w A B t x x‚ÇÅ C (EQTSUBSING A3 A4 y y‚ÇÅ eqtA extA) f g eqi = ‚ä•-elim (NNneqSUBSING (‚áõ-val-det tt tt x‚ÇÅ y‚ÇÅ))
typeSysConds-NN-extrevr1 u w A B t x x‚ÇÅ C (EQTNN t‚ÇÅ y y‚ÇÅ) f g eqi
  rewrite #NNinj {t‚ÇÅ} {t} (#‚áõ-val-det {_} {B} tt tt y‚ÇÅ x‚ÇÅ)
  = Mod.‚àÄùïé-‚ñ°Func M aw eqi
  where
    aw : ‚àÄùïé w (Œª w' e' ‚Üí NNeq t f g
                       ‚Üí NNeq t f g)
    aw w1 e1 p = p

typeSysConds-NN-extrevr1 u w A B t x x‚ÇÅ C (EQTCONST A3 A4 y y‚ÇÅ eqtA extA) f g eqi = ‚ä•-elim (NNneqTCONST (‚áõ-val-det tt tt x‚ÇÅ y‚ÇÅ))
--typeSysConds-NN-extrevr1 u w A B t x x‚ÇÅ C (EQTDUM A3 A4 y y‚ÇÅ eqtA) f g eqi = ‚ä•-elim (NNneqDUM (‚áõ-val-det tt tt x‚ÇÅ y‚ÇÅ))
typeSysConds-NN-extrevr1 u w A B t x x‚ÇÅ C (EQFFDEFS A3 A4 x1 x2 y y‚ÇÅ eqtA extA eqx) f g eqi = ‚ä•-elim (NNneqFFDEFS (‚áõ-val-det tt tt x‚ÇÅ y‚ÇÅ))
typeSysConds-NN-extrevr1 u w A B t x x‚ÇÅ C (EQTUNIV i p c‚ÇÅ c‚ÇÇ) f g eqi = ‚ä•-elim (NNneqUNIV (‚áõ-val-det tt tt x‚ÇÅ c‚ÇÇ))
{--  ‚ä•-elim (lift‚ä• (Bar.‚ñ°-const barI (Mod.‚àÄùïé-‚ñ°Func M q z)))
  where
    z : ‚ñ°¬∑ w (Œª w' _ ‚Üí C #‚áõ (#UNIV (fst u)) at w' √ó B #‚áõ (#UNIV (fst u)) at w')
    z = isu w C B y

    q : ‚àÄùïé w (Œª w' e' ‚Üí C #‚áõ #UNIV (proj‚ÇÅ u) at w' √ó B #‚áõ #UNIV (proj‚ÇÅ u) at w' ‚Üí Lift 1‚Ñì ‚ä•)
    q w1 e1 (d‚ÇÅ , d‚ÇÇ) = lift (‚ä•-elim (NNneqUNIV (‚áõ-val-det tt tt (‚áõ-mon e1 x‚ÇÅ) d‚ÇÇ)))--}

typeSysConds-NN-extrevr1 u w A B t x x‚ÇÅ C (EQTLIFT A3 A4 y y‚ÇÅ eqtA extA) f g eqi = ‚ä•-elim (NNneqLIFT (‚áõ-val-det tt tt x‚ÇÅ y‚ÇÅ))
typeSysConds-NN-extrevr1 u w A B t x x‚ÇÅ C (EQTBAR y) f g eqi =
  Mod.‚ñ°-idem M (Mod.‚àÄùïé-‚ñ°'-‚ñ° M y aw eqi)
  where
    aw0 : ‚àÄùïé w
      (Œª w' e' ‚Üí
         (z : eqTypes u w' C B) {--(at : atbar y w' e' z)--} ‚Üí
         eqInType u w' z f g ‚Üí
         eqInType u w' {A} {B} (EQTNN t (‚áõ-mon e' x) (‚áõ-mon e' x‚ÇÅ)) f g)
    aw0 w1 e1 z {--at--} ez =
      typeSysConds-NN-extrevr1
        u w1 A B t
        (‚áõ-mon e1 x) (‚áõ-mon e1 x‚ÇÅ)
        C z f g ez

    aw : ‚àÄùïé w
      (Œª w' e' ‚Üí
         (z : eqTypes u w' C B) {--(at : atbar y w' e' z)--} ‚Üí
         eqInType u w' z f g ‚Üí
         ‚ñ°¬∑ w' (Œª w'' e'' ‚Üí (x : w ‚äë¬∑ w'') ‚Üí NNeq t f g))
    aw w1 e1 z {--at--} ez = Mod.‚àÄùïé-‚ñ°Func M (Œª w1 e1 z e ‚Üí z) (aw0 w1 e1 z {--at--} ez)



typeSysConds-NN-extrevr2 : (u : univs) (w : ùïé¬∑) (A B t : CTerm)
                                (x : A #‚áõ #NN t at w) (x‚ÇÅ : B #‚áõ #NN t at w)
                                ‚Üí eqInTypeExtRevR2 {_} {_} {A} {B} (EQTNN t x x‚ÇÅ)
{-# TERMINATING #-}
typeSysConds-NN-extrevr2 u w A B t x x‚ÇÅ C (EQTNAT y y‚ÇÅ) f g eqi = ‚ä•-elim (NNneqNAT (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-extrevr2 u w A B t x x‚ÇÅ C (EQTQNAT y y‚ÇÅ) f g eqi = ‚ä•-elim (NNneqQNAT (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-extrevr2 u w A B t x x‚ÇÅ C (EQTLT c1 c2 d1 d2 y y‚ÇÅ x‚ÇÑ x‚ÇÖ) f g eqi = ‚ä•-elim (NNneqLT (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-extrevr2 u w A B t x x‚ÇÅ C (EQTQLT c1 c2 d1 d2 y y‚ÇÅ x‚ÇÑ x‚ÇÖ) f g eqi = ‚ä•-elim (NNneqQLT (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-extrevr2 u w A B t x x‚ÇÅ C (EQTFREE y y‚ÇÅ) f g eqi = ‚ä•-elim (NNneqFREE (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-extrevr2 u w A B t x x‚ÇÅ C (EQTPI A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) f g eqi = ‚ä•-elim (NNneqPI (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-extrevr2 u w A B t x x‚ÇÅ C (EQTSUM A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) f g eqi = ‚ä•-elim (NNneqSUM (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-extrevr2 u w A B t x x‚ÇÅ C (EQTSET A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) f g eqi = ‚ä•-elim (NNneqSET (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-extrevr2 u w A B t x x‚ÇÅ C (EQTTUNION A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) f g eqi = ‚ä•-elim (NNneqTUNION (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-extrevr2 u w A B t x x‚ÇÅ C (EQTEQ a‚ÇÅ b‚ÇÅ a‚ÇÇ b‚ÇÇ A‚ÇÅ B‚ÇÅ y y‚ÇÅ eqtA extA eqt‚ÇÅ eqt‚ÇÇ) f g eqi = ‚ä•-elim (NNneqEQ (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-extrevr2 u w A B t x x‚ÇÅ C (EQTUNION A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) f g eqi = ‚ä•-elim (NNneqUNION (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-extrevr2 u w A B t x x‚ÇÅ C (EQTQTUNION A3 B3 A4 B4 y y‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) f g eqi = ‚ä•-elim (NNneqQTUNION (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-extrevr2 u w A B t x x‚ÇÅ C (EQTSQUASH A3 A4 y y‚ÇÅ eqtA extA) f g eqi = ‚ä•-elim (NNneqTSQUASH (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-extrevr2 u w A B t x x‚ÇÅ C (EQTTRUNC A3 A4 y y‚ÇÅ eqtA extA) f g eqi = ‚ä•-elim (NNneqTTRUNC (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-extrevr2 u w A B t x x‚ÇÅ C (EQTSUBSING A3 A4 y y‚ÇÅ eqtA extA) f g eqi = ‚ä•-elim (NNneqSUBSING (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-extrevr2 u w A B t x x‚ÇÅ C (EQTNN t‚ÇÅ y y‚ÇÅ) f g eqi
  rewrite #NNinj {t‚ÇÅ} {t} (#‚áõ-val-det {_} {B} tt tt y x‚ÇÅ)
  = Mod.‚àÄùïé-‚ñ°Func M aw eqi
  where
    aw : ‚àÄùïé w (Œª w' e' ‚Üí NNeq t f g
                       ‚Üí NNeq t f g)
    aw w1 e1 p = p

typeSysConds-NN-extrevr2 u w A B t x x‚ÇÅ C (EQTCONST A3 A4 y y‚ÇÅ eqtA extA) f g eqi = ‚ä•-elim (NNneqTCONST (‚áõ-val-det tt tt x‚ÇÅ y))
--typeSysConds-NN-extrevr2 u w A B t x x‚ÇÅ C (EQTDUM A3 A4 y y‚ÇÅ eqtA) f g eqi = ‚ä•-elim (NNneqDUM (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-extrevr2 u w A B t x x‚ÇÅ C (EQFFDEFS A3 A4 x1 x2 y y‚ÇÅ eqtA extA eqx) f g eqi = ‚ä•-elim (NNneqFFDEFS (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-extrevr2 u w A B t x x‚ÇÅ C (EQTUNIV i p c‚ÇÅ c‚ÇÇ) f g eqi = ‚ä•-elim (NNneqUNIV (‚áõ-val-det tt tt x‚ÇÅ c‚ÇÅ))
{--  ‚ä•-elim (lift‚ä• (Bar.‚ñ°-const barI (Mod.‚àÄùïé-‚ñ°Func M q z)))
  where
    z : ‚ñ°¬∑ w (Œª w' _ ‚Üí B #‚áõ (#UNIV (fst u)) at w' √ó C #‚áõ (#UNIV (fst u)) at w')
    z = isu w B C y

    q : ‚àÄùïé w (Œª w' e' ‚Üí B #‚áõ #UNIV (proj‚ÇÅ u) at w' √ó C #‚áõ #UNIV (proj‚ÇÅ u) at w' ‚Üí Lift 1‚Ñì ‚ä•)
    q w1 e1 (d‚ÇÅ , d‚ÇÇ) = lift (‚ä•-elim (NNneqUNIV (‚áõ-val-det tt tt (‚áõ-mon e1 x‚ÇÅ) d‚ÇÅ)))--}

typeSysConds-NN-extrevr2 u w A B t x x‚ÇÅ C (EQTLIFT A3 A4 y y‚ÇÅ eqtA extA) f g eqi = ‚ä•-elim (NNneqLIFT (‚áõ-val-det tt tt x‚ÇÅ y))
typeSysConds-NN-extrevr2 u w A B t x x‚ÇÅ C (EQTBAR y) f g eqi =
  Mod.‚ñ°-idem M (Mod.‚àÄùïé-‚ñ°'-‚ñ° M y aw eqi)
  where
    aw0 : ‚àÄùïé w
      (Œª w' e' ‚Üí
         (z : eqTypes u w' B C) {--(at : atbar y w' e' z)--} ‚Üí
         eqInType u w' z f g ‚Üí
         eqInType u w' {A} {B} (EQTNN t (‚áõ-mon e' x) (‚áõ-mon e' x‚ÇÅ)) f g)
    aw0 w1 e1 z {--at--} ez =
      typeSysConds-NN-extrevr2
        u w1 A B t
        (‚áõ-mon e1 x) (‚áõ-mon e1 x‚ÇÅ)
        C z f g ez

    aw : ‚àÄùïé w
      (Œª w' e' ‚Üí
         (z : eqTypes u w' B C) {--(at : atbar y w' e' z)--} ‚Üí
         eqInType u w' z f g ‚Üí
         ‚ñ°¬∑ w' (Œª w'' e'' ‚Üí (x : w ‚äë¬∑ w'') ‚Üí NNeq t f g))
    aw w1 e1 z {--at--} ez = Mod.‚àÄùïé-‚ñ°Func M (Œª w1 e1 z e ‚Üí z) (aw0 w1 e1 z {--at--} ez)




eqInType-‚áõ-NN : (u : univs) (w : ùïé¬∑) (A B t a b : CTerm)
                      ‚Üí A #‚áõ #NN t at w
                      ‚Üí B #‚áõ #NN t at w
                      ‚Üí (eqt : eqTypes u w A B)
                      ‚Üí eqInType u w eqt a b
                      ‚Üí ‚ñ°¬∑ w (Œª w' e ‚Üí NNeq t a b)
{-# TERMINATING #-}
eqInType-‚áõ-NN u w A B t a b c‚ÇÅ c‚ÇÇ (EQTNAT x x‚ÇÅ) ei = ‚ä•-elim (NNneqNAT (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN u w A B t a b c‚ÇÅ c‚ÇÇ (EQTQNAT x x‚ÇÅ) ei = ‚ä•-elim (NNneqQNAT (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN u w A B t a b c‚ÇÅ c‚ÇÇ (EQTLT a1 a2 b1 b2 x x‚ÇÅ x‚ÇÇ x‚ÇÉ) ei = ‚ä•-elim (NNneqLT (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN u w A B t a b c‚ÇÅ c‚ÇÇ (EQTQLT a1 a2 b1 b2 x x‚ÇÅ x‚ÇÇ x‚ÇÉ) ei = ‚ä•-elim (NNneqQLT (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN u w A B t a b c‚ÇÅ c‚ÇÇ (EQTFREE x x‚ÇÅ) ei = ‚ä•-elim (NNneqFREE (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN u w A B t a b c‚ÇÅ c‚ÇÇ (EQTPI A3 B3 A4 B4 x x‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) ei = ‚ä•-elim (NNneqPI (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN u w A B t a b c‚ÇÅ c‚ÇÇ (EQTSUM A3 B3 A4 B4 x x‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) ei = ‚ä•-elim (NNneqSUM (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN u w A B t a b c‚ÇÅ c‚ÇÇ (EQTSET A3 B3 A4 B4 x x‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) ei = ‚ä•-elim (NNneqSET (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN u w A B t a b c‚ÇÅ c‚ÇÇ (EQTTUNION A3 B3 A4 B4 x x‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) ei = ‚ä•-elim (NNneqTUNION (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN u w A B t a b c‚ÇÅ c‚ÇÇ (EQTEQ a1 b1 a2 b2 A‚ÇÅ B‚ÇÅ x x‚ÇÅ eqtA extA eqt1 eqt2) ei = ‚ä•-elim (NNneqEQ (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN u w A B t a b c‚ÇÅ c‚ÇÇ (EQTUNION A3 B3 A4 B4 x x‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) ei = ‚ä•-elim (NNneqUNION (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN u w A B t a b c‚ÇÅ c‚ÇÇ (EQTQTUNION A3 B3 A4 B4 x x‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) ei = ‚ä•-elim (NNneqQTUNION (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN u w A B t a b c‚ÇÅ c‚ÇÇ (EQTSQUASH A3 A4 x x‚ÇÅ eqta‚ÇÅ exta‚ÇÅ) ei = ‚ä•-elim (NNneqTSQUASH (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN u w A B t a b c‚ÇÅ c‚ÇÇ (EQTTRUNC A3 A4 x x‚ÇÅ eqta‚ÇÅ exta‚ÇÅ) ei = ‚ä•-elim (NNneqTTRUNC (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN u w A B t a b c‚ÇÅ c‚ÇÇ (EQTSUBSING A3 A4 x x‚ÇÅ eqta‚ÇÅ exta‚ÇÅ) ei = ‚ä•-elim (NNneqSUBSING (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN u w A B t a b c‚ÇÅ c‚ÇÇ (EQTNN t‚ÇÅ x x‚ÇÅ) ei
  rewrite #NNinj {t‚ÇÅ} {t} (#‚áõ-val-det {_} {A} tt tt x c‚ÇÅ) =
  Mod.‚àÄùïé-‚ñ°Func M aw ei
  where
    aw : ‚àÄùïé w (Œª w' e' ‚Üí NNeq t a b
                        ‚Üí NNeq t a b)
    aw w1 e1 p = p

eqInType-‚áõ-NN u w A B t a b c‚ÇÅ c‚ÇÇ (EQTCONST A3 A4 x x‚ÇÅ eqta‚ÇÅ exta‚ÇÅ) ei = ‚ä•-elim (NNneqTCONST (‚áõ-val-det tt tt c‚ÇÅ x))
--eqInType-‚áõ-NN u w A B t a b c‚ÇÅ c‚ÇÇ (EQTDUM A3 A4 x x‚ÇÅ eqtA) ei = ‚ä•-elim (NNneqDUM (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN u w A B t a b c‚ÇÅ c‚ÇÇ (EQFFDEFS A3 A4 x1 x2 x x‚ÇÅ eqtA extA eqx) ei = ‚ä•-elim (NNneqFFDEFS (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN u w A B t a b c‚ÇÅ c‚ÇÇ (EQTUNIV i p d‚ÇÅ d‚ÇÇ) ei = ‚ä•-elim (NNneqUNIV (‚áõ-val-det tt tt c‚ÇÅ d‚ÇÅ))
{--  ‚ä•-elim (lift‚ä• (Bar.‚ñ°-const barI (Mod.‚àÄùïé-‚ñ°Func M q z)))
  where
    z : ‚ñ°¬∑ w (Œª w' _ ‚Üí A #‚áõ (#UNIV (fst u)) at w' √ó B #‚áõ (#UNIV (fst u)) at w')
    z = isu w A B x

    q : ‚àÄùïé w (Œª w' e' ‚Üí A #‚áõ #UNIV (proj‚ÇÅ u) at w' √ó B #‚áõ #UNIV (proj‚ÇÅ u) at w' ‚Üí Lift 1‚Ñì ‚ä•)
    q w1 e1 (d‚ÇÅ , d‚ÇÇ) = lift (‚ä•-elim (NNneqUNIV (‚áõ-val-det tt tt (‚áõ-mon e1 c‚ÇÅ) d‚ÇÅ)))--}

eqInType-‚áõ-NN u w A B t a b c‚ÇÅ c‚ÇÇ (EQTLIFT A3 A4 x x‚ÇÅ eqtA extA) ei = ‚ä•-elim (NNneqLIFT (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN u w A B t a b c‚ÇÅ c‚ÇÇ (EQTBAR x) ei =
  Mod.‚ñ°-idem M (Mod.‚àÄùïé-‚ñ°'-‚ñ° M x aw ei)
  where
    aw0 : ‚àÄùïé w
      (Œª w' e' ‚Üí
         (z : eqTypes u w' A B) {--(at : atbar x w' e' z)--} ‚Üí
         eqInType u w' z a b ‚Üí
         ‚ñ°¬∑ w' (Œª w'' e ‚Üí NNeq t a b))
    aw0 w1 e1 z {--at--} ez =
      eqInType-‚áõ-NN
        u w1 A B t a b
        (‚áõ-mon e1 c‚ÇÅ) (‚áõ-mon e1 c‚ÇÇ) z ez

    aw : ‚àÄùïé w
      (Œª w' e' ‚Üí
         (z : eqTypes u w' A B) {--(at : atbar x w' e' z)--} ‚Üí
         eqInType u w' z a b ‚Üí
         ‚ñ°¬∑ w' (Œª w'' e ‚Üí (x : w ‚äë¬∑ w'') ‚Üí NNeq t a b))
    aw w1 e1 z {--at--} ez = Mod.‚àÄùïé-‚ñ°Func M (Œª w1 e1 z e ‚Üí z) (aw0 w1 e1 z {--at--} ez)




eqInType-‚áõ-NN2 : (u : ùïå) (w : ùïé¬∑) (A B t a b : CTerm)
                       ‚Üí A #‚áõ #NN t at w
                       ‚Üí B #‚áõ #NN t at w
                       ‚Üí (eqt : ‚â°Types u w A B)
                       ‚Üí (eqi : ‚â°‚ààType u w eqt a b)
                       ‚Üí ‚ñ°¬∑ w (Œª w' e ‚Üí NNeq t a b)
{-# TERMINATING #-}
eqInType-‚áõ-NN2 u w A B t a b c‚ÇÅ c‚ÇÇ (EQTNAT x x‚ÇÅ) ei = ‚ä•-elim (NNneqNAT (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN2 u w A B t a b c‚ÇÅ c‚ÇÇ (EQTQNAT x x‚ÇÅ) ei = ‚ä•-elim (NNneqQNAT (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN2 u w A B t a b c‚ÇÅ c‚ÇÇ (EQTLT a1 a2 b1 b2 x x‚ÇÅ x‚ÇÇ x‚ÇÉ) ei = ‚ä•-elim (NNneqLT (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN2 u w A B t a b c‚ÇÅ c‚ÇÇ (EQTQLT a1 a2 b1 b2 x x‚ÇÅ x‚ÇÇ x‚ÇÉ) ei = ‚ä•-elim (NNneqQLT (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN2 u w A B t a b c‚ÇÅ c‚ÇÇ (EQTFREE x x‚ÇÅ) ei = ‚ä•-elim (NNneqFREE (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN2 u w A B t a b c‚ÇÅ c‚ÇÇ (EQTPI A3 B3 A4 B4 x x‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) ei = ‚ä•-elim (NNneqPI (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN2 u w A B t a b c‚ÇÅ c‚ÇÇ (EQTSUM A3 B3 A4 B4 x x‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) ei = ‚ä•-elim (NNneqSUM (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN2 u w A B t a b c‚ÇÅ c‚ÇÇ (EQTSET A3 B3 A4 B4 x x‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) ei = ‚ä•-elim (NNneqSET (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN2 u w A B t a b c‚ÇÅ c‚ÇÇ (EQTTUNION A3 B3 A4 B4 x x‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) ei = ‚ä•-elim (NNneqTUNION (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN2 u w A B t a b c‚ÇÅ c‚ÇÇ (EQTEQ a1 b1 a2 b2 A‚ÇÅ B‚ÇÅ x x‚ÇÅ eqtA extA eqt1 eqt2) ei = ‚ä•-elim (NNneqEQ (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN2 u w A B t a b c‚ÇÅ c‚ÇÇ (EQTUNION A3 B3 A4 B4 x x‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) ei = ‚ä•-elim (NNneqUNION (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN2 u w A B t a b c‚ÇÅ c‚ÇÇ (EQTQTUNION A3 B3 A4 B4 x x‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) ei = ‚ä•-elim (NNneqQTUNION (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN2 u w A B t a b c‚ÇÅ c‚ÇÇ (EQTSQUASH A3 A4 x x‚ÇÅ eqta‚ÇÅ exta‚ÇÅ) ei = ‚ä•-elim (NNneqTSQUASH (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN2 u w A B t a b c‚ÇÅ c‚ÇÇ (EQTTRUNC A3 A4 x x‚ÇÅ eqta‚ÇÅ exta‚ÇÅ) ei = ‚ä•-elim (NNneqTTRUNC (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN2 u w A B t a b c‚ÇÅ c‚ÇÇ (EQTSUBSING A3 A4 x x‚ÇÅ eqta‚ÇÅ exta‚ÇÅ) ei = ‚ä•-elim (NNneqSUBSING (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN2 u w A B t a b c‚ÇÅ c‚ÇÇ (EQTNN t‚ÇÅ x x‚ÇÅ) ei
  rewrite #NNinj {t‚ÇÅ} {t} (#‚áõ-val-det {_} {A} tt tt x c‚ÇÅ) =
  Mod.‚àÄùïé-‚ñ°Func M aw ei
  where
    aw : ‚àÄùïé w (Œª w' e' ‚Üí NNeq t a b
                         ‚Üí NNeq t a b)
    aw w1 e1 p = p

eqInType-‚áõ-NN2 u w A B t a b c‚ÇÅ c‚ÇÇ (EQTCONST A3 A4 x x‚ÇÅ eqta‚ÇÅ exta‚ÇÅ) ei = ‚ä•-elim (NNneqTCONST (‚áõ-val-det tt tt c‚ÇÅ x))
--eqInType-‚áõ-NN2 u w A B t a b c‚ÇÅ c‚ÇÇ (EQTDUM A3 A4 x x‚ÇÅ eqtA) ei = ‚ä•-elim (NNneqDUM (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN2 u w A B t a b c‚ÇÅ c‚ÇÇ (EQFFDEFS A3 A4 x1 x2 x x‚ÇÅ eqtA extA eqx) ei = ‚ä•-elim (NNneqFFDEFS (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN2 u w A B t a b c‚ÇÅ c‚ÇÇ (EQTUNIV i p d‚ÇÅ d‚ÇÇ) ei = ‚ä•-elim (NNneqUNIV (‚áõ-val-det tt tt c‚ÇÅ d‚ÇÅ))
{--  ‚ä•-elim (lift‚ä• (Bar.‚ñ°-const barI (Mod.‚àÄùïé-‚ñ°Func M q z)))
  where
    z : ‚ñ°¬∑ w (Œª w' _ ‚Üí A #‚áõ (#UNIV (fst u)) at w' √ó B #‚áõ (#UNIV (fst u)) at w')
    z = isu w A B x

    q : ‚àÄùïé w (Œª w' e' ‚Üí A #‚áõ #UNIV (proj‚ÇÅ u) at w' √ó B #‚áõ #UNIV (proj‚ÇÅ u) at w' ‚Üí Lift 1‚Ñì ‚ä•)
    q w1 e1 (d‚ÇÅ , d‚ÇÇ) = lift (‚ä•-elim (NNneqUNIV (‚áõ-val-det tt tt (‚áõ-mon e1 c‚ÇÅ) d‚ÇÅ)))--}

eqInType-‚áõ-NN2 u w A B t a b c‚ÇÅ c‚ÇÇ (EQTLIFT A3 A4 x x‚ÇÅ eqtA extA) ei = ‚ä•-elim (NNneqLIFT (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN2 u w A B t a b c‚ÇÅ c‚ÇÇ (EQTBAR x) ei =
  Mod.‚ñ°-idem M (Mod.‚àÄùïé-‚ñ°'-‚ñ° M x aw ei)
  where
    aw0 : ‚àÄùïé w
      (Œª w' e' ‚Üí
         (z : ‚â°Types u w' A B) {--(at : atbar x w' e' z)--} ‚Üí
         ‚â°‚ààType u w' z a b ‚Üí
         ‚ñ°¬∑ w' (Œª w'' e ‚Üí NNeq t a b))
    aw0 w1 e1 z {--at--} ez =
      eqInType-‚áõ-NN2
        u w1 A B t a b
        (‚áõ-mon e1 c‚ÇÅ) (‚áõ-mon e1 c‚ÇÇ) z ez

    aw : ‚àÄùïé w
      (Œª w' e' ‚Üí
         (z : ‚â°Types u w' A B) {--(at : atbar x w' e' z)--} ‚Üí
         ‚â°‚ààType u w' z a b ‚Üí
         ‚ñ°¬∑ w' (Œª w'' e ‚Üí (x : w ‚äë¬∑ w'') ‚Üí NNeq t a b))
    aw w1 e1 z {--at--} ez = Mod.‚àÄùïé-‚ñ°Func M (Œª w1 e1 z e ‚Üí z) (aw0 w1 e1 z {--at--} ez)




eqInType-‚áõ-NN-rev : (u : univs) (w : ùïé¬∑) (A B t a b : CTerm)
                          ‚Üí A #‚áõ #NN t at w
                          ‚Üí B #‚áõ #NN t at w
                          ‚Üí (eqt : eqTypes u w A B)
                          ‚Üí ‚ñ°¬∑ w (Œª w' e ‚Üí NNeq t a b)
                          ‚Üí eqInType u w eqt a b
{-# TERMINATING #-}
eqInType-‚áõ-NN-rev u w A B t a b c‚ÇÅ c‚ÇÇ (EQTNAT x x‚ÇÅ) ei = ‚ä•-elim (NNneqNAT (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN-rev u w A B t a b c‚ÇÅ c‚ÇÇ (EQTQNAT x x‚ÇÅ) ei = ‚ä•-elim (NNneqQNAT (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN-rev u w A B t a b c‚ÇÅ c‚ÇÇ (EQTLT a1 a2 b1 b2 x x‚ÇÅ x‚ÇÇ x‚ÇÉ) ei = ‚ä•-elim (NNneqLT (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN-rev u w A B t a b c‚ÇÅ c‚ÇÇ (EQTQLT a1 a2 b1 b2 x x‚ÇÅ x‚ÇÇ x‚ÇÉ) ei = ‚ä•-elim (NNneqQLT (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN-rev u w A B t a b c‚ÇÅ c‚ÇÇ (EQTFREE x x‚ÇÅ) ei = ‚ä•-elim (NNneqFREE (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN-rev u w A B t a b c‚ÇÅ c‚ÇÇ (EQTPI A3 B3 A4 B4 x x‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) ei = ‚ä•-elim (NNneqPI (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN-rev u w A B t a b c‚ÇÅ c‚ÇÇ (EQTSUM A3 B3 A4 B4 x x‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) ei = ‚ä•-elim (NNneqSUM (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN-rev u w A B t a b c‚ÇÅ c‚ÇÇ (EQTSET A3 B3 A4 B4 x x‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) ei = ‚ä•-elim (NNneqSET (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN-rev u w A B t a b c‚ÇÅ c‚ÇÇ (EQTTUNION A3 B3 A4 B4 x x‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) ei = ‚ä•-elim (NNneqTUNION (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN-rev u w A B t a b c‚ÇÅ c‚ÇÇ (EQTEQ a1 b1 a2 b2 A‚ÇÅ B‚ÇÅ x x‚ÇÅ eqtA extA eqt1 eqt2) ei = ‚ä•-elim (NNneqEQ (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN-rev u w A B t a b c‚ÇÅ c‚ÇÇ (EQTUNION A3 B3 A4 B4 x x‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) ei = ‚ä•-elim (NNneqUNION (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN-rev u w A B t a b c‚ÇÅ c‚ÇÇ (EQTQTUNION A3 B3 A4 B4 x x‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) ei = ‚ä•-elim (NNneqQTUNION (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN-rev u w A B t a b c‚ÇÅ c‚ÇÇ (EQTSQUASH A3 A4 x x‚ÇÅ eqta‚ÇÅ exta‚ÇÅ) ei = ‚ä•-elim (NNneqTSQUASH (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN-rev u w A B t a b c‚ÇÅ c‚ÇÇ (EQTTRUNC A3 A4 x x‚ÇÅ eqta‚ÇÅ exta‚ÇÅ) ei = ‚ä•-elim (NNneqTTRUNC (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN-rev u w A B t a b c‚ÇÅ c‚ÇÇ (EQTSUBSING A3 A4 x x‚ÇÅ eqta‚ÇÅ exta‚ÇÅ) ei = ‚ä•-elim (NNneqSUBSING (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN-rev u w A B t a b c‚ÇÅ c‚ÇÇ (EQTNN t‚ÇÅ x x‚ÇÅ) ei
  rewrite #NNinj {t‚ÇÅ} {t} (#‚áõ-val-det {_} {A} tt tt x c‚ÇÅ) =
  Mod.‚àÄùïé-‚ñ°Func M aw ei
  where
    aw : ‚àÄùïé w (Œª w' e' ‚Üí NNeq t a b
                        ‚Üí NNeq t a b)
    aw w1 e1 p = p

eqInType-‚áõ-NN-rev u w A B t a b c‚ÇÅ c‚ÇÇ (EQTCONST A3 A4 x x‚ÇÅ eqta‚ÇÅ exta‚ÇÅ) ei = ‚ä•-elim (NNneqTCONST (‚áõ-val-det tt tt c‚ÇÅ x))
--eqInType-‚áõ-NN-rev u w A B t a b c‚ÇÅ c‚ÇÇ (EQTDUM A3 A4 x x‚ÇÅ eqtA) ei = ‚ä•-elim (NNneqDUM (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN-rev u w A B t a b c‚ÇÅ c‚ÇÇ (EQFFDEFS A3 A4 x1 x2 x x‚ÇÅ eqtA extA eqx) ei = ‚ä•-elim (NNneqFFDEFS (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN-rev u w A B t a b c‚ÇÅ c‚ÇÇ (EQTUNIV i p d‚ÇÅ d‚ÇÇ) ei = ‚ä•-elim (NNneqUNIV (‚áõ-val-det tt tt c‚ÇÅ d‚ÇÅ))
{--  ‚ä•-elim (lift‚ä• (Bar.‚ñ°-const barI (Mod.‚àÄùïé-‚ñ°Func M q z)))
  where
    z : ‚ñ°¬∑ w (Œª w' _ ‚Üí A #‚áõ (#UNIV (fst u)) at w' √ó B #‚áõ (#UNIV (fst u)) at w')
    z = isu w A B x

    q : ‚àÄùïé w (Œª w' e' ‚Üí A #‚áõ #UNIV (proj‚ÇÅ u) at w' √ó B #‚áõ #UNIV (proj‚ÇÅ u) at w' ‚Üí Lift 1‚Ñì ‚ä•)
    q w1 e1 (d‚ÇÅ , d‚ÇÇ) = lift (‚ä•-elim (NNneqUNIV (‚áõ-val-det tt tt (‚áõ-mon e1 c‚ÇÅ) d‚ÇÅ)))--}

eqInType-‚áõ-NN-rev u w A B t a b c‚ÇÅ c‚ÇÇ (EQTLIFT A3 A4 x x‚ÇÅ eqtA extA) ei = ‚ä•-elim (NNneqLIFT (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN-rev u w A B t a b c‚ÇÅ c‚ÇÇ (EQTBAR x) ei =
  Mod.‚àÄùïé-‚ñ°-‚ñ°' M x aw
  where
    aw : ‚àÄùïé w
      (Œª w' e' ‚Üí (z : eqTypes u w' A B) {--(at : atbar x w' e' z)--} ‚Üí eqInType u w' z a b)
    aw w1 e1 z {--at--} =
      eqInType-‚áõ-NN-rev
        u w1 A B t a b
        (‚áõ-mon e1 c‚ÇÅ) (‚áõ-mon e1 c‚ÇÇ)
        z j
      where
        j : ‚ñ°¬∑ w1 (‚ÜëwPred (Œª w' e ‚Üí NNeq t a b) e1)
        j = Mod.‚Üë‚ñ° M ei e1



eqInType-‚áõ-NN-rev2 : (u : ùïå) (w : ùïé¬∑) (A B t a b : CTerm)
                           ‚Üí A #‚áõ #NN t at w
                           ‚Üí B #‚áõ #NN t at w
                           ‚Üí (eqt : ‚â°Types u w A B)
                           ‚Üí ‚ñ°¬∑ w (Œª w' e ‚Üí NNeq t a b)
                           ‚Üí ‚â°‚ààType u w eqt a b
{-# TERMINATING #-}
eqInType-‚áõ-NN-rev2 u w A B t a b c‚ÇÅ c‚ÇÇ (EQTNAT x x‚ÇÅ) ei = ‚ä•-elim (NNneqNAT (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN-rev2 u w A B t a b c‚ÇÅ c‚ÇÇ (EQTQNAT x x‚ÇÅ) ei = ‚ä•-elim (NNneqQNAT (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN-rev2 u w A B t a b c‚ÇÅ c‚ÇÇ (EQTLT a1 a2 b1 b2 x x‚ÇÅ x‚ÇÇ x‚ÇÉ) ei = ‚ä•-elim (NNneqLT (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN-rev2 u w A B t a b c‚ÇÅ c‚ÇÇ (EQTQLT a1 a2 b1 b2 x x‚ÇÅ x‚ÇÇ x‚ÇÉ) ei = ‚ä•-elim (NNneqQLT (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN-rev2 u w A B t a b c‚ÇÅ c‚ÇÇ (EQTFREE x x‚ÇÅ) ei = ‚ä•-elim (NNneqFREE (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN-rev2 u w A B t a b c‚ÇÅ c‚ÇÇ (EQTPI A3 B3 A4 B4 x x‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) ei = ‚ä•-elim (NNneqPI (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN-rev2 u w A B t a b c‚ÇÅ c‚ÇÇ (EQTSUM A3 B3 A4 B4 x x‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) ei = ‚ä•-elim (NNneqSUM (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN-rev2 u w A B t a b c‚ÇÅ c‚ÇÇ (EQTSET A3 B3 A4 B4 x x‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) ei = ‚ä•-elim (NNneqSET (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN-rev2 u w A B t a b c‚ÇÅ c‚ÇÇ (EQTTUNION A3 B3 A4 B4 x x‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) ei = ‚ä•-elim (NNneqTUNION (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN-rev2 u w A B t a b c‚ÇÅ c‚ÇÇ (EQTEQ a1 b1 a2 b2 A‚ÇÅ B‚ÇÅ x x‚ÇÅ eqtA extA eqt1 eqt2) ei = ‚ä•-elim (NNneqEQ (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN-rev2 u w A B t a b c‚ÇÅ c‚ÇÇ (EQTUNION A3 B3 A4 B4 x x‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) ei = ‚ä•-elim (NNneqUNION (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN-rev2 u w A B t a b c‚ÇÅ c‚ÇÇ (EQTQTUNION A3 B3 A4 B4 x x‚ÇÅ eqta‚ÇÅ eqtb‚ÇÅ exta‚ÇÅ extb‚ÇÅ) ei = ‚ä•-elim (NNneqQTUNION (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN-rev2 u w A B t a b c‚ÇÅ c‚ÇÇ (EQTSQUASH A3 A4 x x‚ÇÅ eqta‚ÇÅ exta‚ÇÅ) ei = ‚ä•-elim (NNneqTSQUASH (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN-rev2 u w A B t a b c‚ÇÅ c‚ÇÇ (EQTTRUNC A3 A4 x x‚ÇÅ eqta‚ÇÅ exta‚ÇÅ) ei = ‚ä•-elim (NNneqTTRUNC (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN-rev2 u w A B t a b c‚ÇÅ c‚ÇÇ (EQTSUBSING A3 A4 x x‚ÇÅ eqta‚ÇÅ exta‚ÇÅ) ei = ‚ä•-elim (NNneqSUBSING (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN-rev2 u w A B t a b c‚ÇÅ c‚ÇÇ (EQTNN t‚ÇÅ x x‚ÇÅ) ei
  rewrite #NNinj {t‚ÇÅ} {t} (#‚áõ-val-det {_} {A} tt tt x c‚ÇÅ) =
  Mod.‚àÄùïé-‚ñ°Func M aw ei
  where
    aw : ‚àÄùïé w (Œª w' e' ‚Üí NNeq t a b
                        ‚Üí NNeq t a b)
    aw w1 e1 p = p

eqInType-‚áõ-NN-rev2 u w A B t a b c‚ÇÅ c‚ÇÇ (EQTCONST A3 A4 x x‚ÇÅ eqta‚ÇÅ exta‚ÇÅ) ei = ‚ä•-elim (NNneqTCONST (‚áõ-val-det tt tt c‚ÇÅ x))
--eqInType-‚áõ-NN-rev2 u w A B t a b c‚ÇÅ c‚ÇÇ (EQTDUM A3 A4 x x‚ÇÅ eqtA) ei = ‚ä•-elim (NNneqDUM (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN-rev2 u w A B t a b c‚ÇÅ c‚ÇÇ (EQFFDEFS A3 A4 x1 x2 x x‚ÇÅ eqtA extA eqx) ei = ‚ä•-elim (NNneqFFDEFS (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN-rev2 u w A B t a b c‚ÇÅ c‚ÇÇ (EQTUNIV i p d‚ÇÅ d‚ÇÇ) ei = ‚ä•-elim (NNneqUNIV (‚áõ-val-det tt tt c‚ÇÅ d‚ÇÅ))
{--  ‚ä•-elim (lift‚ä• (Bar.‚ñ°-const barI (Mod.‚àÄùïé-‚ñ°Func M q z)))
  where
    z : ‚ñ°¬∑ w (Œª w' _ ‚Üí A #‚áõ (#UNIV (fst u)) at w' √ó B #‚áõ (#UNIV (fst u)) at w')
    z = isu w A B x

    q : ‚àÄùïé w (Œª w' e' ‚Üí A #‚áõ #UNIV (proj‚ÇÅ u) at w' √ó B #‚áõ #UNIV (proj‚ÇÅ u) at w' ‚Üí Lift 1‚Ñì ‚ä•)
    q w1 e1 (d‚ÇÅ , d‚ÇÇ) = lift (‚ä•-elim (NNneqUNIV (‚áõ-val-det tt tt (‚áõ-mon e1 c‚ÇÅ) d‚ÇÅ)))--}

eqInType-‚áõ-NN-rev2 u w A B t a b c‚ÇÅ c‚ÇÇ (EQTLIFT A3 A4 x x‚ÇÅ eqtA extA) ei = ‚ä•-elim (NNneqLIFT (‚áõ-val-det tt tt c‚ÇÅ x))
eqInType-‚áõ-NN-rev2 u w A B t a b c‚ÇÅ c‚ÇÇ (EQTBAR x) ei =
  Mod.‚àÄùïé-‚ñ°-‚ñ°' M x aw
  where
    aw : ‚àÄùïé w
      (Œª w' e' ‚Üí (z : ‚â°Types u w' A B) {--(at : atbar x w' e' z)--} ‚Üí ‚â°‚ààType u w' z a b)
    aw w1 e1 z {--at--} =
      eqInType-‚áõ-NN-rev2
        u w1 A B t a b
        (‚áõ-mon e1 c‚ÇÅ) (‚áõ-mon e1 c‚ÇÇ)
        z j
      where
        j : ‚ñ°¬∑ w1 (‚ÜëwPred (Œª w' e ‚Üí NNeq t a b) e1)
        j = Mod.‚Üë‚ñ° M ei e1



typeSysConds-NN-local : (u : univs) (w : ùïé¬∑) (A B t : CTerm)
                             (x : A #‚áõ #NN t at w) (x‚ÇÅ : B #‚áõ #NN t at w)
                             ‚Üí eqInTypeLocal (EQTNN t x x‚ÇÅ)
typeSysConds-NN-local u w A B t x x‚ÇÅ a b i j =
  Mod.‚ñ°-idem M (Mod.‚àÄùïé-‚ñ°'-‚ñ° M i aw j)
  where
    aw : ‚àÄùïé w (Œª w' e' ‚Üí (z : eqTypes u w' A B) {--(at : atbar i w' e' z)--}
                         ‚Üí eqInType u w' z a b
                         ‚Üí ‚ñ°¬∑ w' (Œª w'' e ‚Üí (x : w ‚äë¬∑ w'') ‚Üí NNeq t a b))
    aw w1 e1 z {--at--} ei = Mod.‚àÄùïé-‚ñ°Func M aw'' aw'
      where
        aw' : ‚ñ°¬∑ w1 (Œª w'' e ‚Üí NNeq t a b)
        aw' = eqInType-‚áõ-NN u w1 A B t a b (‚áõ-mon e1 x) (‚áõ-mon e1 x‚ÇÅ) z ei

        aw'' : ‚àÄùïé w1 (Œª w' e' ‚Üí NNeq t a b
                                ‚Üí (x‚ÇÇ : w ‚äë¬∑ w') ‚Üí NNeq t a b)
        aw'' w' e' p x‚ÇÇ = p



typeSysConds-NN : (u : univs) (w : ùïé¬∑) (A B t : CTerm)
                       (x : A #‚áõ #NN t at w) (x‚ÇÅ : B #‚áõ #NN t at w)
                       ‚Üí TSP {u} (EQTNN t x x‚ÇÅ)
typeSysConds-NN u w A B t x x‚ÇÅ =
  mktsp tsym ttrans isym itrans iextl1 iextl2 iextr1 iextr2 iextrl1 iextrl2 iextrr1 iextrr2 local
  where
    tsym : eqTypes u w B A
    tsym = typeSysConds-NN-tsym u w A B t x x‚ÇÅ

    ttrans : eqTypesTrans u w A B
    ttrans = typeSysConds-NN-ttrans u w A B t x x‚ÇÅ

    isym : eqInTypeSym u {_} {A} {B} (EQTNN t x x‚ÇÅ)
    isym = typeSysConds-NN-isym u w A B t x x‚ÇÅ

    itrans : eqInTypeTrans u {_} {A} {B} (EQTNN t x x‚ÇÅ)
    itrans = typeSysConds-NN-itrans u w A B t x x‚ÇÅ

    iextl1 : eqInTypeExtL1 {_} {_} {A} {B} (EQTNN t x x‚ÇÅ)
    iextl1 = typeSysConds-NN-extl1 u w A B t x x‚ÇÅ

    iextl2 : eqInTypeExtL2 {_} {_} {A} {B} (EQTNN t x x‚ÇÅ)
    iextl2 = typeSysConds-NN-extl2 u w A B t x x‚ÇÅ

    iextr1 : eqInTypeExtR1 {_} {_} {A} {B} (EQTNN t x x‚ÇÅ)
    iextr1 = typeSysConds-NN-extr1 u w A B t x x‚ÇÅ

    iextr2 : eqInTypeExtR2 {_} {_} {A} {B} (EQTNN t x x‚ÇÅ)
    iextr2 = typeSysConds-NN-extr2 u w A B t x x‚ÇÅ

    iextrl1 : eqInTypeExtRevL1 {_} {_} {A} {B} (EQTNN t x x‚ÇÅ)
    iextrl1 = typeSysConds-NN-extrevl1 u w A B t x x‚ÇÅ

    iextrl2 : eqInTypeExtRevL2 {_} {_} {A} {B} (EQTNN t x x‚ÇÅ)
    iextrl2 = typeSysConds-NN-extrevl2 u w A B t x x‚ÇÅ

    iextrr1 : eqInTypeExtRevR1 {_} {_} {A} {B} (EQTNN t x x‚ÇÅ)
    iextrr1 = typeSysConds-NN-extrevr1 u w A B t x x‚ÇÅ

    iextrr2 : eqInTypeExtRevR2 {_} {_} {A} {B} (EQTNN t x x‚ÇÅ)
    iextrr2 = typeSysConds-NN-extrevr2 u w A B t x x‚ÇÅ

    local : eqInTypeLocal (EQTNN t x x‚ÇÅ)
    local = typeSysConds-NN-local u w A B t x x‚ÇÅ
\end{code}
