\begin{code}
{-# OPTIONS --rewriting #-}
{-# OPTIONS --guardedness #-}
--{-# OPTIONS --auto-inline #-}

open import Level using (Level ; 0‚Ñì ; Lift ; lift ; lower) renaming (suc to lsuc)
open import Agda.Builtin.Bool
open import Agda.Builtin.Equality
open import Agda.Builtin.Equality.Rewrite
open import Agda.Builtin.Sigma
open import Relation.Nullary
open import Relation.Unary using (Pred; Decidable)
open import Relation.Binary.PropositionalEquality using (sym ; trans ; subst)
open import Data.Product
open import Data.Product.Properties
open import Data.Sum
open import Data.Empty
open import Data.Maybe
open import Data.Unit using (‚ä§ ; tt)
open import Data.Nat using (‚Ñï ; _<_ ; _‚â§_ ; _‚â•_ ; _‚â§?_ ; suc ; _+_ ; pred)
open import Data.Nat.Properties
open import Data.Bool using (Bool ; _‚àß_ ; _‚à®_)
open import Agda.Builtin.String
open import Agda.Builtin.String.Properties
open import Data.List
open import Data.List.Properties
open import Data.List.Relation.Unary.Any
open import Data.List.Relation.Binary.Subset.Propositional
open import Data.List.Relation.Binary.Subset.Propositional.Properties
open import Data.List.Membership.Propositional
open import Data.List.Membership.Propositional.Properties
open import Function.Bundles
open import Induction.WellFounded


open import util
open import name
open import calculus
open import terms
open import world
open import choice
open import choiceExt
open import choiceVal
open import compatible
open import getChoice
open import progress
open import freeze
open import newChoice
open import mod
open import choiceBar
open import encode


module continuity5b {L : Level} (W : PossibleWorlds {L}) (M : Mod W)
                    (C : Choice)
                    (K : Compatible {L} W C)
                    (G : GetChoice {L} W C K)
                    (X : ChoiceExt W C)
                    (N : NewChoice {L} W C K G)
                    (EC : Encode)
       where


open import worldDef(W)
open import computation(W)(C)(K)(G)(X)(N)(EC)
open import terms2(W)(C)(K)(G)(X)(N)(EC) using (shiftUp-shiftNameUp)
open import terms3(W)(C)(K)(G)(X)(N)(EC) using (updBody ; sucIf‚â§-sucIf‚â§ ; suc‚â°sucIf‚â§0 ; shiftNameUp-shiftNameUp ; suc‚Üí‚ààlowerNames ; upd ; ‚â°LAMBDA ; ‚â°LET ; ‚â°IFLT ; ‚â°CS ; ‚â°CHOOSE ; ‚â°APPLY ; ‚â°NAME)
open import terms4(W)(C)(K)(G)(X)(N)(EC) using (‚Üí¬¨‚àànames-shiftUp)
--open import terms5(W)(C)(K)(G)(X)(N)(EC)
--open import terms6(W)(C)(K)(G)(X)(N)(EC)
open import bar(W)
open import barI(W)(M)--(C)(K)(P)
open import forcing(W)(M)(C)(K)(G)(X)(N)(EC)
open import props0(W)(M)(C)(K)(G)(X)(N)(EC) using (CSinj)
--open import ind2(W)(M)(C)(K)(G)(X)(N)(EC)

--open import choiceDef{L}(C)
open import compatibleDef{L}(W)(C)(K)
open import getChoiceDef(W)(C)(K)(G)
open import newChoiceDef(W)(C)(K)(G)(N)
open import choiceExtDef(W)(C)(K)(G)(X)

open import props1(W)(M)(C)(K)(G)(X)(N)(EC) using (UNIVinj)
--open import props2(W)(M)(C)(K)(G)(X)(N)(EC)
--open import props3(W)(M)(C)(K)(G)(X)(N)(EC)
--open import props4(W)(M)(C)(K)(P)(G)(X)(N)(E)(EC

--open import continuity-conds(W)(C)(K)(G)(X)(N)(EC)

open import continuity1(W)(M)(C)(K)(G)(X)(N)(EC) using (force)
--open import continuity2(W)(M)(C)(K)(G)(X)(N)(EC) using (isHighest‚Ñï)
--open import continuity3(W)(M)(C)(K)(G)(X)(N)(EC)
--open import continuity4(W)(M)(C)(K)(G)(X)(N)(EC)
--open import continuity5(W)(M)(C)(K)(G)(X)(N)(EC)

open import continuity1b(W)(M)(C)(K)(G)(X)(N)(EC) using (‚Üí‚â°sucIf‚â§ ; NAMEinj ; shiftNameUp-inj) --using (‚Üí‚â°sucIf‚â§ ; shiftNameUp-inj ; updBody‚â°shiftNameUp‚Üí ; shiftNameUpDown ; ¬¨‚àà++2‚Üí¬¨‚àà1 ; ¬¨‚àà++2‚Üí¬¨‚àà2 ; ¬¨‚àà++4‚Üí¬¨‚àà1 ; ¬¨‚àà++4‚Üí¬¨‚àà2 ; ¬¨‚àà++4‚Üí¬¨‚àà3 ; ¬¨‚àà++4‚Üí¬¨‚àà4)
--open import continuity2b(W)(M)(C)(K)(G)(X)(N)(EC) using (‚àànamesùïé)
--open import continuity3b(W)(M)(C)(K)(G)(X)(N)(EC)
open import continuity4b(W)(M)(C)(K)(G)(X)(N)(EC)


abstract
  upd-shift‚Üí‚â°shift : (n : ‚Ñï) (name : Name) (f a : Term)
                      ‚Üí upd (sucIf‚â§ n name) (shiftNameUp n f) ‚â° shiftNameUp n a
                      ‚Üí a ‚â° upd name f
  upd-shift‚Üí‚â°shift n name f (LAMBDA (LET (VAR 0) (LET (IFLT (APPLY (CS n1) (NUM 0)) (VAR 0) (CHOOSE (NAME n2) (VAR 0)) AX) (APPLY a (VAR 1))))) e
    = ‚â°LAMBDA (‚â°LET refl (‚â°LET (‚â°IFLT (‚â°APPLY (‚â°CS (sym (sucIf‚â§-inj (CSinj (APPLYinj1 (IFLTinj1 ((LETinj1 (LETinj2 (LAMinj e)))))))))) refl)
                                      refl
                                      (‚â°CHOOSE (‚â°NAME (sym (sucIf‚â§-inj (NAMEinj (CHOOSEinj1 (IFLTinj3 ((LETinj1 (LETinj2 (LAMinj e)))))))))) refl)
                                      refl)
                               (‚â°APPLY (shiftNameUp-inj (trans (sym (APPLYinj1 (LETinj2 (LETinj2 (LAMinj e))))) (shiftUp-shiftNameUp 0 n f))) refl)))


abstract
  force-shift‚Üí‚â°shift : (n : ‚Ñï) (g a : Term)
                      ‚Üí force (shiftNameUp n g) ‚â° shiftNameUp n a
                      ‚Üí a ‚â° force g
  force-shift‚Üí‚â°shift n g (LAMBDA (LET (VAR 0) (APPLY b (VAR 0)))) e
    rewrite shiftNameUp-inj (APPLYinj1 (LETinj2 (LAMinj e))) = refl


abstract
  updRel2-shiftNameUp‚â°‚Üíupd : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b : Term}
                            ‚Üí upd (sucIf‚â§ n name) (shiftNameUp n f) ‚â° shiftNameUp n a
                            ‚Üí force (shiftNameUp n g) ‚â° shiftNameUp n b
                            ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚Üíupd n {name} {f} {g} {r} cf cg {a} {b} equ eqv
    rewrite upd-shift‚Üí‚â°shift n name f a equ
          | force-shift‚Üí‚â°shift n g b eqv
    = updRel2-upd


abstract
  updRel2-shiftNameUp‚â°‚ÜíVAR : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b : Term} {x : Var}
                          ‚Üí VAR x ‚â° shiftNameUp n a
                          ‚Üí VAR x ‚â° shiftNameUp n b
                          ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíVAR n {name} {f} {g} {r} cf cg {VAR x‚ÇÅ} {VAR x‚ÇÇ} {x} equ eqv
    rewrite VARinj equ | VARinj eqv = updRel2-VAR _


{-
abstract
  updRel2-shiftNameUp‚â°‚ÜíNAT : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b : Term}
                          ‚Üí NAT ‚â° shiftNameUp n a
                          ‚Üí NAT ‚â° shiftNameUp n b
                          ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíNAT n {name} {f} {g} {r} cf cg {NAT} {NAT} equ eqv = updRel2-NAT
-}


abstract
  updRel2-shiftNameUp‚â°‚ÜíQNAT : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b : Term}
                          ‚Üí QNAT ‚â° shiftNameUp n a
                          ‚Üí QNAT ‚â° shiftNameUp n b
                          ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíQNAT n {name} {f} {g} {r} cf cg {QNAT} {QNAT} equ eqv = updRel2-QNAT


{-
abstract
  updRel2-shiftNameUp‚â°‚ÜíTNAT : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b : Term}
                          ‚Üí TNAT ‚â° shiftNameUp n a
                          ‚Üí TNAT ‚â° shiftNameUp n b
                          ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíTNAT n {name} {f} {g} {r} cf cg {TNAT} {TNAT} equ eqv = updRel2-TNAT
-}


abstract
  updRel2-shiftNameUp‚â°‚ÜíAX : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b : Term}
                          ‚Üí AX ‚â° shiftNameUp n a
                          ‚Üí AX ‚â° shiftNameUp n b
                          ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíAX n {name} {f} {g} {r} cf cg {AX} {AX} equ eqv = updRel2-AX


abstract
  updRel2-shiftNameUp‚â°‚ÜíFREE : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b : Term}
                          ‚Üí FREE ‚â° shiftNameUp n a
                          ‚Üí FREE ‚â° shiftNameUp n b
                          ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíFREE n {name} {f} {g} {r} cf cg {FREE} {FREE} equ eqv = updRel2-FREE


abstract
  updRel2-shiftNameUp‚â°‚ÜíPURE : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b : Term}
                          ‚Üí PURE ‚â° shiftNameUp n a
                          ‚Üí PURE ‚â° shiftNameUp n b
                          ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíPURE n {name} {f} {g} {r} cf cg {PURE} {PURE} equ eqv = updRel2-PURE


abstract
  updRel2-shiftNameUp‚â°‚ÜíNOSEQ : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b : Term}
                          ‚Üí NOSEQ ‚â° shiftNameUp n a
                          ‚Üí NOSEQ ‚â° shiftNameUp n b
                          ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíNOSEQ n {name} {f} {g} {r} cf cg {NOSEQ} {NOSEQ} equ eqv = updRel2-NOSEQ


abstract
  updRel2-shiftNameUp‚â°‚ÜíNOENC : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b : Term}
                          ‚Üí NOENC ‚â° shiftNameUp n a
                          ‚Üí NOENC ‚â° shiftNameUp n b
                          ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíNOENC n {name} {f} {g} {r} cf cg {NOENC} {NOENC} equ eqv = updRel2-NOENC


abstract
  updRel2-shiftNameUp‚â°‚ÜíLT : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b x‚ÇÅ x‚ÇÇ y‚ÇÅ y‚ÇÇ : Term}
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí x‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí x‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí y‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí y‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí LT x‚ÇÅ y‚ÇÅ ‚â° shiftNameUp n a
                            ‚Üí LT x‚ÇÇ y‚ÇÇ ‚â° shiftNameUp n b
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) x‚ÇÅ x‚ÇÇ
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) y‚ÇÅ y‚ÇÇ
                            ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíLT n {name} {f} {g} {r} cf cg {LT u‚ÇÅ v‚ÇÅ} {LT u‚ÇÇ v‚ÇÇ} {x‚ÇÅ} {x‚ÇÇ} {y‚ÇÅ} {y‚ÇÇ} ind1 ind2 equ eqv ur1 ur2
    rewrite LTinj1 equ | LTinj2 equ | LTinj1 eqv | LTinj2 eqv
    = updRel2-LT u‚ÇÅ u‚ÇÇ v‚ÇÅ v‚ÇÇ (ind1 u‚ÇÅ u‚ÇÇ refl refl) (ind2 v‚ÇÅ v‚ÇÇ refl refl)


abstract
  updRel2-shiftNameUp‚â°‚ÜíQLT : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b x‚ÇÅ x‚ÇÇ y‚ÇÅ y‚ÇÇ : Term}
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí x‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí x‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí y‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí y‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí QLT x‚ÇÅ y‚ÇÅ ‚â° shiftNameUp n a
                            ‚Üí QLT x‚ÇÇ y‚ÇÇ ‚â° shiftNameUp n b
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) x‚ÇÅ x‚ÇÇ
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) y‚ÇÅ y‚ÇÇ
                            ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíQLT n {name} {f} {g} {r} cf cg {QLT u‚ÇÅ v‚ÇÅ} {QLT u‚ÇÇ v‚ÇÇ} {x‚ÇÅ} {x‚ÇÇ} {y‚ÇÅ} {y‚ÇÇ} ind1 ind2 equ eqv ur1 ur2
    rewrite QLTinj1 equ | QLTinj2 equ | QLTinj1 eqv | QLTinj2 eqv
    = updRel2-QLT u‚ÇÅ u‚ÇÇ v‚ÇÅ v‚ÇÇ (ind1 u‚ÇÅ u‚ÇÇ refl refl) (ind2 v‚ÇÅ v‚ÇÇ refl refl)


abstract
  updRel2-shiftNameUp‚â°‚ÜíNUM : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b : Term} {x : ‚Ñï}
                          ‚Üí NUM x ‚â° shiftNameUp n a
                          ‚Üí NUM x ‚â° shiftNameUp n b
                          ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíNUM n {name} {f} {g} {r} cf cg {NUM x‚ÇÅ} {NUM x‚ÇÇ} {x} equ eqv
    rewrite NUMinj equ | NUMinj eqv = updRel2-NUM _


abstract
  updRel2-shiftNameUp‚â°‚ÜíUNIV : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b : Term} {x : ‚Ñï}
                          ‚Üí UNIV x ‚â° shiftNameUp n a
                          ‚Üí UNIV x ‚â° shiftNameUp n b
                          ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíUNIV n {name} {f} {g} {r} cf cg {UNIV x‚ÇÅ} {UNIV x‚ÇÇ} {x} equ eqv
    rewrite UNIVinj equ | UNIVinj eqv = updRel2-UNIV _


abstract
  updRel2-shiftNameUp‚â°‚ÜíLOAD : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b : Term} {x : Term}
                          ‚Üí LOAD x ‚â° shiftNameUp n a
                          ‚Üí LOAD x ‚â° shiftNameUp n b
                          ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíLOAD n {name} {f} {g} {r} cf cg {LOAD x‚ÇÅ} {LOAD x‚ÇÇ} {x} equ eqv
    rewrite sym (LOADinj equ) | sym (LOADinj eqv) = updRel2-LOAD _


abstract
  updRel2-shiftNameUp‚â°‚ÜíCS : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b : Term} {x‚ÇÅ x‚ÇÇ : Name}
                          ‚Üí CS x‚ÇÅ ‚â° shiftNameUp n a
                          ‚Üí CS x‚ÇÇ ‚â° shiftNameUp n b
                          ‚Üí names‚ààren x‚ÇÅ x‚ÇÇ (sucIf‚â§-ren n r)
                          ‚Üí ¬¨ x‚ÇÅ ‚â° sucIf‚â§ n name
                          ‚Üí ¬¨ x‚ÇÇ ‚â° sucIf‚â§ n name
                          ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíCS n {name} {f} {g} {r} cf cg {CS y‚ÇÅ} {CS y‚ÇÇ} {x‚ÇÅ} {x‚ÇÇ} equ eqv ni1 ni2 ni3
    rewrite CSinj equ | CSinj eqv
    = updRel2-CS y‚ÇÅ y‚ÇÇ (Œª z ‚Üí ni2 (‚Üí‚â°sucIf‚â§ z)) (Œª z ‚Üí ni3 (‚Üí‚â°sucIf‚â§ z)) (names‚ààren-sucIf‚â§-ren‚Üí n y‚ÇÅ y‚ÇÇ r ni1)


abstract
  updRel2-shiftNameUp‚â°‚ÜíNAME : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b : Term} {x‚ÇÅ x‚ÇÇ : Name}
                          ‚Üí NAME x‚ÇÅ ‚â° shiftNameUp n a
                          ‚Üí NAME x‚ÇÇ ‚â° shiftNameUp n b
                          ‚Üí names‚ààren x‚ÇÅ x‚ÇÇ (sucIf‚â§-ren n r)
                          ‚Üí ¬¨ x‚ÇÅ ‚â° sucIf‚â§ n name
                          ‚Üí ¬¨ x‚ÇÇ ‚â° sucIf‚â§ n name
                          ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíNAME n {name} {f} {g} {r} cf cg {NAME y‚ÇÅ} {NAME y‚ÇÇ} {x‚ÇÅ} {x‚ÇÇ} equ eqv ni1 ni2 ni3
    rewrite NAMEinj equ | NAMEinj eqv
    = updRel2-NAME y‚ÇÅ y‚ÇÇ (Œª z ‚Üí ni2 (‚Üí‚â°sucIf‚â§ z)) (Œª z ‚Üí ni3 (‚Üí‚â°sucIf‚â§ z)) (names‚ààren-sucIf‚â§-ren‚Üí n y‚ÇÅ y‚ÇÇ r ni1)


abstract
  updRel2-shiftNameUp‚â°‚ÜíMSEQ : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b : Term} {x : ùïä}
                          ‚Üí MSEQ x ‚â° shiftNameUp n a
                          ‚Üí MSEQ x ‚â° shiftNameUp n b
                          ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíMSEQ n {name} {f} {g} {r} cf cg {MSEQ x‚ÇÅ} {MSEQ x‚ÇÇ} {x} equ eqv
    rewrite MSEQinj equ | MSEQinj eqv = updRel2-MSEQ _


abstract
  updRel2-shiftNameUp‚â°‚ÜíPI : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b x‚ÇÅ x‚ÇÇ y‚ÇÅ y‚ÇÇ : Term}
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí x‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí x‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí y‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí y‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí PI x‚ÇÅ y‚ÇÅ ‚â° shiftNameUp n a
                            ‚Üí PI x‚ÇÇ y‚ÇÇ ‚â° shiftNameUp n b
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) x‚ÇÅ x‚ÇÇ
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) y‚ÇÅ y‚ÇÇ
                            ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíPI n {name} {f} {g} {r} cf cg {PI u‚ÇÅ v‚ÇÅ} {PI u‚ÇÇ v‚ÇÇ} {x‚ÇÅ} {x‚ÇÇ} {y‚ÇÅ} {y‚ÇÇ} ind1 ind2 equ eqv ur1 ur2
    rewrite PIinj1 equ | PIinj2 equ | PIinj1 eqv | PIinj2 eqv
    = updRel2-PI u‚ÇÅ u‚ÇÇ v‚ÇÅ v‚ÇÇ (ind1 u‚ÇÅ u‚ÇÇ refl refl) (ind2 v‚ÇÅ v‚ÇÇ refl refl)


abstract
  updRel2-shiftNameUp‚â°‚ÜíAPPLY : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b x‚ÇÅ x‚ÇÇ y‚ÇÅ y‚ÇÇ : Term}
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí x‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí x‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí y‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí y‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí APPLY x‚ÇÅ y‚ÇÅ ‚â° shiftNameUp n a
                            ‚Üí APPLY x‚ÇÇ y‚ÇÇ ‚â° shiftNameUp n b
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) x‚ÇÅ x‚ÇÇ
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) y‚ÇÅ y‚ÇÇ
                            ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíAPPLY n {name} {f} {g} {r} cf cg {APPLY u‚ÇÅ v‚ÇÅ} {APPLY u‚ÇÇ v‚ÇÇ} {x‚ÇÅ} {x‚ÇÇ} {y‚ÇÅ} {y‚ÇÇ} ind1 ind2 equ eqv ur1 ur2
    rewrite APPLYinj1 equ | APPLYinj2 equ | APPLYinj1 eqv | APPLYinj2 eqv
    = updRel2-APPLY u‚ÇÅ u‚ÇÇ v‚ÇÅ v‚ÇÇ (ind1 u‚ÇÅ u‚ÇÇ refl refl) (ind2 v‚ÇÅ v‚ÇÇ refl refl)


abstract
  updRel2-shiftNameUp‚â°‚ÜíLET : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b x‚ÇÅ x‚ÇÇ y‚ÇÅ y‚ÇÇ : Term}
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí x‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí x‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí y‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí y‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí LET x‚ÇÅ y‚ÇÅ ‚â° shiftNameUp n a
                            ‚Üí LET x‚ÇÇ y‚ÇÇ ‚â° shiftNameUp n b
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) x‚ÇÅ x‚ÇÇ
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) y‚ÇÅ y‚ÇÇ
                            ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíLET n {name} {f} {g} {r} cf cg {LET u‚ÇÅ v‚ÇÅ} {LET u‚ÇÇ v‚ÇÇ} {x‚ÇÅ} {x‚ÇÇ} {y‚ÇÅ} {y‚ÇÇ} ind1 ind2 equ eqv ur1 ur2
    rewrite LETinj1 equ | LETinj2 equ | LETinj1 eqv | LETinj2 eqv
    = updRel2-LET u‚ÇÅ u‚ÇÇ v‚ÇÅ v‚ÇÇ (ind1 u‚ÇÅ u‚ÇÇ refl refl) (ind2 v‚ÇÅ v‚ÇÇ refl refl)


abstract
  updRel2-shiftNameUp‚â°‚ÜíSUM : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b x‚ÇÅ x‚ÇÇ y‚ÇÅ y‚ÇÇ : Term}
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí x‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí x‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí y‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí y‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí SUM x‚ÇÅ y‚ÇÅ ‚â° shiftNameUp n a
                            ‚Üí SUM x‚ÇÇ y‚ÇÇ ‚â° shiftNameUp n b
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) x‚ÇÅ x‚ÇÇ
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) y‚ÇÅ y‚ÇÇ
                            ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíSUM n {name} {f} {g} {r} cf cg {SUM u‚ÇÅ v‚ÇÅ} {SUM u‚ÇÇ v‚ÇÇ} {x‚ÇÅ} {x‚ÇÇ} {y‚ÇÅ} {y‚ÇÇ} ind1 ind2 equ eqv ur1 ur2
    rewrite SUMinj1 equ | SUMinj2 equ | SUMinj1 eqv | SUMinj2 eqv
    = updRel2-SUM u‚ÇÅ u‚ÇÇ v‚ÇÅ v‚ÇÇ (ind1 u‚ÇÅ u‚ÇÇ refl refl) (ind2 v‚ÇÅ v‚ÇÇ refl refl)


abstract
  updRel2-shiftNameUp‚â°‚ÜíPAIR : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b x‚ÇÅ x‚ÇÇ y‚ÇÅ y‚ÇÇ : Term}
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí x‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí x‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí y‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí y‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí PAIR x‚ÇÅ y‚ÇÅ ‚â° shiftNameUp n a
                            ‚Üí PAIR x‚ÇÇ y‚ÇÇ ‚â° shiftNameUp n b
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) x‚ÇÅ x‚ÇÇ
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) y‚ÇÅ y‚ÇÇ
                            ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíPAIR n {name} {f} {g} {r} cf cg {PAIR u‚ÇÅ v‚ÇÅ} {PAIR u‚ÇÇ v‚ÇÇ} {x‚ÇÅ} {x‚ÇÇ} {y‚ÇÅ} {y‚ÇÇ} ind1 ind2 equ eqv ur1 ur2
    rewrite PAIRinj1 equ | PAIRinj2 equ | PAIRinj1 eqv | PAIRinj2 eqv
    = updRel2-PAIR u‚ÇÅ u‚ÇÇ v‚ÇÅ v‚ÇÇ (ind1 u‚ÇÅ u‚ÇÇ refl refl) (ind2 v‚ÇÅ v‚ÇÇ refl refl)


abstract
  updRel2-shiftNameUp‚â°‚ÜíSPREAD : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b x‚ÇÅ x‚ÇÇ y‚ÇÅ y‚ÇÇ : Term}
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí x‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí x‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí y‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí y‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí SPREAD x‚ÇÅ y‚ÇÅ ‚â° shiftNameUp n a
                            ‚Üí SPREAD x‚ÇÇ y‚ÇÇ ‚â° shiftNameUp n b
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) x‚ÇÅ x‚ÇÇ
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) y‚ÇÅ y‚ÇÇ
                            ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíSPREAD n {name} {f} {g} {r} cf cg {SPREAD u‚ÇÅ v‚ÇÅ} {SPREAD u‚ÇÇ v‚ÇÇ} {x‚ÇÅ} {x‚ÇÇ} {y‚ÇÅ} {y‚ÇÇ} ind1 ind2 equ eqv ur1 ur2
    rewrite SPREADinj1 equ | SPREADinj2 equ | SPREADinj1 eqv | SPREADinj2 eqv
    = updRel2-SPREAD u‚ÇÅ u‚ÇÇ v‚ÇÅ v‚ÇÇ (ind1 u‚ÇÅ u‚ÇÇ refl refl) (ind2 v‚ÇÅ v‚ÇÇ refl refl)


abstract
  updRel2-shiftNameUp‚â°‚ÜíWT : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b x‚ÇÅ x‚ÇÇ y‚ÇÅ y‚ÇÇ z‚ÇÅ z‚ÇÇ : Term}
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí x‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí x‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí y‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí y‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí z‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí z‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí WT x‚ÇÅ y‚ÇÅ z‚ÇÅ ‚â° shiftNameUp n a
                            ‚Üí WT x‚ÇÇ y‚ÇÇ z‚ÇÇ ‚â° shiftNameUp n b
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) x‚ÇÅ x‚ÇÇ
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) y‚ÇÅ y‚ÇÇ
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) z‚ÇÅ z‚ÇÇ
                            ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíWT n {name} {f} {g} {r} cf cg {WT u‚ÇÅ v‚ÇÅ w‚ÇÅ} {WT u‚ÇÇ v‚ÇÇ w‚ÇÇ} {x‚ÇÅ} {x‚ÇÇ} {y‚ÇÅ} {y‚ÇÇ} {z‚ÇÅ} {z‚ÇÇ} ind1 ind2 ind3 equ eqv ur1 ur2 ur3
    rewrite Winj1 equ | Winj2 equ | Winj3 equ | Winj1 eqv | Winj2 eqv | Winj3 eqv
    = updRel2-WT u‚ÇÅ u‚ÇÇ v‚ÇÅ v‚ÇÇ w‚ÇÅ w‚ÇÇ (ind1 u‚ÇÅ u‚ÇÇ refl refl) (ind2 v‚ÇÅ v‚ÇÇ refl refl) (ind3 w‚ÇÅ w‚ÇÇ refl refl)


abstract
  updRel2-shiftNameUp‚â°‚ÜíMT : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b x‚ÇÅ x‚ÇÇ y‚ÇÅ y‚ÇÇ z‚ÇÅ z‚ÇÇ : Term}
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí x‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí x‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí y‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí y‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí z‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí z‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí MT x‚ÇÅ y‚ÇÅ z‚ÇÅ ‚â° shiftNameUp n a
                            ‚Üí MT x‚ÇÇ y‚ÇÇ z‚ÇÇ ‚â° shiftNameUp n b
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) x‚ÇÅ x‚ÇÇ
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) y‚ÇÅ y‚ÇÇ
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) z‚ÇÅ z‚ÇÇ
                            ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíMT n {name} {f} {g} {r} cf cg {MT u‚ÇÅ v‚ÇÅ w‚ÇÅ} {MT u‚ÇÇ v‚ÇÇ w‚ÇÇ} {x‚ÇÅ} {x‚ÇÇ} {y‚ÇÅ} {y‚ÇÇ} {z‚ÇÅ} {z‚ÇÇ} ind1 ind2 ind3 equ eqv ur1 ur2 ur3
    rewrite Minj1 equ | Minj2 equ | Minj3 equ | Minj1 eqv | Minj2 eqv | Minj3 eqv
    = updRel2-MT u‚ÇÅ u‚ÇÇ v‚ÇÅ v‚ÇÇ w‚ÇÅ w‚ÇÇ (ind1 u‚ÇÅ u‚ÇÇ refl refl) (ind2 v‚ÇÅ v‚ÇÇ refl refl) (ind3 w‚ÇÅ w‚ÇÇ refl refl)


abstract
  updRel2-shiftNameUp‚â°‚ÜíSUP : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b x‚ÇÅ x‚ÇÇ y‚ÇÅ y‚ÇÇ : Term}
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí x‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí x‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí y‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí y‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí SUP x‚ÇÅ y‚ÇÅ ‚â° shiftNameUp n a
                            ‚Üí SUP x‚ÇÇ y‚ÇÇ ‚â° shiftNameUp n b
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) x‚ÇÅ x‚ÇÇ
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) y‚ÇÅ y‚ÇÇ
                            ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíSUP n {name} {f} {g} {r} cf cg {SUP u‚ÇÅ v‚ÇÅ} {SUP u‚ÇÇ v‚ÇÇ} {x‚ÇÅ} {x‚ÇÇ} {y‚ÇÅ} {y‚ÇÇ} ind1 ind2 equ eqv ur1 ur2
    rewrite SUPinj1 equ | SUPinj2 equ | SUPinj1 eqv | SUPinj2 eqv
    = updRel2-SUP u‚ÇÅ u‚ÇÇ v‚ÇÅ v‚ÇÇ (ind1 u‚ÇÅ u‚ÇÇ refl refl) (ind2 v‚ÇÅ v‚ÇÇ refl refl)


abstract
  updRel2-shiftNameUp‚â°‚ÜíWREC : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b x‚ÇÅ x‚ÇÇ y‚ÇÅ y‚ÇÇ : Term}
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí x‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí x‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí y‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí y‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí WREC x‚ÇÅ y‚ÇÅ ‚â° shiftNameUp n a
                            ‚Üí WREC x‚ÇÇ y‚ÇÇ ‚â° shiftNameUp n b
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) x‚ÇÅ x‚ÇÇ
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) y‚ÇÅ y‚ÇÇ
                            ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíWREC n {name} {f} {g} {r} cf cg {WREC u‚ÇÅ v‚ÇÅ} {WREC u‚ÇÇ v‚ÇÇ} {x‚ÇÅ} {x‚ÇÇ} {y‚ÇÅ} {y‚ÇÇ} ind1 ind2 equ eqv ur1 ur2
    rewrite WRECinj1 equ | WRECinj2 equ | WRECinj1 eqv | WRECinj2 eqv
    = updRel2-WREC u‚ÇÅ u‚ÇÇ v‚ÇÅ v‚ÇÇ (ind1 u‚ÇÅ u‚ÇÇ refl refl) (ind2 v‚ÇÅ v‚ÇÇ refl refl)


abstract
  updRel2-shiftNameUp‚â°‚ÜíSET : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b x‚ÇÅ x‚ÇÇ y‚ÇÅ y‚ÇÇ : Term}
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí x‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí x‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí y‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí y‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí SET x‚ÇÅ y‚ÇÅ ‚â° shiftNameUp n a
                            ‚Üí SET x‚ÇÇ y‚ÇÇ ‚â° shiftNameUp n b
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) x‚ÇÅ x‚ÇÇ
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) y‚ÇÅ y‚ÇÇ
                            ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíSET n {name} {f} {g} {r} cf cg {SET u‚ÇÅ v‚ÇÅ} {SET u‚ÇÇ v‚ÇÇ} {x‚ÇÅ} {x‚ÇÇ} {y‚ÇÅ} {y‚ÇÇ} ind1 ind2 equ eqv ur1 ur2
    rewrite SETinj1 equ | SETinj2 equ | SETinj1 eqv | SETinj2 eqv
    = updRel2-SET u‚ÇÅ u‚ÇÇ v‚ÇÅ v‚ÇÇ (ind1 u‚ÇÅ u‚ÇÇ refl refl) (ind2 v‚ÇÅ v‚ÇÇ refl refl)


abstract
  updRel2-shiftNameUp‚â°‚ÜíISECT : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b x‚ÇÅ x‚ÇÇ y‚ÇÅ y‚ÇÇ : Term}
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí x‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí x‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí y‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí y‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí ISECT x‚ÇÅ y‚ÇÅ ‚â° shiftNameUp n a
                            ‚Üí ISECT x‚ÇÇ y‚ÇÇ ‚â° shiftNameUp n b
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) x‚ÇÅ x‚ÇÇ
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) y‚ÇÅ y‚ÇÇ
                            ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíISECT n {name} {f} {g} {r} cf cg {ISECT u‚ÇÅ v‚ÇÅ} {ISECT u‚ÇÇ v‚ÇÇ} {x‚ÇÅ} {x‚ÇÇ} {y‚ÇÅ} {y‚ÇÇ} ind1 ind2 equ eqv ur1 ur2
    rewrite ISECTinj1 equ | ISECTinj2 equ | ISECTinj1 eqv | ISECTinj2 eqv
    = updRel2-ISECT u‚ÇÅ u‚ÇÇ v‚ÇÅ v‚ÇÇ (ind1 u‚ÇÅ u‚ÇÇ refl refl) (ind2 v‚ÇÅ v‚ÇÇ refl refl)


abstract
  updRel2-shiftNameUp‚â°‚ÜíUNION : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b x‚ÇÅ x‚ÇÇ y‚ÇÅ y‚ÇÇ : Term}
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí x‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí x‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí y‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí y‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí UNION x‚ÇÅ y‚ÇÅ ‚â° shiftNameUp n a
                            ‚Üí UNION x‚ÇÇ y‚ÇÇ ‚â° shiftNameUp n b
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) x‚ÇÅ x‚ÇÇ
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) y‚ÇÅ y‚ÇÇ
                            ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíUNION n {name} {f} {g} {r} cf cg {UNION u‚ÇÅ v‚ÇÅ} {UNION u‚ÇÇ v‚ÇÇ} {x‚ÇÅ} {x‚ÇÇ} {y‚ÇÅ} {y‚ÇÇ} ind1 ind2 equ eqv ur1 ur2
    rewrite UNIONinj1 equ | UNIONinj2 equ | UNIONinj1 eqv | UNIONinj2 eqv
    = updRel2-UNION u‚ÇÅ u‚ÇÇ v‚ÇÅ v‚ÇÇ (ind1 u‚ÇÅ u‚ÇÇ refl refl) (ind2 v‚ÇÅ v‚ÇÇ refl refl)


abstract
  updRel2-shiftNameUp‚â°‚ÜíTUNION : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b x‚ÇÅ x‚ÇÇ y‚ÇÅ y‚ÇÇ : Term}
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí x‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí x‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí y‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí y‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí TUNION x‚ÇÅ y‚ÇÅ ‚â° shiftNameUp n a
                            ‚Üí TUNION x‚ÇÇ y‚ÇÇ ‚â° shiftNameUp n b
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) x‚ÇÅ x‚ÇÇ
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) y‚ÇÅ y‚ÇÇ
                            ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíTUNION n {name} {f} {g} {r} cf cg {TUNION u‚ÇÅ v‚ÇÅ} {TUNION u‚ÇÇ v‚ÇÇ} {x‚ÇÅ} {x‚ÇÇ} {y‚ÇÅ} {y‚ÇÇ} ind1 ind2 equ eqv ur1 ur2
    rewrite TUNIONinj1 equ | TUNIONinj2 equ | TUNIONinj1 eqv | TUNIONinj2 eqv
    = updRel2-TUNION u‚ÇÅ u‚ÇÇ v‚ÇÅ v‚ÇÇ (ind1 u‚ÇÅ u‚ÇÇ refl refl) (ind2 v‚ÇÅ v‚ÇÇ refl refl)

{-
abstract
  updRel2-shiftNameUp‚â°‚ÜíQTUNION : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b x‚ÇÅ x‚ÇÇ y‚ÇÅ y‚ÇÇ : Term}
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí x‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí x‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí y‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí y‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí QTUNION x‚ÇÅ y‚ÇÅ ‚â° shiftNameUp n a
                            ‚Üí QTUNION x‚ÇÇ y‚ÇÇ ‚â° shiftNameUp n b
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) x‚ÇÅ x‚ÇÇ
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) y‚ÇÅ y‚ÇÇ
                            ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíQTUNION n {name} {f} {g} {r} cf cg {QTUNION u‚ÇÅ v‚ÇÅ} {QTUNION u‚ÇÇ v‚ÇÇ} {x‚ÇÅ} {x‚ÇÇ} {y‚ÇÅ} {y‚ÇÇ} ind1 ind2 equ eqv ur1 ur2
    rewrite QTUNIONinj1 equ | QTUNIONinj2 equ | QTUNIONinj1 eqv | QTUNIONinj2 eqv
    = updRel2-QTUNION u‚ÇÅ u‚ÇÇ v‚ÇÅ v‚ÇÇ (ind1 u‚ÇÅ u‚ÇÇ refl refl) (ind2 v‚ÇÅ v‚ÇÇ refl refl)
-}

abstract
  updRel2-shiftNameUp‚â°‚ÜíINL : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b x‚ÇÅ x‚ÇÇ : Term}
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí x‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí x‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí INL x‚ÇÅ ‚â° shiftNameUp n a
                            ‚Üí INL x‚ÇÇ ‚â° shiftNameUp n b
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) x‚ÇÅ x‚ÇÇ
                            ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíINL n {name} {f} {g} {r} cf cg {INL u‚ÇÅ} {INL u‚ÇÇ} {x‚ÇÅ} {x‚ÇÇ} ind1 equ eqv ur1
    rewrite INLinj equ | INLinj eqv
    = updRel2-INL u‚ÇÅ u‚ÇÇ (ind1 u‚ÇÅ u‚ÇÇ refl refl)


abstract
  updRel2-shiftNameUp‚â°‚ÜíINR : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b x‚ÇÅ x‚ÇÇ : Term}
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí x‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí x‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí INR x‚ÇÅ ‚â° shiftNameUp n a
                            ‚Üí INR x‚ÇÇ ‚â° shiftNameUp n b
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) x‚ÇÅ x‚ÇÇ
                            ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíINR n {name} {f} {g} {r} cf cg {INR u‚ÇÅ} {INR u‚ÇÇ} {x‚ÇÅ} {x‚ÇÇ} ind1 equ eqv ur1
    rewrite INRinj equ | INRinj eqv
    = updRel2-INR u‚ÇÅ u‚ÇÇ (ind1 u‚ÇÅ u‚ÇÇ refl refl)


{--
abstract
  updRel2-shiftNameUp‚â°‚ÜíTSQUASH : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b x‚ÇÅ x‚ÇÇ : Term}
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí x‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí x‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí TSQUASH x‚ÇÅ ‚â° shiftNameUp n a
                            ‚Üí TSQUASH x‚ÇÇ ‚â° shiftNameUp n b
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) x‚ÇÅ x‚ÇÇ
                            ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíTSQUASH n {name} {f} {g} {r} cf cg {TSQUASH u‚ÇÅ} {TSQUASH u‚ÇÇ} {x‚ÇÅ} {x‚ÇÇ} ind1 equ eqv ur1
    rewrite TSQUASHinj equ | TSQUASHinj eqv
    = updRel2-TSQUASH u‚ÇÅ u‚ÇÇ (ind1 u‚ÇÅ u‚ÇÇ refl refl)
--}


{-
abstract
  updRel2-shiftNameUp‚â°‚ÜíTTRUNC : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b x‚ÇÅ x‚ÇÇ : Term}
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí x‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí x‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí TTRUNC x‚ÇÅ ‚â° shiftNameUp n a
                            ‚Üí TTRUNC x‚ÇÇ ‚â° shiftNameUp n b
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) x‚ÇÅ x‚ÇÇ
                            ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíTTRUNC n {name} {f} {g} {r} cf cg {TTRUNC u‚ÇÅ} {TTRUNC u‚ÇÇ} {x‚ÇÅ} {x‚ÇÇ} ind1 equ eqv ur1
    rewrite TTRUNCinj equ | TTRUNCinj eqv
    = updRel2-TTRUNC u‚ÇÅ u‚ÇÇ (ind1 u‚ÇÅ u‚ÇÇ refl refl)
-}


abstract
  updRel2-shiftNameUp‚â°‚ÜíNOWRITE : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b : Term}
                            ‚Üí NOWRITE ‚â° shiftNameUp n a
                            ‚Üí NOWRITE ‚â° shiftNameUp n b
                            ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíNOWRITE n {name} {f} {g} {r} cf cg {NOWRITE} {NOWRITE} equ eqv = updRel2-NOWRITE


abstract
  updRel2-shiftNameUp‚â°‚ÜíNOREAD : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b : Term}
                            ‚Üí NOREAD ‚â° shiftNameUp n a
                            ‚Üí NOREAD ‚â° shiftNameUp n b
                            ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíNOREAD n {name} {f} {g} {r} cf cg {NOREAD} {NOREAD} equ eqv = updRel2-NOREAD


abstract
  updRel2-shiftNameUp‚â°‚ÜíSUBSING : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b x‚ÇÅ x‚ÇÇ : Term}
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí x‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí x‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí SUBSING x‚ÇÅ ‚â° shiftNameUp n a
                            ‚Üí SUBSING x‚ÇÇ ‚â° shiftNameUp n b
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) x‚ÇÅ x‚ÇÇ
                            ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíSUBSING n {name} {f} {g} {r} cf cg {SUBSING u‚ÇÅ} {SUBSING u‚ÇÇ} {x‚ÇÅ} {x‚ÇÇ} ind1 equ eqv ur1
    rewrite SUBSINGinj equ | SUBSINGinj eqv
    = updRel2-SUBSING u‚ÇÅ u‚ÇÇ (ind1 u‚ÇÅ u‚ÇÇ refl refl)


abstract
  updRel2-shiftNameUp‚â°‚ÜíPARTIAL : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b x‚ÇÅ x‚ÇÇ : Term}
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí x‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí x‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí PARTIAL x‚ÇÅ ‚â° shiftNameUp n a
                            ‚Üí PARTIAL x‚ÇÇ ‚â° shiftNameUp n b
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) x‚ÇÅ x‚ÇÇ
                            ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíPARTIAL n {name} {f} {g} {r} cf cg {PARTIAL u‚ÇÅ} {PARTIAL u‚ÇÇ} {x‚ÇÅ} {x‚ÇÇ} ind1 equ eqv ur1
    rewrite PARTIALinj equ | PARTIALinj eqv
    = updRel2-PARTIAL u‚ÇÅ u‚ÇÇ (ind1 u‚ÇÅ u‚ÇÇ refl refl)


abstract
  updRel2-shiftNameUp‚â°‚ÜíLIFT : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b x‚ÇÅ x‚ÇÇ : Term}
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí x‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí x‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí LIFT x‚ÇÅ ‚â° shiftNameUp n a
                            ‚Üí LIFT x‚ÇÇ ‚â° shiftNameUp n b
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) x‚ÇÅ x‚ÇÇ
                            ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíLIFT n {name} {f} {g} {r} cf cg {LIFT u‚ÇÅ} {LIFT u‚ÇÇ} {x‚ÇÅ} {x‚ÇÇ} ind1 equ eqv ur1
    rewrite LIFTinj equ | LIFTinj eqv
    = updRel2-LIFT u‚ÇÅ u‚ÇÇ (ind1 u‚ÇÅ u‚ÇÇ refl refl)


abstract
  updRel2-shiftNameUp‚â°‚ÜíLOWER : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b x‚ÇÅ x‚ÇÇ : Term}
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí x‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí x‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí LOWER x‚ÇÅ ‚â° shiftNameUp n a
                            ‚Üí LOWER x‚ÇÇ ‚â° shiftNameUp n b
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) x‚ÇÅ x‚ÇÇ
                            ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíLOWER n {name} {f} {g} {r} cf cg {LOWER u‚ÇÅ} {LOWER u‚ÇÇ} {x‚ÇÅ} {x‚ÇÇ} ind1 equ eqv ur1
    rewrite LOWERinj equ | LOWERinj eqv
    = updRel2-LOWER u‚ÇÅ u‚ÇÇ (ind1 u‚ÇÅ u‚ÇÇ refl refl)


abstract
  updRel2-shiftNameUp‚â°‚ÜíSHRINK : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b x‚ÇÅ x‚ÇÇ : Term}
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí x‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí x‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí SHRINK x‚ÇÅ ‚â° shiftNameUp n a
                            ‚Üí SHRINK x‚ÇÇ ‚â° shiftNameUp n b
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) x‚ÇÅ x‚ÇÇ
                            ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíSHRINK n {name} {f} {g} {r} cf cg {SHRINK u‚ÇÅ} {SHRINK u‚ÇÇ} {x‚ÇÅ} {x‚ÇÇ} ind1 equ eqv ur1
    rewrite SHRINKinj equ | SHRINKinj eqv
    = updRel2-SHRINK u‚ÇÅ u‚ÇÇ (ind1 u‚ÇÅ u‚ÇÇ refl refl)


abstract
  updRel2-shiftNameUp‚â°‚ÜíSUC : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b x‚ÇÅ x‚ÇÇ : Term}
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí x‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí x‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí SUC x‚ÇÅ ‚â° shiftNameUp n a
                            ‚Üí SUC x‚ÇÇ ‚â° shiftNameUp n b
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) x‚ÇÅ x‚ÇÇ
                            ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíSUC n {name} {f} {g} {r} cf cg {SUC u‚ÇÅ} {SUC u‚ÇÇ} {x‚ÇÅ} {x‚ÇÇ} ind1 equ eqv ur1
    rewrite SUCinj equ | SUCinj eqv
    = updRel2-SUC u‚ÇÅ u‚ÇÇ (ind1 u‚ÇÅ u‚ÇÇ refl refl)


abstract
  updRel2-shiftNameUp‚â°‚ÜíNATREC : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b x‚ÇÅ x‚ÇÇ y‚ÇÅ y‚ÇÇ z‚ÇÅ z‚ÇÇ : Term}
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí x‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí x‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí y‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí y‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí z‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí z‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí NATREC x‚ÇÅ y‚ÇÅ z‚ÇÅ ‚â° shiftNameUp n a
                            ‚Üí NATREC x‚ÇÇ y‚ÇÇ z‚ÇÇ ‚â° shiftNameUp n b
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) x‚ÇÅ x‚ÇÇ
                            ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíNATREC n {name} {f} {g} {r} cf cg {NATREC u‚ÇÅ v‚ÇÅ w‚ÇÅ} {NATREC u‚ÇÇ v‚ÇÇ w‚ÇÇ} {x‚ÇÅ} {x‚ÇÇ} {y‚ÇÅ} {y‚ÇÇ} {z‚ÇÅ} {z‚ÇÇ} ind1 ind2 ind3 equ eqv ur1
    rewrite NATRECinj1 equ | NATRECinj2 equ | NATRECinj3 equ
          | NATRECinj1 eqv | NATRECinj2 eqv | NATRECinj3 eqv
    = updRel2-NATREC u‚ÇÅ u‚ÇÇ v‚ÇÅ v‚ÇÇ w‚ÇÅ w‚ÇÇ (ind1 u‚ÇÅ u‚ÇÇ refl refl) (ind2 v‚ÇÅ v‚ÇÇ refl refl) (ind3 w‚ÇÅ w‚ÇÇ refl refl)


abstract
  updRel2-shiftNameUp‚â°‚ÜíLAMBDA : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b x‚ÇÅ x‚ÇÇ : Term}
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí x‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí x‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí LAMBDA x‚ÇÅ ‚â° shiftNameUp n a
                            ‚Üí LAMBDA x‚ÇÇ ‚â° shiftNameUp n b
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) x‚ÇÅ x‚ÇÇ
                            ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíLAMBDA n {name} {f} {g} {r} cf cg {LAMBDA u‚ÇÅ} {LAMBDA u‚ÇÇ} {x‚ÇÅ} {x‚ÇÇ} ind1 equ eqv ur1
    rewrite LAMinj equ | LAMinj eqv
    = updRel2-LAMBDA u‚ÇÅ u‚ÇÇ (ind1 u‚ÇÅ u‚ÇÇ refl refl)


abstract
  updRel2-shiftNameUp‚â°‚ÜíFIX : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b x‚ÇÅ x‚ÇÇ : Term}
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí x‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí x‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí FIX x‚ÇÅ ‚â° shiftNameUp n a
                            ‚Üí FIX x‚ÇÇ ‚â° shiftNameUp n b
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) x‚ÇÅ x‚ÇÇ
                            ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíFIX n {name} {f} {g} {r} cf cg {FIX u‚ÇÅ} {FIX u‚ÇÇ} {x‚ÇÅ} {x‚ÇÇ} ind1 equ eqv ur1
    rewrite FIXinj equ | FIXinj eqv
    = updRel2-FIX u‚ÇÅ u‚ÇÇ (ind1 u‚ÇÅ u‚ÇÇ refl refl)


abstract
  updRel2-shiftNameUp‚â°‚ÜíTERM : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b x‚ÇÅ x‚ÇÇ : Term}
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí x‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí x‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí TERM x‚ÇÅ ‚â° shiftNameUp n a
                            ‚Üí TERM x‚ÇÇ ‚â° shiftNameUp n b
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) x‚ÇÅ x‚ÇÇ
                            ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíTERM n {name} {f} {g} {r} cf cg {TERM u‚ÇÅ} {TERM u‚ÇÇ} {x‚ÇÅ} {x‚ÇÇ} ind1 equ eqv ur1
    rewrite TERMinj equ | TERMinj eqv
    = updRel2-TERM u‚ÇÅ u‚ÇÇ (ind1 u‚ÇÅ u‚ÇÇ refl refl)


abstract
  updRel2-shiftNameUp‚â°‚ÜíENC : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b x : Term}
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí x ‚â° shiftNameUp n u‚ÇÅ ‚Üí x ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí ENC x ‚â° shiftNameUp n a
                            ‚Üí ENC x ‚â° shiftNameUp n b
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) x x
                            ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíENC n {name} {f} {g} {r} cf cg {ENC u‚ÇÅ} {ENC u‚ÇÇ} {x} ind1 equ eqv ur1
    rewrite ENCinj equ | shiftNameUp-inj {n} {u‚ÇÅ} {u‚ÇÇ} (ENCinj eqv)
    = updRel2-ENC u‚ÇÇ (ind1 u‚ÇÇ u‚ÇÇ refl refl)


abstract
  updRel2-shiftNameUp‚â°‚ÜíFRESH : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b x‚ÇÅ x‚ÇÇ : Term}
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí x‚ÇÅ ‚â° shiftNameUp (suc n) u‚ÇÅ ‚Üí x‚ÇÇ ‚â° shiftNameUp (suc n) u‚ÇÇ ‚Üí updRel2 (suc name) (shiftNameUp 0 f) (shiftNameUp 0 g) (sren r) u‚ÇÅ u‚ÇÇ)
                            ‚Üí FRESH x‚ÇÅ ‚â° shiftNameUp n a
                            ‚Üí FRESH x‚ÇÇ ‚â° shiftNameUp n b
                            ‚Üí updRel2 (suc (sucIf‚â§ n name)) (shiftNameUp 0 (shiftNameUp n f)) (shiftNameUp 0 (shiftNameUp n g)) (sren (sucIf‚â§-ren n r)) x‚ÇÅ x‚ÇÇ
                            ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíFRESH n {name} {f} {g} {r} cf cg {FRESH u‚ÇÅ} {FRESH u‚ÇÇ} {x‚ÇÅ} {x‚ÇÇ} ind1 equ eqv ur1
    rewrite FRESHinj equ | FRESHinj eqv
    = updRel2-FRESH u‚ÇÅ u‚ÇÇ (ind1 u‚ÇÅ u‚ÇÇ refl refl)


abstract
  updRel2-shiftNameUp‚â°‚ÜíIFLT : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b x‚ÇÅ x‚ÇÇ y‚ÇÅ y‚ÇÇ z‚ÇÅ z‚ÇÇ w‚ÇÅ w‚ÇÇ : Term}
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí x‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí x‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí y‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí y‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí z‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí z‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí w‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí w‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí IFLT x‚ÇÅ y‚ÇÅ z‚ÇÅ w‚ÇÅ ‚â° shiftNameUp n a
                            ‚Üí IFLT x‚ÇÇ y‚ÇÇ z‚ÇÇ w‚ÇÇ ‚â° shiftNameUp n b
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) x‚ÇÅ x‚ÇÇ
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) y‚ÇÅ y‚ÇÇ
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) z‚ÇÅ z‚ÇÇ
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) w‚ÇÅ w‚ÇÇ
                            ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíIFLT n {name} {f} {g} {r} cf cg {IFLT s‚ÇÅ t‚ÇÅ u‚ÇÅ v‚ÇÅ} {IFLT s‚ÇÇ t‚ÇÇ u‚ÇÇ v‚ÇÇ} {x‚ÇÅ} {x‚ÇÇ} {y‚ÇÅ} {y‚ÇÇ} {z‚ÇÅ} {z‚ÇÇ} {w‚ÇÅ} {w‚ÇÇ} ind1 ind2 ind3 ind4 equ eqv ur1 ur2 ur3 ur4
    rewrite IFLTinj1 equ | IFLTinj2 equ | IFLTinj3 equ | IFLTinj4 equ
          | IFLTinj1 eqv | IFLTinj2 eqv | IFLTinj3 eqv | IFLTinj4 eqv
    = updRel2-IFLT s‚ÇÅ s‚ÇÇ t‚ÇÅ t‚ÇÇ u‚ÇÅ u‚ÇÇ v‚ÇÅ v‚ÇÇ (ind1 s‚ÇÅ s‚ÇÇ refl refl) (ind2 t‚ÇÅ t‚ÇÇ refl refl) (ind3 u‚ÇÅ u‚ÇÇ refl refl) (ind4 v‚ÇÅ v‚ÇÇ refl refl)


abstract
  updRel2-shiftNameUp‚â°‚ÜíIFEQ : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b x‚ÇÅ x‚ÇÇ y‚ÇÅ y‚ÇÇ z‚ÇÅ z‚ÇÇ w‚ÇÅ w‚ÇÇ : Term}
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí x‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí x‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí y‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí y‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí z‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí z‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí w‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí w‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí IFEQ x‚ÇÅ y‚ÇÅ z‚ÇÅ w‚ÇÅ ‚â° shiftNameUp n a
                            ‚Üí IFEQ x‚ÇÇ y‚ÇÇ z‚ÇÇ w‚ÇÇ ‚â° shiftNameUp n b
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) x‚ÇÅ x‚ÇÇ
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) y‚ÇÅ y‚ÇÇ
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) z‚ÇÅ z‚ÇÇ
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) w‚ÇÅ w‚ÇÇ
                            ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíIFEQ n {name} {f} {g} {r} cf cg {IFEQ s‚ÇÅ t‚ÇÅ u‚ÇÅ v‚ÇÅ} {IFEQ s‚ÇÇ t‚ÇÇ u‚ÇÇ v‚ÇÇ} {x‚ÇÅ} {x‚ÇÇ} {y‚ÇÅ} {y‚ÇÇ} {z‚ÇÅ} {z‚ÇÇ} {w‚ÇÅ} {w‚ÇÇ} ind1 ind2 ind3 ind4 equ eqv ur1 ur2 ur3 ur4
    rewrite IFEQinj1 equ | IFEQinj2 equ | IFEQinj3 equ | IFEQinj4 equ
          | IFEQinj1 eqv | IFEQinj2 eqv | IFEQinj3 eqv | IFEQinj4 eqv
    = updRel2-IFEQ s‚ÇÅ s‚ÇÇ t‚ÇÅ t‚ÇÇ u‚ÇÅ u‚ÇÇ v‚ÇÅ v‚ÇÇ (ind1 s‚ÇÅ s‚ÇÇ refl refl) (ind2 t‚ÇÅ t‚ÇÇ refl refl) (ind3 u‚ÇÅ u‚ÇÇ refl refl) (ind4 v‚ÇÅ v‚ÇÇ refl refl)


abstract
  updRel2-shiftNameUp‚â°‚ÜíMAPP : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b : Term} {s : ùïä} {y‚ÇÅ y‚ÇÇ : Term}
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí y‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí y‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí MAPP s y‚ÇÅ ‚â° shiftNameUp n a
                            ‚Üí MAPP s y‚ÇÇ ‚â° shiftNameUp n b
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) y‚ÇÅ y‚ÇÇ
                            ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíMAPP n {name} {f} {g} {r} cf cg {MAPP u‚ÇÅ v‚ÇÅ} {MAPP u‚ÇÇ v‚ÇÇ} {s} {y‚ÇÅ} {y‚ÇÇ} ind1 equ eqv ur1
    rewrite MAPPinj1 equ | MAPPinj2 equ | MAPPinj1 eqv | MAPPinj2 eqv
    = updRel2-MAPP u‚ÇÇ v‚ÇÅ v‚ÇÇ (ind1 v‚ÇÅ v‚ÇÇ refl refl)


{-
abstract
  updRel2-shiftNameUp‚â°‚ÜíEQB : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b x‚ÇÅ x‚ÇÇ y‚ÇÅ y‚ÇÇ z‚ÇÅ z‚ÇÇ w‚ÇÅ w‚ÇÇ : Term}
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí x‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí x‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí y‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí y‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí z‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí z‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí w‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí w‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí EQB x‚ÇÅ y‚ÇÅ z‚ÇÅ w‚ÇÅ ‚â° shiftNameUp n a
                            ‚Üí EQB x‚ÇÇ y‚ÇÇ z‚ÇÇ w‚ÇÇ ‚â° shiftNameUp n b
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) x‚ÇÅ x‚ÇÇ
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) y‚ÇÅ y‚ÇÇ
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) z‚ÇÅ z‚ÇÇ
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) w‚ÇÅ w‚ÇÇ
                            ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíEQB n {name} {f} {g} {r} cf cg {EQB s‚ÇÅ t‚ÇÅ u‚ÇÅ v‚ÇÅ} {EQB s‚ÇÇ t‚ÇÇ u‚ÇÇ v‚ÇÇ} {x‚ÇÅ} {x‚ÇÇ} {y‚ÇÅ} {y‚ÇÇ} {z‚ÇÅ} {z‚ÇÇ} {w‚ÇÅ} {w‚ÇÇ} ind1 ind2 ind3 ind4 equ eqv ur1 ur2 ur3 ur4
    rewrite EQBinj1 equ | EQBinj2 equ | EQBinj3 equ | EQBinj4 equ
          | EQBinj1 eqv | EQBinj2 eqv | EQBinj3 eqv | EQBinj4 eqv
    = updRel2-EQB s‚ÇÅ s‚ÇÇ t‚ÇÅ t‚ÇÇ u‚ÇÅ u‚ÇÇ v‚ÇÅ v‚ÇÇ (ind1 s‚ÇÅ s‚ÇÇ refl refl) (ind2 t‚ÇÅ t‚ÇÇ refl refl) (ind3 u‚ÇÅ u‚ÇÇ refl refl) (ind4 v‚ÇÅ v‚ÇÇ refl refl)
-}


abstract
  updRel2-shiftNameUp‚â°‚ÜíDECIDE : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b x‚ÇÅ x‚ÇÇ y‚ÇÅ y‚ÇÇ z‚ÇÅ z‚ÇÇ : Term}
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí x‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí x‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí y‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí y‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí z‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí z‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí DECIDE x‚ÇÅ y‚ÇÅ z‚ÇÅ ‚â° shiftNameUp n a
                            ‚Üí DECIDE x‚ÇÇ y‚ÇÇ z‚ÇÇ ‚â° shiftNameUp n b
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) x‚ÇÅ x‚ÇÇ
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) y‚ÇÅ y‚ÇÇ
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) z‚ÇÅ z‚ÇÇ
                            ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíDECIDE n {name} {f} {g} {r} cf cg {DECIDE s‚ÇÅ t‚ÇÅ u‚ÇÅ} {DECIDE s‚ÇÇ t‚ÇÇ u‚ÇÇ} {x‚ÇÅ} {x‚ÇÇ} {y‚ÇÅ} {y‚ÇÇ} {z‚ÇÅ} {z‚ÇÇ} ind1 ind2 ind3 equ eqv ur1 ur2 ur3
    rewrite DECIDEinj1 equ | DECIDEinj2 equ | DECIDEinj3 equ
          | DECIDEinj1 eqv | DECIDEinj2 eqv | DECIDEinj3 eqv
    = updRel2-DECIDE s‚ÇÅ s‚ÇÇ t‚ÇÅ t‚ÇÇ u‚ÇÅ u‚ÇÇ (ind1 s‚ÇÅ s‚ÇÇ refl refl) (ind2 t‚ÇÅ t‚ÇÇ refl refl) (ind3 u‚ÇÅ u‚ÇÇ refl refl)


abstract
  updRel2-shiftNameUp‚â°‚ÜíEQ : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b x‚ÇÅ x‚ÇÇ y‚ÇÅ y‚ÇÇ z‚ÇÅ z‚ÇÇ : Term}
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí x‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí x‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí y‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí y‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí z‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí z‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí EQ x‚ÇÅ y‚ÇÅ z‚ÇÅ ‚â° shiftNameUp n a
                            ‚Üí EQ x‚ÇÇ y‚ÇÇ z‚ÇÇ ‚â° shiftNameUp n b
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) x‚ÇÅ x‚ÇÇ
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) y‚ÇÅ y‚ÇÇ
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) z‚ÇÅ z‚ÇÇ
                            ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíEQ n {name} {f} {g} {r} cf cg {EQ s‚ÇÅ t‚ÇÅ u‚ÇÅ} {EQ s‚ÇÇ t‚ÇÇ u‚ÇÇ} {x‚ÇÅ} {x‚ÇÇ} {y‚ÇÅ} {y‚ÇÇ} {z‚ÇÅ} {z‚ÇÇ} ind1 ind2 ind3 equ eqv ur1 ur2 ur3
    rewrite EQinj1 equ | EQinj2 equ | EQinj3 equ
          | EQinj1 eqv | EQinj2 eqv | EQinj3 eqv
    = updRel2-EQ s‚ÇÅ s‚ÇÇ t‚ÇÅ t‚ÇÇ u‚ÇÅ u‚ÇÇ (ind1 s‚ÇÅ s‚ÇÇ refl refl) (ind2 t‚ÇÅ t‚ÇÇ refl refl) (ind3 u‚ÇÅ u‚ÇÇ refl refl)


abstract
  updRel2-shiftNameUp‚â°‚ÜíCHOOSE : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b x‚ÇÅ x‚ÇÇ y‚ÇÅ y‚ÇÇ : Term}
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí x‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí x‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí y‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí y‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí CHOOSE x‚ÇÅ y‚ÇÅ ‚â° shiftNameUp n a
                            ‚Üí CHOOSE x‚ÇÇ y‚ÇÇ ‚â° shiftNameUp n b
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) x‚ÇÅ x‚ÇÇ
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) y‚ÇÅ y‚ÇÇ
                            ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíCHOOSE n {name} {f} {g} {r} cf cg {CHOOSE u‚ÇÅ v‚ÇÅ} {CHOOSE u‚ÇÇ v‚ÇÇ} {x‚ÇÅ} {x‚ÇÇ} {y‚ÇÅ} {y‚ÇÇ} ind1 ind2 equ eqv ur1 ur2
    rewrite CHOOSEinj1 equ | CHOOSEinj2 equ | CHOOSEinj1 eqv | CHOOSEinj2 eqv
    = updRel2-CHOOSE u‚ÇÅ u‚ÇÇ v‚ÇÅ v‚ÇÇ (ind1 u‚ÇÅ u‚ÇÇ refl refl) (ind2 v‚ÇÅ v‚ÇÇ refl refl)


abstract
  updRel2-shiftNameUp‚â°‚ÜíFFDEFS : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b x‚ÇÅ x‚ÇÇ y‚ÇÅ y‚ÇÇ : Term}
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí x‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí x‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí ((u‚ÇÅ u‚ÇÇ : Term) ‚Üí y‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí y‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ)
                            ‚Üí FFDEFS x‚ÇÅ y‚ÇÅ ‚â° shiftNameUp n a
                            ‚Üí FFDEFS x‚ÇÇ y‚ÇÇ ‚â° shiftNameUp n b
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) x‚ÇÅ x‚ÇÇ
                            ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) y‚ÇÅ y‚ÇÇ
                            ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚ÜíFFDEFS n {name} {f} {g} {r} cf cg {FFDEFS u‚ÇÅ v‚ÇÅ} {FFDEFS u‚ÇÇ v‚ÇÇ} {x‚ÇÅ} {x‚ÇÇ} {y‚ÇÅ} {y‚ÇÇ} ind1 ind2 equ eqv ur1 ur2
    rewrite FFDEFSinj1 equ | FFDEFSinj2 equ | FFDEFSinj1 eqv | FFDEFSinj2 eqv
    = updRel2-FFDEFS u‚ÇÅ u‚ÇÇ v‚ÇÅ v‚ÇÇ (ind1 u‚ÇÅ u‚ÇÇ refl refl) (ind2 v‚ÇÅ v‚ÇÇ refl refl)


abstract
  updRel2-shiftNameUp‚â°‚Üí : (n : ‚Ñï) {name : Name} {f g : Term} {r : ren} (cf : # f) (cg : # g) {a b u v : Term}
                          ‚Üí u ‚â° shiftNameUp n a
                          ‚Üí v ‚â° shiftNameUp n b
                          ‚Üí updRel2 (sucIf‚â§ n name) (shiftNameUp n f) (shiftNameUp n g) (sucIf‚â§-ren n r) u v
                          ‚Üí updRel2 name f g r a b
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(VAR x)} {.(VAR x)} equ eqv (updRel2-VAR x) = updRel2-shiftNameUp‚â°‚ÜíVAR n cf cg equ eqv
--  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.NAT} {.NAT} equ eqv updRel2-NAT = updRel2-shiftNameUp‚â°‚ÜíNAT n cf cg equ eqv
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.QNAT} {.QNAT} equ eqv updRel2-QNAT = updRel2-shiftNameUp‚â°‚ÜíQNAT n cf cg equ eqv
--  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.TNAT} {.TNAT} equ eqv updRel2-TNAT = updRel2-shiftNameUp‚â°‚ÜíTNAT n cf cg equ eqv
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(LT a‚ÇÅ b‚ÇÅ)} {.(LT a‚ÇÇ b‚ÇÇ)} equ eqv (updRel2-LT a‚ÇÅ a‚ÇÇ b‚ÇÅ b‚ÇÇ ur ur‚ÇÅ)
    = updRel2-shiftNameUp‚â°‚ÜíLT n cf cg ind1 ind2 equ eqv ur ur‚ÇÅ
    where
      ind1 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí a‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí a‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind1 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {a‚ÇÅ} {a‚ÇÇ} e‚ÇÅ e‚ÇÇ ur

      ind2 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí b‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí b‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind2 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {b‚ÇÅ} {b‚ÇÇ} e‚ÇÅ e‚ÇÇ ur‚ÇÅ
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(QLT a‚ÇÅ b‚ÇÅ)} {.(QLT a‚ÇÇ b‚ÇÇ)} equ eqv (updRel2-QLT a‚ÇÅ a‚ÇÇ b‚ÇÅ b‚ÇÇ ur ur‚ÇÅ)
    = updRel2-shiftNameUp‚â°‚ÜíQLT n cf cg ind1 ind2 equ eqv ur ur‚ÇÅ
    where
      ind1 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí a‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí a‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind1 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {a‚ÇÅ} {a‚ÇÇ} e‚ÇÅ e‚ÇÇ ur

      ind2 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí b‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí b‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind2 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {b‚ÇÅ} {b‚ÇÇ} e‚ÇÅ e‚ÇÇ ur‚ÇÅ
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(NUM x)} {.(NUM x)} equ eqv (updRel2-NUM x) = updRel2-shiftNameUp‚â°‚ÜíNUM n cf cg equ eqv
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(IFLT a‚ÇÅ b‚ÇÅ c‚ÇÅ d‚ÇÅ)} {.(IFLT a‚ÇÇ b‚ÇÇ c‚ÇÇ d‚ÇÇ)} equ eqv (updRel2-IFLT a‚ÇÅ a‚ÇÇ b‚ÇÅ b‚ÇÇ c‚ÇÅ c‚ÇÇ d‚ÇÅ d‚ÇÇ ur ur‚ÇÅ ur‚ÇÇ ur‚ÇÉ)
    = updRel2-shiftNameUp‚â°‚ÜíIFLT n cf cg ind1 ind2 ind3 ind4 equ eqv ur ur‚ÇÅ ur‚ÇÇ ur‚ÇÉ
    where
      ind1 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí a‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí a‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind1 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {a‚ÇÅ} {a‚ÇÇ} e‚ÇÅ e‚ÇÇ ur

      ind2 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí b‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí b‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind2 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {b‚ÇÅ} {b‚ÇÇ} e‚ÇÅ e‚ÇÇ ur‚ÇÅ

      ind3 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí c‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí c‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind3 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {c‚ÇÅ} {c‚ÇÇ} e‚ÇÅ e‚ÇÇ ur‚ÇÇ

      ind4 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí d‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí d‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind4 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {d‚ÇÅ} {d‚ÇÇ} e‚ÇÅ e‚ÇÇ ur‚ÇÉ
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(IFEQ a‚ÇÅ b‚ÇÅ c‚ÇÅ d‚ÇÅ)} {.(IFEQ a‚ÇÇ b‚ÇÇ c‚ÇÇ d‚ÇÇ)} equ eqv (updRel2-IFEQ a‚ÇÅ a‚ÇÇ b‚ÇÅ b‚ÇÇ c‚ÇÅ c‚ÇÇ d‚ÇÅ d‚ÇÇ ur ur‚ÇÅ ur‚ÇÇ ur‚ÇÉ)
    = updRel2-shiftNameUp‚â°‚ÜíIFEQ n cf cg ind1 ind2 ind3 ind4 equ eqv ur ur‚ÇÅ ur‚ÇÇ ur‚ÇÉ
    where
      ind1 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí a‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí a‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind1 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {a‚ÇÅ} {a‚ÇÇ} e‚ÇÅ e‚ÇÇ ur

      ind2 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí b‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí b‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind2 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {b‚ÇÅ} {b‚ÇÇ} e‚ÇÅ e‚ÇÇ ur‚ÇÅ

      ind3 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí c‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí c‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind3 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {c‚ÇÅ} {c‚ÇÇ} e‚ÇÅ e‚ÇÇ ur‚ÇÇ

      ind4 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí d‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí d‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind4 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {d‚ÇÅ} {d‚ÇÇ} e‚ÇÅ e‚ÇÇ ur‚ÇÉ
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(SUC a‚ÇÅ)} {.(SUC a‚ÇÇ)} equ eqv (updRel2-SUC a‚ÇÅ a‚ÇÇ ur)
    = updRel2-shiftNameUp‚â°‚ÜíSUC n cf cg ind1 equ eqv ur
    where
      ind1 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí a‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí a‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind1 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {a‚ÇÅ} {a‚ÇÇ} e‚ÇÅ e‚ÇÇ ur
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(NATREC a‚ÇÅ b‚ÇÅ c‚ÇÅ)} {.(NATREC a‚ÇÇ b‚ÇÇ c‚ÇÇ)} equ eqv (updRel2-NATREC a‚ÇÅ a‚ÇÇ b‚ÇÅ b‚ÇÇ c‚ÇÅ c‚ÇÇ ur ur‚ÇÅ ur‚ÇÇ)
    = updRel2-shiftNameUp‚â°‚ÜíNATREC n cf cg ind1 ind2 ind3 equ eqv ur
    where
      ind1 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí a‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí a‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind1 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {a‚ÇÅ} {a‚ÇÇ} e‚ÇÅ e‚ÇÇ ur

      ind2 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí b‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí b‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind2 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {b‚ÇÅ} {b‚ÇÇ} e‚ÇÅ e‚ÇÇ ur‚ÇÅ

      ind3 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí c‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí c‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind3 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {c‚ÇÅ} {c‚ÇÇ} e‚ÇÅ e‚ÇÇ ur‚ÇÇ
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(PI a‚ÇÅ b‚ÇÅ)} {.(PI a‚ÇÇ b‚ÇÇ)} equ eqv (updRel2-PI a‚ÇÅ a‚ÇÇ b‚ÇÅ b‚ÇÇ ur ur‚ÇÅ)
    = updRel2-shiftNameUp‚â°‚ÜíPI n cf cg ind1 ind2 equ eqv ur ur‚ÇÅ
    where
      ind1 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí a‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí a‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind1 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {a‚ÇÅ} {a‚ÇÇ} e‚ÇÅ e‚ÇÇ ur

      ind2 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí b‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí b‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind2 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {b‚ÇÅ} {b‚ÇÇ} e‚ÇÅ e‚ÇÇ ur‚ÇÅ
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(LAMBDA a‚ÇÅ)} {.(LAMBDA a‚ÇÇ)} equ eqv (updRel2-LAMBDA a‚ÇÅ a‚ÇÇ ur)
    = updRel2-shiftNameUp‚â°‚ÜíLAMBDA n cf cg ind1 equ eqv ur
    where
      ind1 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí a‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí a‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind1 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {a‚ÇÅ} {a‚ÇÇ} e‚ÇÅ e‚ÇÇ ur
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(APPLY a‚ÇÅ b‚ÇÅ)} {.(APPLY a‚ÇÇ b‚ÇÇ)} equ eqv (updRel2-APPLY a‚ÇÅ a‚ÇÇ b‚ÇÅ b‚ÇÇ ur ur‚ÇÅ)
    = updRel2-shiftNameUp‚â°‚ÜíAPPLY n cf cg ind1 ind2 equ eqv ur ur‚ÇÅ
    where
      ind1 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí a‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí a‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind1 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {a‚ÇÅ} {a‚ÇÇ} e‚ÇÅ e‚ÇÇ ur

      ind2 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí b‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí b‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind2 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {b‚ÇÅ} {b‚ÇÇ} e‚ÇÅ e‚ÇÇ ur‚ÇÅ
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(MSEQ s)} {.(MSEQ s)} equ eqv (updRel2-MSEQ s) = updRel2-shiftNameUp‚â°‚ÜíMSEQ n cf cg equ eqv
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(MAPP s a‚ÇÅ)} {.(MAPP s a‚ÇÇ)} equ eqv (updRel2-MAPP s a‚ÇÅ a‚ÇÇ ur)
    = updRel2-shiftNameUp‚â°‚ÜíMAPP n cf cg ind1 equ eqv ur
    where
      ind1 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí a‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí a‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind1 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {a‚ÇÅ} {a‚ÇÇ} e‚ÇÅ e‚ÇÇ ur
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(FIX a‚ÇÅ)} {.(FIX a‚ÇÇ)} equ eqv (updRel2-FIX a‚ÇÅ a‚ÇÇ ur)
    = updRel2-shiftNameUp‚â°‚ÜíFIX n cf cg ind1 equ eqv ur
    where
      ind1 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí a‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí a‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind1 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {a‚ÇÅ} {a‚ÇÇ} e‚ÇÅ e‚ÇÇ ur
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(LET a‚ÇÅ b‚ÇÅ)} {.(LET a‚ÇÇ b‚ÇÇ)} equ eqv (updRel2-LET a‚ÇÅ a‚ÇÇ b‚ÇÅ b‚ÇÇ ur ur‚ÇÅ)
    = updRel2-shiftNameUp‚â°‚ÜíLET n cf cg ind1 ind2 equ eqv ur ur‚ÇÅ
    where
      ind1 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí a‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí a‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind1 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {a‚ÇÅ} {a‚ÇÇ} e‚ÇÅ e‚ÇÇ ur

      ind2 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí b‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí b‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind2 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {b‚ÇÅ} {b‚ÇÇ} e‚ÇÅ e‚ÇÇ ur‚ÇÅ
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(SUM a‚ÇÅ b‚ÇÅ)} {.(SUM a‚ÇÇ b‚ÇÇ)} equ eqv (updRel2-SUM a‚ÇÅ a‚ÇÇ b‚ÇÅ b‚ÇÇ ur ur‚ÇÅ)
    = updRel2-shiftNameUp‚â°‚ÜíSUM n cf cg ind1 ind2 equ eqv ur ur‚ÇÅ
    where
      ind1 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí a‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí a‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind1 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {a‚ÇÅ} {a‚ÇÇ} e‚ÇÅ e‚ÇÇ ur

      ind2 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí b‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí b‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind2 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {b‚ÇÅ} {b‚ÇÇ} e‚ÇÅ e‚ÇÇ ur‚ÇÅ
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(PAIR a‚ÇÅ b‚ÇÅ)} {.(PAIR a‚ÇÇ b‚ÇÇ)} equ eqv (updRel2-PAIR a‚ÇÅ a‚ÇÇ b‚ÇÅ b‚ÇÇ ur ur‚ÇÅ)
    = updRel2-shiftNameUp‚â°‚ÜíPAIR n cf cg ind1 ind2 equ eqv ur ur‚ÇÅ
    where
      ind1 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí a‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí a‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind1 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {a‚ÇÅ} {a‚ÇÇ} e‚ÇÅ e‚ÇÇ ur

      ind2 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí b‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí b‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind2 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {b‚ÇÅ} {b‚ÇÇ} e‚ÇÅ e‚ÇÇ ur‚ÇÅ
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(SPREAD a‚ÇÅ b‚ÇÅ)} {.(SPREAD a‚ÇÇ b‚ÇÇ)} equ eqv (updRel2-SPREAD a‚ÇÅ a‚ÇÇ b‚ÇÅ b‚ÇÇ ur ur‚ÇÅ)
    = updRel2-shiftNameUp‚â°‚ÜíSPREAD n cf cg ind1 ind2 equ eqv ur ur‚ÇÅ
    where
      ind1 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí a‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí a‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind1 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {a‚ÇÅ} {a‚ÇÇ} e‚ÇÅ e‚ÇÇ ur

      ind2 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí b‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí b‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind2 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {b‚ÇÅ} {b‚ÇÇ} e‚ÇÅ e‚ÇÇ ur‚ÇÅ
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(WT a‚ÇÅ b‚ÇÅ c‚ÇÅ)} {.(WT a‚ÇÇ b‚ÇÇ c‚ÇÇ)} equ eqv (updRel2-WT a‚ÇÅ a‚ÇÇ b‚ÇÅ b‚ÇÇ c‚ÇÅ c‚ÇÇ ur ur‚ÇÅ ur‚ÇÇ)
    = updRel2-shiftNameUp‚â°‚ÜíWT n cf cg ind1 ind2 ind3 equ eqv ur ur‚ÇÅ ur‚ÇÇ
    where
      ind1 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí a‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí a‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind1 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {a‚ÇÅ} {a‚ÇÇ} e‚ÇÅ e‚ÇÇ ur

      ind2 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí b‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí b‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind2 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {b‚ÇÅ} {b‚ÇÇ} e‚ÇÅ e‚ÇÇ ur‚ÇÅ

      ind3 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí c‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí c‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind3 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {c‚ÇÅ} {c‚ÇÇ} e‚ÇÅ e‚ÇÇ ur‚ÇÇ
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(SUP a‚ÇÅ b‚ÇÅ)} {.(SUP a‚ÇÇ b‚ÇÇ)} equ eqv (updRel2-SUP a‚ÇÅ a‚ÇÇ b‚ÇÅ b‚ÇÇ ur ur‚ÇÅ)
    = updRel2-shiftNameUp‚â°‚ÜíSUP n cf cg ind1 ind2 equ eqv ur ur‚ÇÅ
    where
      ind1 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí a‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí a‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind1 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {a‚ÇÅ} {a‚ÇÇ} e‚ÇÅ e‚ÇÇ ur

      ind2 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí b‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí b‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind2 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {b‚ÇÅ} {b‚ÇÇ} e‚ÇÅ e‚ÇÇ ur‚ÇÅ
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(WREC a‚ÇÅ b‚ÇÅ)} {.(WREC a‚ÇÇ b‚ÇÇ)} equ eqv (updRel2-WREC a‚ÇÅ a‚ÇÇ b‚ÇÅ b‚ÇÇ ur ur‚ÇÅ)
    = updRel2-shiftNameUp‚â°‚ÜíWREC n cf cg ind1 ind2 equ eqv ur ur‚ÇÅ
    where
      ind1 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí a‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí a‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind1 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {a‚ÇÅ} {a‚ÇÇ} e‚ÇÅ e‚ÇÇ ur

      ind2 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí b‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí b‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind2 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {b‚ÇÅ} {b‚ÇÇ} e‚ÇÅ e‚ÇÇ ur‚ÇÅ
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(MT a‚ÇÅ b‚ÇÅ c‚ÇÅ)} {.(MT a‚ÇÇ b‚ÇÇ c‚ÇÇ)} equ eqv (updRel2-MT a‚ÇÅ a‚ÇÇ b‚ÇÅ b‚ÇÇ c‚ÇÅ c‚ÇÇ ur ur‚ÇÅ ur‚ÇÇ)
    = updRel2-shiftNameUp‚â°‚ÜíMT n cf cg ind1 ind2 ind3 equ eqv ur ur‚ÇÅ ur‚ÇÇ
    where
      ind1 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí a‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí a‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind1 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {a‚ÇÅ} {a‚ÇÇ} e‚ÇÅ e‚ÇÇ ur

      ind2 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí b‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí b‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind2 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {b‚ÇÅ} {b‚ÇÇ} e‚ÇÅ e‚ÇÇ ur‚ÇÅ

      ind3 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí c‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí c‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind3 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {c‚ÇÅ} {c‚ÇÇ} e‚ÇÅ e‚ÇÇ ur‚ÇÇ
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(SET a‚ÇÅ b‚ÇÅ)} {.(SET a‚ÇÇ b‚ÇÇ)} equ eqv (updRel2-SET a‚ÇÅ a‚ÇÇ b‚ÇÅ b‚ÇÇ ur ur‚ÇÅ)
    = updRel2-shiftNameUp‚â°‚ÜíSET n cf cg ind1 ind2 equ eqv ur ur‚ÇÅ
    where
      ind1 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí a‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí a‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind1 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {a‚ÇÅ} {a‚ÇÇ} e‚ÇÅ e‚ÇÇ ur

      ind2 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí b‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí b‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind2 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {b‚ÇÅ} {b‚ÇÇ} e‚ÇÅ e‚ÇÇ ur‚ÇÅ
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(ISECT a‚ÇÅ b‚ÇÅ)} {.(ISECT a‚ÇÇ b‚ÇÇ)} equ eqv (updRel2-ISECT a‚ÇÅ a‚ÇÇ b‚ÇÅ b‚ÇÇ ur ur‚ÇÅ)
    = updRel2-shiftNameUp‚â°‚ÜíISECT n cf cg ind1 ind2 equ eqv ur ur‚ÇÅ
    where
      ind1 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí a‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí a‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind1 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {a‚ÇÅ} {a‚ÇÇ} e‚ÇÅ e‚ÇÇ ur

      ind2 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí b‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí b‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind2 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {b‚ÇÅ} {b‚ÇÇ} e‚ÇÅ e‚ÇÇ ur‚ÇÅ
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(TUNION a‚ÇÅ b‚ÇÅ)} {.(TUNION a‚ÇÇ b‚ÇÇ)} equ eqv (updRel2-TUNION a‚ÇÅ a‚ÇÇ b‚ÇÅ b‚ÇÇ ur ur‚ÇÅ)
    = updRel2-shiftNameUp‚â°‚ÜíTUNION n cf cg ind1 ind2 equ eqv ur ur‚ÇÅ
    where
      ind1 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí a‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí a‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind1 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {a‚ÇÅ} {a‚ÇÇ} e‚ÇÅ e‚ÇÇ ur

      ind2 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí b‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí b‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind2 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {b‚ÇÅ} {b‚ÇÇ} e‚ÇÅ e‚ÇÇ ur‚ÇÅ
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(UNION a‚ÇÅ b‚ÇÅ)} {.(UNION a‚ÇÇ b‚ÇÇ)} equ eqv (updRel2-UNION a‚ÇÅ a‚ÇÇ b‚ÇÅ b‚ÇÇ ur ur‚ÇÅ)
    = updRel2-shiftNameUp‚â°‚ÜíUNION n cf cg ind1 ind2 equ eqv ur ur‚ÇÅ
    where
      ind1 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí a‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí a‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind1 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {a‚ÇÅ} {a‚ÇÇ} e‚ÇÅ e‚ÇÇ ur

      ind2 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí b‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí b‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind2 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {b‚ÇÅ} {b‚ÇÇ} e‚ÇÅ e‚ÇÇ ur‚ÇÅ
{-  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(QTUNION a‚ÇÅ b‚ÇÅ)} {.(QTUNION a‚ÇÇ b‚ÇÇ)} equ eqv (updRel2-QTUNION a‚ÇÅ a‚ÇÇ b‚ÇÅ b‚ÇÇ ur ur‚ÇÅ)
    = updRel2-shiftNameUp‚â°‚ÜíQTUNION n cf cg ind1 ind2 equ eqv ur ur‚ÇÅ
    where
      ind1 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí a‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí a‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind1 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {a‚ÇÅ} {a‚ÇÇ} e‚ÇÅ e‚ÇÇ ur

      ind2 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí b‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí b‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind2 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {b‚ÇÅ} {b‚ÇÇ} e‚ÇÅ e‚ÇÇ ur‚ÇÅ-}
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(INL a‚ÇÅ)} {.(INL a‚ÇÇ)} equ eqv (updRel2-INL a‚ÇÅ a‚ÇÇ ur)
    = updRel2-shiftNameUp‚â°‚ÜíINL n cf cg ind1 equ eqv ur
    where
      ind1 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí a‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí a‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind1 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {a‚ÇÅ} {a‚ÇÇ} e‚ÇÅ e‚ÇÇ ur
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(INR a‚ÇÅ)} {.(INR a‚ÇÇ)} equ eqv (updRel2-INR a‚ÇÅ a‚ÇÇ ur)
    = updRel2-shiftNameUp‚â°‚ÜíINR n cf cg ind1 equ eqv ur
    where
      ind1 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí a‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí a‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind1 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {a‚ÇÅ} {a‚ÇÇ} e‚ÇÅ e‚ÇÇ ur
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(DECIDE a‚ÇÅ b‚ÇÅ c‚ÇÅ)} {.(DECIDE a‚ÇÇ b‚ÇÇ c‚ÇÇ)} equ eqv (updRel2-DECIDE a‚ÇÅ a‚ÇÇ b‚ÇÅ b‚ÇÇ c‚ÇÅ c‚ÇÇ ur ur‚ÇÅ ur‚ÇÇ)
    = updRel2-shiftNameUp‚â°‚ÜíDECIDE n cf cg ind1 ind2 ind3 equ eqv ur ur‚ÇÅ ur‚ÇÇ
    where
      ind1 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí a‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí a‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind1 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {a‚ÇÅ} {a‚ÇÇ} e‚ÇÅ e‚ÇÇ ur

      ind2 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí b‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí b‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind2 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {b‚ÇÅ} {b‚ÇÇ} e‚ÇÅ e‚ÇÇ ur‚ÇÅ

      ind3 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí c‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí c‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind3 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {c‚ÇÅ} {c‚ÇÇ} e‚ÇÅ e‚ÇÇ ur‚ÇÇ
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(EQ a‚ÇÅ b‚ÇÅ c‚ÇÅ)} {.(EQ a‚ÇÇ b‚ÇÇ c‚ÇÇ)} equ eqv (updRel2-EQ a‚ÇÅ a‚ÇÇ b‚ÇÅ b‚ÇÇ c‚ÇÅ c‚ÇÇ ur ur‚ÇÅ ur‚ÇÇ)
    = updRel2-shiftNameUp‚â°‚ÜíEQ n cf cg ind1 ind2 ind3 equ eqv ur ur‚ÇÅ ur‚ÇÇ
    where
      ind1 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí a‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí a‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind1 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {a‚ÇÅ} {a‚ÇÇ} e‚ÇÅ e‚ÇÇ ur

      ind2 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí b‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí b‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind2 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {b‚ÇÅ} {b‚ÇÇ} e‚ÇÅ e‚ÇÇ ur‚ÇÅ

      ind3 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí c‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí c‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind3 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {c‚ÇÅ} {c‚ÇÇ} e‚ÇÅ e‚ÇÇ ur‚ÇÇ
{-  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(EQB a‚ÇÅ b‚ÇÅ c‚ÇÅ d‚ÇÅ)} {.(EQB a‚ÇÇ b‚ÇÇ c‚ÇÇ d‚ÇÇ)} equ eqv (updRel2-EQB a‚ÇÅ a‚ÇÇ b‚ÇÅ b‚ÇÇ c‚ÇÅ c‚ÇÇ d‚ÇÅ d‚ÇÇ ur ur‚ÇÅ ur‚ÇÇ ur‚ÇÉ)
    = updRel2-shiftNameUp‚â°‚ÜíEQB n cf cg ind1 ind2 ind3 ind4 equ eqv ur ur‚ÇÅ ur‚ÇÇ ur‚ÇÉ
    where
      ind1 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí a‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí a‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind1 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {a‚ÇÅ} {a‚ÇÇ} e‚ÇÅ e‚ÇÇ ur

      ind2 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí b‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí b‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind2 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {b‚ÇÅ} {b‚ÇÇ} e‚ÇÅ e‚ÇÇ ur‚ÇÅ

      ind3 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí c‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí c‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind3 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {c‚ÇÅ} {c‚ÇÇ} e‚ÇÅ e‚ÇÇ ur‚ÇÇ

      ind4 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí d‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí d‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind4 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {d‚ÇÅ} {d‚ÇÇ} e‚ÇÅ e‚ÇÇ ur‚ÇÉ-}
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.AX} {.AX} equ eqv updRel2-AX = updRel2-shiftNameUp‚â°‚ÜíAX n cf cg equ eqv
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.FREE} {.FREE} equ eqv updRel2-FREE = updRel2-shiftNameUp‚â°‚ÜíFREE n cf cg equ eqv
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(CS name1)} {.(CS name2)} equ eqv (updRel2-CS name1 name2 x x‚ÇÅ x‚ÇÇ) = updRel2-shiftNameUp‚â°‚ÜíCS n cf cg equ eqv x‚ÇÇ x x‚ÇÅ
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(NAME name1)} {.(NAME name2)} equ eqv (updRel2-NAME name1 name2 x x‚ÇÅ x‚ÇÇ) = updRel2-shiftNameUp‚â°‚ÜíNAME n cf cg equ eqv x‚ÇÇ x x‚ÇÅ
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(FRESH a‚ÇÅ)} {.(FRESH a‚ÇÇ)} equ eqv (updRel2-FRESH a‚ÇÅ a‚ÇÇ ur)
    = updRel2-shiftNameUp‚â°‚ÜíFRESH n cf cg ind1 equ eqv ur
    where
      ind1 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí a‚ÇÅ ‚â° shiftNameUp (suc n) u‚ÇÅ ‚Üí a‚ÇÇ ‚â° shiftNameUp (suc n) u‚ÇÇ ‚Üí updRel2 (suc name) (shiftNameUp 0 f) (shiftNameUp 0 g) (sren r) u‚ÇÅ u‚ÇÇ
      ind1 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí (suc n) {suc name} {shiftNameUp 0 f} {shiftNameUp 0 g} {sren r} (‚Üí#shiftNameUp 0 {f} cf) (‚Üí#shiftNameUp 0 {g} cg) {u‚ÇÅ} {u‚ÇÇ} {a‚ÇÅ} {a‚ÇÇ} e‚ÇÅ e‚ÇÇ ur1
        where
          seq1 : suc (sucIf‚â§ n name) ‚â° sucIf‚â§ (suc n) (sucIf‚â§ 0 name)
          seq1 rewrite sym (sucIf‚â§-sucIf‚â§ {name} {0} {n} _‚â§_.z‚â§n) | sym (suc‚â°sucIf‚â§0 (sucIf‚â§ n name)) = refl

          seq2 : sren (sucIf‚â§-ren n r) ‚â° sucIf‚â§-ren (suc n) (sren r)
          seq2 = sym (sucIf‚â§-ren-suc-sren n r)

          ur1 : updRel2 (sucIf‚â§ (suc n) (suc name))
                        (shiftNameUp (suc n) (shiftNameUp 0 f))
                        (shiftNameUp (suc n) (shiftNameUp 0 g))
                        (sucIf‚â§-ren (suc n) (sren r))
                        a‚ÇÅ
                        a‚ÇÇ
          ur1 rewrite suc‚â°sucIf‚â§0 name | sym seq1 | sym seq2 | sym (shiftNameUp-shiftNameUp {0} {n} {f} _‚â§_.z‚â§n) | sym (shiftNameUp-shiftNameUp {0} {n} {g} _‚â§_.z‚â§n) = ur
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(LOAD a‚ÇÅ)} {.(LOAD a‚ÇÅ)} equ eqv (updRel2-LOAD a‚ÇÅ) = updRel2-shiftNameUp‚â°‚ÜíLOAD n cf cg equ eqv
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(CHOOSE a‚ÇÅ b‚ÇÅ)} {.(CHOOSE a‚ÇÇ b‚ÇÇ)} equ eqv (updRel2-CHOOSE a‚ÇÅ a‚ÇÇ b‚ÇÅ b‚ÇÇ ur ur‚ÇÅ)
    = updRel2-shiftNameUp‚â°‚ÜíCHOOSE n cf cg ind1 ind2 equ eqv ur ur‚ÇÅ
    where
      ind1 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí a‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí a‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind1 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {a‚ÇÅ} {a‚ÇÇ} e‚ÇÅ e‚ÇÇ ur

      ind2 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí b‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí b‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind2 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {b‚ÇÅ} {b‚ÇÇ} e‚ÇÅ e‚ÇÇ ur‚ÇÅ
{--  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(TSQUASH a‚ÇÅ)} {.(TSQUASH a‚ÇÇ)} equ eqv (updRel2-TSQUASH a‚ÇÅ a‚ÇÇ ur)
    = updRel2-shiftNameUp‚â°‚ÜíTSQUASH n cf cg ind1 equ eqv ur
    where
      ind1 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí a‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí a‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind1 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {a‚ÇÅ} {a‚ÇÇ} e‚ÇÅ e‚ÇÇ ur--}
{-  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(TTRUNC a‚ÇÅ)} {.(TTRUNC a‚ÇÇ)} equ eqv (updRel2-TTRUNC a‚ÇÅ a‚ÇÇ ur)
    = updRel2-shiftNameUp‚â°‚ÜíTTRUNC n cf cg ind1 equ eqv ur
    where
      ind1 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí a‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí a‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind1 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {a‚ÇÅ} {a‚ÇÇ} e‚ÇÅ e‚ÇÇ ur-}
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.NOWRITE} {.NOWRITE} equ eqv updRel2-NOWRITE = updRel2-shiftNameUp‚â°‚ÜíNOWRITE n cf cg equ eqv
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.NOREAD}  {.NOREAD}  equ eqv updRel2-NOREAD  = updRel2-shiftNameUp‚â°‚ÜíNOREAD  n cf cg equ eqv
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(SUBSING a‚ÇÅ)} {.(SUBSING a‚ÇÇ)} equ eqv (updRel2-SUBSING a‚ÇÅ a‚ÇÇ ur)
    = updRel2-shiftNameUp‚â°‚ÜíSUBSING n cf cg ind1 equ eqv ur
    where
      ind1 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí a‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí a‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind1 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {a‚ÇÅ} {a‚ÇÇ} e‚ÇÅ e‚ÇÇ ur
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.PURE} {.PURE} equ eqv updRel2-PURE = updRel2-shiftNameUp‚â°‚ÜíPURE n cf cg equ eqv
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.NOSEQ} {.NOSEQ} equ eqv updRel2-NOSEQ = updRel2-shiftNameUp‚â°‚ÜíNOSEQ n cf cg equ eqv
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.NOENC} {.NOENC} equ eqv updRel2-NOENC = updRel2-shiftNameUp‚â°‚ÜíNOENC n cf cg equ eqv
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(TERM a‚ÇÅ)} {.(TERM a‚ÇÇ)} equ eqv (updRel2-TERM a‚ÇÅ a‚ÇÇ ur)
    = updRel2-shiftNameUp‚â°‚ÜíTERM n cf cg ind1 equ eqv ur
    where
      ind1 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí a‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí a‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind1 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {a‚ÇÅ} {a‚ÇÇ} e‚ÇÅ e‚ÇÇ ur
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(ENC a‚ÇÅ)} {.(ENC a‚ÇÅ)} equ eqv (updRel2-ENC a‚ÇÅ ur)
    = updRel2-shiftNameUp‚â°‚ÜíENC n cf cg ind1 equ eqv ur
    where
      ind1 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí a‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí a‚ÇÅ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind1 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {a‚ÇÅ} {a‚ÇÅ} e‚ÇÅ e‚ÇÇ ur
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(PARTIAL a‚ÇÅ)} {.(PARTIAL a‚ÇÇ)} equ eqv (updRel2-PARTIAL a‚ÇÅ a‚ÇÇ ur)
    = updRel2-shiftNameUp‚â°‚ÜíPARTIAL n cf cg ind1 equ eqv ur
    where
      ind1 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí a‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí a‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind1 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {a‚ÇÅ} {a‚ÇÇ} e‚ÇÅ e‚ÇÇ ur
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(FFDEFS a‚ÇÅ b‚ÇÅ)} {.(FFDEFS a‚ÇÇ b‚ÇÇ)} equ eqv (updRel2-FFDEFS a‚ÇÅ a‚ÇÇ b‚ÇÅ b‚ÇÇ ur ur‚ÇÅ)
    = updRel2-shiftNameUp‚â°‚ÜíFFDEFS n cf cg ind1 ind2 equ eqv ur ur‚ÇÅ
    where
      ind1 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí a‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí a‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind1 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {a‚ÇÅ} {a‚ÇÇ} e‚ÇÅ e‚ÇÇ ur

      ind2 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí b‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí b‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind2 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {b‚ÇÅ} {b‚ÇÇ} e‚ÇÅ e‚ÇÇ ur‚ÇÅ
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(UNIV x)} {.(UNIV x)} equ eqv (updRel2-UNIV x) = updRel2-shiftNameUp‚â°‚ÜíUNIV n cf cg equ eqv
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(LIFT a‚ÇÅ)} {.(LIFT a‚ÇÇ)} equ eqv (updRel2-LIFT a‚ÇÅ a‚ÇÇ ur)
    = updRel2-shiftNameUp‚â°‚ÜíLIFT n cf cg ind1 equ eqv ur
    where
      ind1 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí a‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí a‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind1 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {a‚ÇÅ} {a‚ÇÇ} e‚ÇÅ e‚ÇÇ ur
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(LOWER a‚ÇÅ)} {.(LOWER a‚ÇÇ)} equ eqv (updRel2-LOWER a‚ÇÅ a‚ÇÇ ur)
    = updRel2-shiftNameUp‚â°‚ÜíLOWER n cf cg ind1 equ eqv ur
    where
      ind1 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí a‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí a‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind1 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {a‚ÇÅ} {a‚ÇÇ} e‚ÇÅ e‚ÇÇ ur
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(SHRINK a‚ÇÅ)} {.(SHRINK a‚ÇÇ)} equ eqv (updRel2-SHRINK a‚ÇÅ a‚ÇÇ ur)
    = updRel2-shiftNameUp‚â°‚ÜíSHRINK n cf cg ind1 equ eqv ur
    where
      ind1 : (u‚ÇÅ u‚ÇÇ : Term) ‚Üí a‚ÇÅ ‚â° shiftNameUp n u‚ÇÅ ‚Üí a‚ÇÇ ‚â° shiftNameUp n u‚ÇÇ ‚Üí updRel2 name f g r u‚ÇÅ u‚ÇÇ
      ind1 u‚ÇÅ u‚ÇÇ e‚ÇÅ e‚ÇÇ = updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {u‚ÇÅ} {u‚ÇÇ} {a‚ÇÅ} {a‚ÇÇ} e‚ÇÅ e‚ÇÇ ur
  updRel2-shiftNameUp‚â°‚Üí n {name} {f} {g} {r} cf cg {a} {b} {.(upd (sucIf‚â§ n name) (shiftNameUp n f))} {.(force (shiftNameUp n g))} equ eqv updRel2-upd
    = updRel2-shiftNameUp‚â°‚Üíupd n cf cg equ eqv

\end{code}
